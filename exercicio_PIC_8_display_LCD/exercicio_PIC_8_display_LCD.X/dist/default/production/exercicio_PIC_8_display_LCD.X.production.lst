

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 09 15:30:21 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.41
    42                           ; Generated 25/01/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataBANK0
    77  002314                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _qtdDias_mes
    81  002314  0000               	dw	0
    82  002316  001F               	dw	31
    83  002318  001C               	dw	28
    84  00231A  001F               	dw	31
    85  00231C  001E               	dw	30
    86  00231E  001F               	dw	31
    87  002320  001E               	dw	30
    88  002322  001F               	dw	31
    89  002324  001F               	dw	31
    90  002326  001E               	dw	30
    91  002328  001F               	dw	31
    92  00232A  001E               	dw	30
    93  00232C  001F               	dw	31
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt stack 0
    98  000800  00                 	db	0
    99  000801                     _dpowers:
   100                           	opt stack 0
   101  000801  0001               	dw	1
   102  000803  000A               	dw	10
   103  000805  0064               	dw	100
   104  000807  03E8               	dw	1000
   105  000809  2710               	dw	10000
   106  00080B                     __end_of_dpowers:
   107                           	opt stack 0
   108  0000                     _TMR0	set	4054
   109  0000                     _TRISBbits	set	3987
   110  0000                     _PORTB	set	3969
   111  0000                     _LATBbits	set	3978
   112  0000                     _PORTDbits	set	3971
   113  0000                     _PORTAbits	set	3968
   114  0000                     _TRISDbits	set	3989
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISAbits	set	3986
   117  0000                     _INTCONbits	set	4082
   118  0000                     _T0CONbits	set	4053
   119  0000                     _TMR0IF	set	32658
   120  00080B                     STR_3:
   121  00080B  25                 	db	37
   122  00080C  64                 	db	100	;'d'
   123  00080D  25                 	db	37
   124  00080E  64                 	db	100	;'d'
   125  00080F  3A                 	db	58	;':'
   126  000810  25                 	db	37
   127  000811  64                 	db	100	;'d'
   128  000812  25                 	db	37
   129  000813  64                 	db	100	;'d'
   130  000814  3A                 	db	58	;':'
   131  000815  25                 	db	37
   132  000816  64                 	db	100	;'d'
   133  000817  25                 	db	37
   134  000818  64                 	db	100	;'d'
   135  000819  20                 	db	32
   136  00081A  20                 	db	32
   137  00081B  20                 	db	32
   138  00081C  20                 	db	32
   139  00081D  20                 	db	32
   140  00081E  20                 	db	32
   141  00081F  20                 	db	32
   142  000820  20                 	db	32
   143  000821  00                 	db	0
   144  000822                     STR_1:
   145  000822  48                 	db	72	;'H'
   146  000823  4F                 	db	79	;'O'
   147  000824  52                 	db	82	;'R'
   148  000825  41                 	db	65	;'A'
   149  000826  3A                 	db	58	;':'
   150  000827  20                 	db	32
   151  000828  25                 	db	37
   152  000829  64                 	db	100	;'d'
   153  00082A  25                 	db	37
   154  00082B  64                 	db	100	;'d'
   155  00082C  3A                 	db	58	;':'
   156  00082D  25                 	db	37
   157  00082E  64                 	db	100	;'d'
   158  00082F  25                 	db	37
   159  000830  64                 	db	100	;'d'
   160  000831  3A                 	db	58	;':'
   161  000832  25                 	db	37
   162  000833  64                 	db	100	;'d'
   163  000834  25                 	db	37
   164  000835  64                 	db	100	;'d'
   165  000836  20                 	db	32
   166  000837  00                 	db	0
   167  000838                     STR_2:
   168  000838  44                 	db	68	;'D'
   169  000839  41                 	db	65	;'A'
   170  00083A  54                 	db	84	;'T'
   171  00083B  41                 	db	65	;'A'
   172  00083C  3A                 	db	58	;':'
   173  00083D  20                 	db	32
   174  00083E  25                 	db	37
   175  00083F  64                 	db	100	;'d'
   176  000840  25                 	db	37
   177  000841  64                 	db	100	;'d'
   178  000842  3A                 	db	58	;':'
   179  000843  25                 	db	37
   180  000844  64                 	db	100	;'d'
   181  000845  25                 	db	37
   182  000846  64                 	db	100	;'d'
   183  000847  3A                 	db	58	;':'
   184  000848  25                 	db	37
   185  000849  64                 	db	100	;'d'
   186  00084A  25                 	db	37
   187  00084B  64                 	db	100	;'d'
   188  00084C  00                 	db	0
   189  00084D                     STR_4:
   190  00084D  44                 	db	68	;'D'
   191  00084E  45                 	db	69	;'E'
   192  00084F  53                 	db	83	;'S'
   193  000850  50                 	db	80	;'P'
   194  000851  45                 	db	69	;'E'
   195  000852  52                 	db	82	;'R'
   196  000853  54                 	db	84	;'T'
   197  000854  41                 	db	65	;'A'
   198  000855  44                 	db	68	;'D'
   199  000856  4F                 	db	79	;'O'
   200  000857  52                 	db	82	;'R'
   201  000858  2E                 	db	46
   202  000859  20                 	db	32
   203  00085A  20                 	db	32
   204  00085B  00                 	db	0
   205                           
   206                           ; #config settings
   207  00085C  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           	psect	cinit
   210  002282                     __pcinit:
   211                           	opt stack 0
   212  002282                     start_initialization:
   213                           	opt stack 0
   214  002282                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Initialize objects allocated to BANK0 (26 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  002282  0E14               	movlw	low __pidataBANK0
   220  002284  6EF6               	movwf	tblptrl,c
   221  002286  0E23               	movlw	high __pidataBANK0
   222  002288  6EF7               	movwf	tblptrh,c
   223  00228A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  00228C  6EF8               	movwf	tblptru,c
   225  00228E  EE00  F090         	lfsr	0,__pdataBANK0
   226  002292  EE10 F01A          	lfsr	1,26
   227  002296                     copy_data0:
   228  002296  0009               	tblrd		*+
   229  002298  CFF5 FFEE          	movff	tablat,postinc0
   230  00229C  50E5               	movf	postdec1,w,c
   231  00229E  50E1               	movf	fsr1l,w,c
   232  0022A0  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to COMRAM (28 bytes)
   235  0022A2  EE00  F035         	lfsr	0,__pbssCOMRAM
   236  0022A6  0E1C               	movlw	28
   237  0022A8                     clear_0:
   238  0022A8  6AEE               	clrf	postinc0,c
   239  0022AA  06E8               	decf	wreg,f,c
   240  0022AC  E1FD               	bnz	clear_0
   241  0022AE                     end_of_initialization:
   242                           	opt stack 0
   243  0022AE                     __end_of__initialization:
   244                           	opt stack 0
   245  0022AE  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  0022B0  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  0022B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  0022B4  6EF8               	movwf	tblptru,c
   249  0022B6  0100               	movlb	0
   250  0022B8  EFB2  F00C         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	bssCOMRAM
   261  000035                     __pbssCOMRAM:
   262                           	opt stack 0
   263  000035                     _controle_tempo_despertar:
   264                           	opt stack 0
   265  000035                     	ds	2
   266  000037                     _cursor:
   267                           	opt stack 0
   268  000037                     	ds	2
   269  000039                     _contador:
   270                           	opt stack 0
   271  000039                     	ds	2
   272  00003B                     _tela_exibida:
   273                           	opt stack 0
   274  00003B                     	ds	2
   275  00003D                     _despertar:
   276                           	opt stack 0
   277  00003D                     	ds	1
   278  00003E                     _flag_time:
   279                           	opt stack 0
   280  00003E                     	ds	1
   281  00003F                     _Calendario:
   282                           	opt stack 0
   283  00003F                     	ds	6
   284  000045                     _Despertador:
   285                           	opt stack 0
   286  000045                     	ds	6
   287  00004B                     _Relogio:
   288                           	opt stack 0
   289  00004B                     	ds	6
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	dataBANK0
   300  000090                     __pdataBANK0:
   301                           	opt stack 0
   302  000090                     _qtdDias_mes:
   303                           	opt stack 0
   304  000090                     	ds	26
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	cstackBANK0
   315  000060                     __pcstackBANK0:
   316                           	opt stack 0
   317  000060                     exibir_lcd@Relogio:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x0
   321  000060                     	ds	2
   322  000062                     exibir_lcd@Despertador:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  000062                     	ds	2
   327  000064                     exibir_lcd@Calendario:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x4
   331  000064                     	ds	2
   332  000066                     exibir_lcd@str:
   333                           	opt stack 0
   334                           
   335                           ; 16 bytes @ 0x6
   336  000066                     	ds	16
   337  000076                     exibir_lcd@g:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x16
   341  000076                     	ds	2
   342  000078                     exibir_lcd@h:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x18
   346  000078                     	ds	2
   347  00007A                     exibir_lcd@i:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x1A
   351  00007A                     	ds	2
   352  00007C                     exibir_lcd@j:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x1C
   356  00007C                     	ds	2
   357  00007E                     exibir_lcd@k:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x1E
   361  00007E                     	ds	2
   362  000080                     exibir_lcd@l:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x20
   366  000080                     	ds	2
   367  000082                     exibir_lcd@a:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x22
   371  000082                     	ds	2
   372  000084                     exibir_lcd@b:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x24
   376  000084                     	ds	2
   377  000086                     exibir_lcd@c:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x26
   381  000086                     	ds	2
   382  000088                     exibir_lcd@d:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x28
   386  000088                     	ds	2
   387  00008A                     exibir_lcd@e:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x2A
   391  00008A                     	ds	2
   392  00008C                     exibir_lcd@f:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x2C
   396  00008C                     	ds	2
   397  00008E                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x2E
   400  00008E                     	ds	2
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	cstackCOMRAM
   411  000001                     __pcstackCOMRAM:
   412                           	opt stack 0
   413  000001                     ??_pic_isr:
   414  000001                     
   415                           ; 1 bytes @ 0x0
   416  000001                     	ds	14
   417  00000F                     ??_Delay10KTCYx:
   418  00000F                     ?___awmod:
   419                           	opt stack 0
   420  00000F                     ?___lwdiv:
   421                           	opt stack 0
   422  00000F                     Delay10TCYx@unit:
   423                           	opt stack 0
   424  00000F                     Delay1KTCYx@unit:
   425                           	opt stack 0
   426  00000F                     tratar_relogio@Relogio:
   427                           	opt stack 0
   428  00000F                     controla_despertador@Despertador:
   429                           	opt stack 0
   430  00000F                     ___awmod@dividend:
   431                           	opt stack 0
   432  00000F                     ___lwdiv@dividend:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  00000F                     	ds	1
   437  000010                     ??_SetDDRamAddr:
   438  000010                     WriteCmdXLCD@cmd:
   439                           	opt stack 0
   440  000010                     WriteDataXLCD@data:
   441                           	opt stack 0
   442  000010                     Delay10KTCYx@unit:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0xF
   446  000010                     	ds	1
   447  000011                     tratar_relogio@Calendario:
   448                           	opt stack 0
   449  000011                     putrsXLCD@buffer:
   450                           	opt stack 0
   451  000011                     ___awmod@divisor:
   452                           	opt stack 0
   453  000011                     ___lwdiv@divisor:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x10
   457  000011                     	ds	2
   458  000013                     ??_tratar_relogio:
   459  000013                     SetDDRamAddr@DDaddr:
   460                           	opt stack 0
   461  000013                     ___awmod@counter:
   462                           	opt stack 0
   463  000013                     checa_botao@Relogio:
   464                           	opt stack 0
   465  000013                     ___lwdiv@quotient:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x12
   469  000013                     	ds	1
   470  000014                     OpenXLCD@lcdtype:
   471                           	opt stack 0
   472  000014                     ___awmod@sign:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x13
   476  000014                     	ds	1
   477  000015                     ?___awdiv:
   478                           	opt stack 0
   479  000015                     ___lwdiv@counter:
   480                           	opt stack 0
   481  000015                     checa_botao@Despertador:
   482                           	opt stack 0
   483  000015                     ___awdiv@dividend:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x14
   487  000015                     	ds	1
   488  000016                     ?___lwmod:
   489                           	opt stack 0
   490  000016                     ___lwmod@dividend:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x15
   494  000016                     	ds	1
   495  000017                     checa_botao@Calendario:
   496                           	opt stack 0
   497  000017                     ___awdiv@divisor:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x16
   501  000017                     	ds	1
   502  000018                     ___lwmod@divisor:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x17
   506  000018                     	ds	1
   507  000019                     ??_checa_botao:
   508  000019                     ___awdiv@counter:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x18
   512  000019                     	ds	1
   513  00001A                     ___awdiv@sign:
   514                           	opt stack 0
   515  00001A                     ___lwmod@counter:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x19
   519  00001A                     	ds	1
   520  00001B                     ?_sprintf:
   521                           	opt stack 0
   522  00001B                     sprintf@sp:
   523                           	opt stack 0
   524  00001B                     ___awdiv@quotient:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x1A
   528  00001B                     	ds	2
   529  00001D                     sprintf@f:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x1C
   533  00001D                     	ds	14
   534  00002B                     ??_sprintf:
   535                           
   536                           ; 1 bytes @ 0x2A
   537  00002B                     	ds	1
   538  00002C                     sprintf@ap:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x2B
   542  00002C                     	ds	2
   543  00002E                     sprintf@flag:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x2D
   547  00002E                     	ds	1
   548  00002F                     sprintf@prec:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x2E
   552  00002F                     	ds	1
   553  000030                     sprintf@val:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x2F
   557  000030                     	ds	2
   558  000032                     sprintf@c:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x31
   562  000032                     	ds	1
   563  000033                     ??_exibir_lcd:
   564                           
   565                           ; 1 bytes @ 0x32
   566  000033                     	ds	2
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 28 in file "exercicio_PIC_8_display_LCD.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   595 ;;      Params:         0       0       0       0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0       0       0
   597 ;;      Temps:          0       2       0       0       0       0       0       0       0
   598 ;;      Totals:         0       2       0       0       0       0       0       0       0
   599 ;;Total ram usage:        2 bytes
   600 ;; Hardware stack levels required when called:    6
   601 ;; This function calls:
   602 ;;		_WriteCmdXLCD
   603 ;;		_checa_botao
   604 ;;		_exibir_lcd
   605 ;;		_init_XLCD
   606 ;;		_pisca_cursor
   607 ;;		_tratar_relogio
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614  001964                     __ptext0:
   615                           	opt stack 0
   616  001964                     _main:
   617                           	opt stack 25
   618                           
   619                           ;exercicio_PIC_8_display_LCD.c: 30: Relogio.segundo=0;
   620                           
   621                           ;incstack = 0
   622  001964  0E00               	movlw	0
   623  001966  6E4E               	movwf	_Relogio+3,c
   624  001968  0E00               	movlw	0
   625  00196A  6E4D               	movwf	_Relogio+2,c
   626                           
   627                           ;exercicio_PIC_8_display_LCD.c: 31: Relogio.minuto=0;
   628  00196C  0E00               	movlw	0
   629  00196E  6E4C               	movwf	_Relogio+1,c
   630  001970  0E00               	movlw	0
   631  001972  6E4B               	movwf	_Relogio,c
   632                           
   633                           ;exercicio_PIC_8_display_LCD.c: 32: Relogio.hora=0;
   634  001974  0E00               	movlw	0
   635  001976  6E50               	movwf	_Relogio+5,c
   636  001978  0E00               	movlw	0
   637  00197A  6E4F               	movwf	_Relogio+4,c
   638                           
   639                           ;exercicio_PIC_8_display_LCD.c: 34: Despertador.segundo=5;
   640  00197C  0E00               	movlw	0
   641  00197E  6E48               	movwf	_Despertador+3,c
   642  001980  0E05               	movlw	5
   643  001982  6E47               	movwf	_Despertador+2,c
   644                           
   645                           ;exercicio_PIC_8_display_LCD.c: 35: Despertador.minuto=0;
   646  001984  0E00               	movlw	0
   647  001986  6E46               	movwf	_Despertador+1,c
   648  001988  0E00               	movlw	0
   649  00198A  6E45               	movwf	_Despertador,c
   650                           
   651                           ;exercicio_PIC_8_display_LCD.c: 36: Despertador.hora=0;
   652  00198C  0E00               	movlw	0
   653  00198E  6E4A               	movwf	_Despertador+5,c
   654  001990  0E00               	movlw	0
   655  001992  6E49               	movwf	_Despertador+4,c
   656                           
   657                           ;exercicio_PIC_8_display_LCD.c: 38: Calendario.dia=1;
   658  001994  0E00               	movlw	0
   659  001996  6E40               	movwf	_Calendario+1,c
   660  001998  0E01               	movlw	1
   661  00199A  6E3F               	movwf	_Calendario,c
   662                           
   663                           ;exercicio_PIC_8_display_LCD.c: 39: Calendario.mes=1;
   664  00199C  0E00               	movlw	0
   665  00199E  6E42               	movwf	_Calendario+3,c
   666  0019A0  0E01               	movlw	1
   667  0019A2  6E41               	movwf	_Calendario+2,c
   668                           
   669                           ;exercicio_PIC_8_display_LCD.c: 40: Calendario.ano=19;
   670  0019A4  0E00               	movlw	0
   671  0019A6  6E44               	movwf	_Calendario+5,c
   672  0019A8  0E13               	movlw	19
   673  0019AA  6E43               	movwf	_Calendario+4,c
   674                           
   675                           ;exercicio_PIC_8_display_LCD.c: 42: T0CONbits.TMR0ON=1;
   676  0019AC  8ED5               	bsf	4053,7,c	;volatile
   677                           
   678                           ;exercicio_PIC_8_display_LCD.c: 44: INTCONbits.TMR0IE=1;
   679  0019AE  8AF2               	bsf	intcon,5,c	;volatile
   680                           
   681                           ;exercicio_PIC_8_display_LCD.c: 45: INTCONbits.TMR0IF=0;
   682  0019B0  94F2               	bcf	intcon,2,c	;volatile
   683                           
   684                           ;exercicio_PIC_8_display_LCD.c: 48: T0CONbits.T08BIT=0;
   685  0019B2  9CD5               	bcf	4053,6,c	;volatile
   686                           
   687                           ;exercicio_PIC_8_display_LCD.c: 49: T0CONbits.PSA=0;
   688  0019B4  96D5               	bcf	4053,3,c	;volatile
   689                           
   690                           ;exercicio_PIC_8_display_LCD.c: 50: T0CONbits.T0PS0=1;
   691  0019B6  80D5               	bsf	4053,0,c	;volatile
   692                           
   693                           ;exercicio_PIC_8_display_LCD.c: 51: T0CONbits.T0PS1=0;
   694  0019B8  92D5               	bcf	4053,1,c	;volatile
   695                           
   696                           ;exercicio_PIC_8_display_LCD.c: 52: T0CONbits.T0PS2=1;
   697  0019BA  84D5               	bsf	4053,2,c	;volatile
   698                           
   699                           ;exercicio_PIC_8_display_LCD.c: 53: T0CONbits.T0CS=0;
   700  0019BC  9AD5               	bcf	4053,5,c	;volatile
   701                           
   702                           ;exercicio_PIC_8_display_LCD.c: 55: TMR0=2535;
   703  0019BE  0E09               	movlw	9
   704  0019C0  6ED7               	movwf	4055,c	;volatile
   705  0019C2  0EE7               	movlw	231
   706  0019C4  6ED6               	movwf	4054,c	;volatile
   707                           
   708                           ;exercicio_PIC_8_display_LCD.c: 57: T0CONbits.TMR0ON=1;
   709  0019C6  8ED5               	bsf	4053,7,c	;volatile
   710                           
   711                           ;exercicio_PIC_8_display_LCD.c: 60: INTCONbits.GIEH=1;
   712  0019C8  8EF2               	bsf	intcon,7,c	;volatile
   713                           
   714                           ;exercicio_PIC_8_display_LCD.c: 61: INTCONbits.GIEL=1;
   715  0019CA  8CF2               	bsf	intcon,6,c	;volatile
   716                           
   717                           ;exercicio_PIC_8_display_LCD.c: 63: init_XLCD();
   718  0019CC  EC7B  F011         	call	_init_XLCD	;wreg free
   719                           
   720                           ;exercicio_PIC_8_display_LCD.c: 68: TRISAbits.TRISA0=0;
   721  0019D0  9092               	bcf	3986,0,c	;volatile
   722                           
   723                           ;exercicio_PIC_8_display_LCD.c: 69: TRISAbits.TRISA1=0;
   724  0019D2  9292               	bcf	3986,1,c	;volatile
   725                           
   726                           ;exercicio_PIC_8_display_LCD.c: 72: TRISB=0x00;
   727  0019D4  0E00               	movlw	0
   728  0019D6  6E93               	movwf	3987,c	;volatile
   729                           
   730                           ;exercicio_PIC_8_display_LCD.c: 75: TRISDbits.TRISD0=1;
   731  0019D8  8095               	bsf	3989,0,c	;volatile
   732                           
   733                           ;exercicio_PIC_8_display_LCD.c: 76: TRISDbits.TRISD1=1;
   734  0019DA  8295               	bsf	3989,1,c	;volatile
   735                           
   736                           ;exercicio_PIC_8_display_LCD.c: 77: TRISDbits.TRISD2=1;
   737  0019DC  8495               	bsf	3989,2,c	;volatile
   738                           
   739                           ;exercicio_PIC_8_display_LCD.c: 78: TRISDbits.TRISD3=1;
   740  0019DE  8695               	bsf	3989,3,c	;volatile
   741  0019E0                     l2763:
   742                           
   743                           ;exercicio_PIC_8_display_LCD.c: 87: checa_botao(&Relogio, &Despertador, &Calendario);
   744  0019E0  0E4B               	movlw	low _Relogio
   745  0019E2  6E13               	movwf	checa_botao@Relogio,c
   746  0019E4  0E00               	movlw	high _Relogio
   747  0019E6  6E14               	movwf	checa_botao@Relogio+1,c
   748  0019E8  0E45               	movlw	low _Despertador
   749  0019EA  6E15               	movwf	checa_botao@Despertador,c
   750  0019EC  0E00               	movlw	high _Despertador
   751  0019EE  6E16               	movwf	checa_botao@Despertador+1,c
   752  0019F0  0E3F               	movlw	low _Calendario
   753  0019F2  6E17               	movwf	checa_botao@Calendario,c
   754  0019F4  0E00               	movlw	high _Calendario
   755  0019F6  6E18               	movwf	checa_botao@Calendario+1,c
   756  0019F8  EC2F  F004         	call	_checa_botao	;wreg free
   757                           
   758                           ;exercicio_PIC_8_display_LCD.c: 91: if(flag_time==1){
   759  0019FC  043E               	decf	_flag_time,w,c
   760  0019FE  A4D8               	btfss	status,2,c
   761  001A00  D03B               	goto	l2787
   762                           
   763                           ;exercicio_PIC_8_display_LCD.c: 92: tratar_relogio(&Relogio, &Calendario);
   764  001A02  0E4B               	movlw	low _Relogio
   765  001A04  6E0F               	movwf	tratar_relogio@Relogio,c
   766  001A06  0E00               	movlw	high _Relogio
   767  001A08  6E10               	movwf	tratar_relogio@Relogio+1,c
   768  001A0A  0E3F               	movlw	low _Calendario
   769  001A0C  6E11               	movwf	tratar_relogio@Calendario,c
   770  001A0E  0E00               	movlw	high _Calendario
   771  001A10  6E12               	movwf	tratar_relogio@Calendario+1,c
   772  001A12  EC0B  F00B         	call	_tratar_relogio	;wreg free
   773                           
   774                           ;exercicio_PIC_8_display_LCD.c: 94: WriteCmdXLCD(0x0C);
   775  001A16  0E0C               	movlw	12
   776  001A18  EC03  F011         	call	_WriteCmdXLCD
   777                           
   778                           ;exercicio_PIC_8_display_LCD.c: 95: exibir_lcd(&Relogio, &Despertador, &Calendario);
   779  001A1C  0E4B               	movlw	low _Relogio
   780  001A1E  0100               	movlb	0	; () banked
   781  001A20  6F60               	movwf	exibir_lcd@Relogio& (0+255),b
   782  001A22  0E00               	movlw	high _Relogio
   783  001A24  0100               	movlb	0	; () banked
   784  001A26  6F61               	movwf	(exibir_lcd@Relogio+1)& (0+255),b
   785  001A28  0E45               	movlw	low _Despertador
   786  001A2A  0100               	movlb	0	; () banked
   787  001A2C  6F62               	movwf	exibir_lcd@Despertador& (0+255),b
   788  001A2E  0E00               	movlw	high _Despertador
   789  001A30  0100               	movlb	0	; () banked
   790  001A32  6F63               	movwf	(exibir_lcd@Despertador+1)& (0+255),b
   791  001A34  0E3F               	movlw	low _Calendario
   792  001A36  0100               	movlb	0	; () banked
   793  001A38  6F64               	movwf	exibir_lcd@Calendario& (0+255),b
   794  001A3A  0E00               	movlw	high _Calendario
   795  001A3C  0100               	movlb	0	; () banked
   796  001A3E  6F65               	movwf	(exibir_lcd@Calendario+1)& (0+255),b
   797  001A40  ECBA  F007         	call	_exibir_lcd	;wreg free
   798                           
   799                           ;exercicio_PIC_8_display_LCD.c: 96: WriteCmdXLCD(0x0F);
   800  001A44  0E0F               	movlw	15
   801  001A46  EC03  F011         	call	_WriteCmdXLCD
   802                           
   803                           ;exercicio_PIC_8_display_LCD.c: 98: pisca_cursor();
   804  001A4A  ECAE  F00E         	call	_pisca_cursor	;wreg free
   805                           
   806                           ;exercicio_PIC_8_display_LCD.c: 101: PORTAbits.RA0=1;
   807  001A4E  8080               	bsf	3968,0,c	;volatile
   808                           
   809                           ;exercicio_PIC_8_display_LCD.c: 102: _delay((unsigned long)((70)*(20000000/4000.0)));
   810  001A50  0E02               	movlw	2
   811  001A52  0100               	movlb	0	; () banked
   812  001A54  6F8F               	movwf	(??_main+1)& (0+255),b
   813  001A56  0EC7               	movlw	199
   814  001A58  0100               	movlb	0	; () banked
   815  001A5A  6F8E               	movwf	??_main& (0+255),b
   816  001A5C  0E88               	movlw	136
   817  001A5E                     u2957:
   818  001A5E  2EE8               	decfsz	wreg,f,c
   819  001A60  D7FE               	bra	u2957
   820  001A62  2F8E               	decfsz	??_main& (0+255),f,b
   821  001A64  D7FC               	bra	u2957
   822  001A66  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   823  001A68  D7FA               	bra	u2957
   824  001A6A  F000               	nop	
   825                           
   826                           ;exercicio_PIC_8_display_LCD.c: 103: PORTAbits.RA0=0;
   827  001A6C  9080               	bcf	3968,0,c	;volatile
   828                           
   829                           ;exercicio_PIC_8_display_LCD.c: 104: if(despertar==1) controle_tempo_despertar++;
   830  001A6E  043D               	decf	_despertar,w,c
   831  001A70  A4D8               	btfss	status,2,c
   832  001A72  D002               	goto	l2787
   833  001A74  4A35               	infsnz	_controle_tempo_despertar,f,c
   834  001A76  2A36               	incf	_controle_tempo_despertar+1,f,c
   835  001A78                     l2787:
   836                           
   837                           ;exercicio_PIC_8_display_LCD.c: 105: }
   838                           ;exercicio_PIC_8_display_LCD.c: 108: if(Relogio.segundo==Despertador.segundo
   839                           ;exercicio_PIC_8_display_LCD.c: 109: && Relogio.minuto==Despertador.minuto
   840                           ;exercicio_PIC_8_display_LCD.c: 110: && Relogio.hora==Despertador.hora){
   841  001A78  5047               	movf	_Despertador+2,w,c
   842  001A7A  184D               	xorwf	_Relogio+2,w,c
   843  001A7C  E114               	bnz	l2795
   844  001A7E  5048               	movf	_Despertador+3,w,c
   845  001A80  184E               	xorwf	_Relogio+3,w,c
   846  001A82  A4D8               	btfss	status,2,c
   847  001A84  D010               	goto	l2795
   848  001A86  5045               	movf	_Despertador,w,c
   849  001A88  184B               	xorwf	_Relogio,w,c
   850  001A8A  E10D               	bnz	l2795
   851  001A8C  5046               	movf	_Despertador+1,w,c
   852  001A8E  184C               	xorwf	_Relogio+1,w,c
   853  001A90  A4D8               	btfss	status,2,c
   854  001A92  D009               	goto	l2795
   855  001A94  5049               	movf	_Despertador+4,w,c
   856  001A96  184F               	xorwf	_Relogio+4,w,c
   857  001A98  E106               	bnz	l2795
   858  001A9A  504A               	movf	_Despertador+5,w,c
   859  001A9C  1850               	xorwf	_Relogio+5,w,c
   860  001A9E  A4D8               	btfss	status,2,c
   861  001AA0  D002               	goto	l2795
   862                           
   863                           ;exercicio_PIC_8_display_LCD.c: 111: despertar=1;
   864  001AA2  0E01               	movlw	1
   865  001AA4  6E3D               	movwf	_despertar,c
   866  001AA6                     l2795:
   867                           
   868                           ;exercicio_PIC_8_display_LCD.c: 112: }
   869                           ;exercicio_PIC_8_display_LCD.c: 113: if(despertar==1 && controle_tempo_despertar<10){
   870  001AA6  043D               	decf	_despertar,w,c
   871  001AA8  A4D8               	btfss	status,2,c
   872  001AAA  D008               	goto	l2801
   873  001AAC  BE36               	btfsc	_controle_tempo_despertar+1,7,c
   874  001AAE  D005               	goto	l2799
   875  001AB0  5036               	movf	_controle_tempo_despertar+1,w,c
   876  001AB2  E104               	bnz	l2801
   877  001AB4  0E0A               	movlw	10
   878  001AB6  5C35               	subwf	_controle_tempo_despertar,w,c
   879  001AB8  A0D8               	btfss	status,0,c
   880  001ABA                     l2799:
   881                           
   882                           ;exercicio_PIC_8_display_LCD.c: 114: PORTAbits.RA1=1;
   883  001ABA  8280               	bsf	3968,1,c	;volatile
   884  001ABC                     l2801:
   885                           
   886                           ;exercicio_PIC_8_display_LCD.c: 115: }
   887                           ;exercicio_PIC_8_display_LCD.c: 116: if(controle_tempo_despertar==10){
   888  001ABC  0E0A               	movlw	10
   889  001ABE  1835               	xorwf	_controle_tempo_despertar,w,c
   890  001AC0  1036               	iorwf	_controle_tempo_despertar+1,w,c
   891  001AC2  A4D8               	btfss	status,2,c
   892  001AC4  D78D               	goto	l2763
   893                           
   894                           ;exercicio_PIC_8_display_LCD.c: 117: controle_tempo_despertar=0;
   895  001AC6  0E00               	movlw	0
   896  001AC8  6E36               	movwf	_controle_tempo_despertar+1,c
   897  001ACA  0E00               	movlw	0
   898  001ACC  6E35               	movwf	_controle_tempo_despertar,c
   899                           
   900                           ;exercicio_PIC_8_display_LCD.c: 118: despertar=0;
   901  001ACE  0E00               	movlw	0
   902  001AD0  6E3D               	movwf	_despertar,c
   903  001AD2  D786               	goto	l2763
   904  001AD4                     __end_of_main:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           intcon	equ	0xFF2
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           postdec1	equ	0xFE5
   914                           fsr1l	equ	0xFE1
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _tratar_relogio *****************
   918 ;; Defined at:
   919 ;;		line 3 in file "relogio.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  Relogio         2   14[COMRAM] PTR struct .
   922 ;;		 -> Relogio(6), 
   923 ;;  Calendario      2   16[COMRAM] PTR struct .
   924 ;;		 -> Calendario(6), 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         4       0       0       0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0
   938 ;;      Temps:          7       0       0       0       0       0       0       0       0
   939 ;;      Totals:        11       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:       11 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text1
   951  001616                     __ptext1:
   952                           	opt stack 0
   953  001616                     _tratar_relogio:
   954                           	opt stack 29
   955                           
   956                           ;relogio.c: 5: Relogio->segundo++;
   957                           
   958                           ;incstack = 0
   959  001616  EE20 F002          	lfsr	2,2
   960  00161A  500F               	movf	tratar_relogio@Relogio,w,c
   961  00161C  26D9               	addwf	fsr2l,f,c
   962  00161E  5010               	movf	tratar_relogio@Relogio+1,w,c
   963  001620  22DA               	addwfc	fsr2h,f,c
   964  001622  2ADE               	incf	postinc2,f,c
   965  001624  0E00               	movlw	0
   966  001626  22DD               	addwfc	postdec2,f,c
   967                           
   968                           ;relogio.c: 7: if(Relogio->segundo>59){
   969  001628  EE20 F002          	lfsr	2,2
   970  00162C  500F               	movf	tratar_relogio@Relogio,w,c
   971  00162E  26D9               	addwf	fsr2l,f,c
   972  001630  5010               	movf	tratar_relogio@Relogio+1,w,c
   973  001632  22DA               	addwfc	fsr2h,f,c
   974  001634  0E01               	movlw	1
   975  001636  BEDB               	btfsc	plusw2,7,c
   976  001638  D018               	goto	l71
   977  00163A  0E01               	movlw	1
   978  00163C  50DB               	movf	plusw2,w,c
   979  00163E  E104               	bnz	u2430
   980  001640  0E3C               	movlw	60
   981  001642  5CDE               	subwf	postinc2,w,c
   982  001644  A0D8               	btfss	status,0,c
   983  001646  D011               	goto	l71
   984  001648                     u2430:
   985                           
   986                           ;relogio.c: 8: Relogio->minuto++;
   987  001648  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
   988  00164C  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
   989  001650  2ADE               	incf	postinc2,f,c
   990  001652  0E00               	movlw	0
   991  001654  22DD               	addwfc	postdec2,f,c
   992                           
   993                           ;relogio.c: 9: Relogio->segundo=0;
   994  001656  EE20 F002          	lfsr	2,2
   995  00165A  500F               	movf	tratar_relogio@Relogio,w,c
   996  00165C  26D9               	addwf	fsr2l,f,c
   997  00165E  5010               	movf	tratar_relogio@Relogio+1,w,c
   998  001660  22DA               	addwfc	fsr2h,f,c
   999  001662  0E00               	movlw	0
  1000  001664  6EDE               	movwf	postinc2,c
  1001  001666  0E00               	movlw	0
  1002  001668  6EDD               	movwf	postdec2,c
  1003  00166A                     l71:
  1004                           
  1005                           ;relogio.c: 10: }
  1006                           ;relogio.c: 11: if(Relogio->segundo<0){
  1007  00166A  EE20 F002          	lfsr	2,2
  1008  00166E  500F               	movf	tratar_relogio@Relogio,w,c
  1009  001670  26D9               	addwf	fsr2l,f,c
  1010  001672  5010               	movf	tratar_relogio@Relogio+1,w,c
  1011  001674  22DA               	addwfc	fsr2h,f,c
  1012  001676  0E01               	movlw	1
  1013  001678  AEDB               	btfss	plusw2,7,c
  1014  00167A  D011               	goto	l72
  1015                           
  1016                           ;relogio.c: 12: Relogio->segundo=59;
  1017  00167C  EE20 F002          	lfsr	2,2
  1018  001680  500F               	movf	tratar_relogio@Relogio,w,c
  1019  001682  26D9               	addwf	fsr2l,f,c
  1020  001684  5010               	movf	tratar_relogio@Relogio+1,w,c
  1021  001686  22DA               	addwfc	fsr2h,f,c
  1022  001688  0E3B               	movlw	59
  1023  00168A  6EDE               	movwf	postinc2,c
  1024  00168C  0E00               	movlw	0
  1025  00168E  6EDD               	movwf	postdec2,c
  1026                           
  1027                           ;relogio.c: 13: Relogio->minuto--;
  1028  001690  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1029  001694  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1030  001698  06DE               	decf	postinc2,f,c
  1031  00169A  0E00               	movlw	0
  1032  00169C  5ADD               	subwfb	postdec2,f,c
  1033  00169E                     l72:
  1034                           
  1035                           ;relogio.c: 14: }
  1036                           ;relogio.c: 16: if(Relogio->minuto>59){
  1037  00169E  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1038  0016A2  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1039  0016A6  0E01               	movlw	1
  1040  0016A8  BEDB               	btfsc	plusw2,7,c
  1041  0016AA  D018               	goto	l2437
  1042  0016AC  0E01               	movlw	1
  1043  0016AE  50DB               	movf	plusw2,w,c
  1044  0016B0  E104               	bnz	u2450
  1045  0016B2  0E3C               	movlw	60
  1046  0016B4  5CDE               	subwf	postinc2,w,c
  1047  0016B6  A0D8               	btfss	status,0,c
  1048  0016B8  D011               	goto	l2437
  1049  0016BA                     u2450:
  1050                           
  1051                           ;relogio.c: 17: Relogio->hora++;
  1052  0016BA  EE20 F004          	lfsr	2,4
  1053  0016BE  500F               	movf	tratar_relogio@Relogio,w,c
  1054  0016C0  26D9               	addwf	fsr2l,f,c
  1055  0016C2  5010               	movf	tratar_relogio@Relogio+1,w,c
  1056  0016C4  22DA               	addwfc	fsr2h,f,c
  1057  0016C6  2ADE               	incf	postinc2,f,c
  1058  0016C8  0E00               	movlw	0
  1059  0016CA  22DD               	addwfc	postdec2,f,c
  1060                           
  1061                           ;relogio.c: 18: Relogio->minuto=0;
  1062  0016CC  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1063  0016D0  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1064  0016D4  0E00               	movlw	0
  1065  0016D6  6EDE               	movwf	postinc2,c
  1066  0016D8  0E00               	movlw	0
  1067  0016DA  6EDD               	movwf	postdec2,c
  1068  0016DC                     l2437:
  1069                           
  1070                           ;relogio.c: 19: }
  1071                           ;relogio.c: 20: if(Relogio->minuto<0){
  1072  0016DC  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1073  0016E0  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1074  0016E4  0E01               	movlw	1
  1075  0016E6  AEDB               	btfss	plusw2,7,c
  1076  0016E8  D011               	goto	l2443
  1077                           
  1078                           ;relogio.c: 21: Relogio->minuto=59;
  1079  0016EA  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1080  0016EE  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1081  0016F2  0E3B               	movlw	59
  1082  0016F4  6EDE               	movwf	postinc2,c
  1083  0016F6  0E00               	movlw	0
  1084  0016F8  6EDD               	movwf	postdec2,c
  1085                           
  1086                           ;relogio.c: 22: Relogio->hora--;
  1087  0016FA  EE20 F004          	lfsr	2,4
  1088  0016FE  500F               	movf	tratar_relogio@Relogio,w,c
  1089  001700  26D9               	addwf	fsr2l,f,c
  1090  001702  5010               	movf	tratar_relogio@Relogio+1,w,c
  1091  001704  22DA               	addwfc	fsr2h,f,c
  1092  001706  06DE               	decf	postinc2,f,c
  1093  001708  0E00               	movlw	0
  1094  00170A  5ADD               	subwfb	postdec2,f,c
  1095  00170C                     l2443:
  1096                           
  1097                           ;relogio.c: 23: }
  1098                           ;relogio.c: 25: if(Relogio->hora>23){
  1099  00170C  EE20 F004          	lfsr	2,4
  1100  001710  500F               	movf	tratar_relogio@Relogio,w,c
  1101  001712  26D9               	addwf	fsr2l,f,c
  1102  001714  5010               	movf	tratar_relogio@Relogio+1,w,c
  1103  001716  22DA               	addwfc	fsr2h,f,c
  1104  001718  0E01               	movlw	1
  1105  00171A  BEDB               	btfsc	plusw2,7,c
  1106  00171C  D018               	goto	l75
  1107  00171E  0E01               	movlw	1
  1108  001720  50DB               	movf	plusw2,w,c
  1109  001722  E104               	bnz	u2470
  1110  001724  0E18               	movlw	24
  1111  001726  5CDE               	subwf	postinc2,w,c
  1112  001728  A0D8               	btfss	status,0,c
  1113  00172A  D011               	goto	l75
  1114  00172C                     u2470:
  1115                           
  1116                           ;relogio.c: 26: Calendario->dia++;
  1117  00172C  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1118  001730  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1119  001734  2ADE               	incf	postinc2,f,c
  1120  001736  0E00               	movlw	0
  1121  001738  22DD               	addwfc	postdec2,f,c
  1122                           
  1123                           ;relogio.c: 27: Relogio->hora=0;
  1124  00173A  EE20 F004          	lfsr	2,4
  1125  00173E  500F               	movf	tratar_relogio@Relogio,w,c
  1126  001740  26D9               	addwf	fsr2l,f,c
  1127  001742  5010               	movf	tratar_relogio@Relogio+1,w,c
  1128  001744  22DA               	addwfc	fsr2h,f,c
  1129  001746  0E00               	movlw	0
  1130  001748  6EDE               	movwf	postinc2,c
  1131  00174A  0E00               	movlw	0
  1132  00174C  6EDD               	movwf	postdec2,c
  1133  00174E                     l75:
  1134                           
  1135                           ;relogio.c: 28: }
  1136                           ;relogio.c: 29: if(Relogio->hora<0){
  1137  00174E  EE20 F004          	lfsr	2,4
  1138  001752  500F               	movf	tratar_relogio@Relogio,w,c
  1139  001754  26D9               	addwf	fsr2l,f,c
  1140  001756  5010               	movf	tratar_relogio@Relogio+1,w,c
  1141  001758  22DA               	addwfc	fsr2h,f,c
  1142  00175A  0E01               	movlw	1
  1143  00175C  AEDB               	btfss	plusw2,7,c
  1144  00175E  D011               	goto	l2449
  1145                           
  1146                           ;relogio.c: 30: Relogio->hora=23;
  1147  001760  EE20 F004          	lfsr	2,4
  1148  001764  500F               	movf	tratar_relogio@Relogio,w,c
  1149  001766  26D9               	addwf	fsr2l,f,c
  1150  001768  5010               	movf	tratar_relogio@Relogio+1,w,c
  1151  00176A  22DA               	addwfc	fsr2h,f,c
  1152  00176C  0E17               	movlw	23
  1153  00176E  6EDE               	movwf	postinc2,c
  1154  001770  0E00               	movlw	0
  1155  001772  6EDD               	movwf	postdec2,c
  1156                           
  1157                           ;relogio.c: 31: Calendario->dia--;
  1158  001774  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1159  001778  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1160  00177C  06DE               	decf	postinc2,f,c
  1161  00177E  0E00               	movlw	0
  1162  001780  5ADD               	subwfb	postdec2,f,c
  1163  001782                     l2449:
  1164                           
  1165                           ;relogio.c: 32: }
  1166                           ;relogio.c: 34: if(Calendario->dia>qtdDias_mes[Calendario->mes]){
  1167  001782  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1168  001786  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1169  00178A  EE10 F002          	lfsr	1,2
  1170  00178E  5011               	movf	tratar_relogio@Calendario,w,c
  1171  001790  26E1               	addwf	fsr1l,f,c
  1172  001792  5012               	movf	tratar_relogio@Calendario+1,w,c
  1173  001794  22E2               	addwfc	fsr1h,f,c
  1174  001796  CFE6 F015          	movff	postinc1,??_tratar_relogio+2
  1175  00179A  CFE5 F016          	movff	postdec1,??_tratar_relogio+3
  1176  00179E  90D8               	bcf	status,0,c
  1177  0017A0  3615               	rlcf	??_tratar_relogio+2,f,c
  1178  0017A2  3616               	rlcf	??_tratar_relogio+3,f,c
  1179  0017A4  0E90               	movlw	low _qtdDias_mes
  1180  0017A6  2415               	addwf	??_tratar_relogio+2,w,c
  1181  0017A8  6EE1               	movwf	fsr1l,c
  1182  0017AA  0E00               	movlw	high _qtdDias_mes
  1183  0017AC  2016               	addwfc	??_tratar_relogio+3,w,c
  1184  0017AE  6EE2               	movwf	fsr1h,c
  1185  0017B0  50DE               	movf	postinc2,w,c
  1186  0017B2  5CE6               	subwf	postinc1,w,c
  1187  0017B4  50E6               	movf	postinc1,w,c
  1188  0017B6  0A80               	xorlw	128
  1189  0017B8  6E19               	movwf	(??_tratar_relogio+6)& (0+255),c
  1190  0017BA  50DE               	movf	postinc2,w,c
  1191  0017BC  0A80               	xorlw	128
  1192  0017BE  5819               	subwfb	(??_tratar_relogio+6)& (0+255),w,c
  1193  0017C0  B0D8               	btfsc	status,0,c
  1194  0017C2  D011               	goto	l2455
  1195                           
  1196                           ;relogio.c: 35: Calendario->mes++;
  1197  0017C4  EE20 F002          	lfsr	2,2
  1198  0017C8  5011               	movf	tratar_relogio@Calendario,w,c
  1199  0017CA  26D9               	addwf	fsr2l,f,c
  1200  0017CC  5012               	movf	tratar_relogio@Calendario+1,w,c
  1201  0017CE  22DA               	addwfc	fsr2h,f,c
  1202  0017D0  2ADE               	incf	postinc2,f,c
  1203  0017D2  0E00               	movlw	0
  1204  0017D4  22DD               	addwfc	postdec2,f,c
  1205                           
  1206                           ;relogio.c: 36: Calendario->dia=1;
  1207  0017D6  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1208  0017DA  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1209  0017DE  0E01               	movlw	1
  1210  0017E0  6EDE               	movwf	postinc2,c
  1211  0017E2  0E00               	movlw	0
  1212  0017E4  6EDD               	movwf	postdec2,c
  1213  0017E6                     l2455:
  1214                           
  1215                           ;relogio.c: 37: }
  1216                           ;relogio.c: 38: if(Calendario->dia<1){
  1217  0017E6  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1218  0017EA  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1219  0017EE  0E01               	movlw	1
  1220  0017F0  BEDB               	btfsc	plusw2,7,c
  1221  0017F2  D006               	goto	l2457
  1222  0017F4  0E01               	movlw	1
  1223  0017F6  50DB               	movf	plusw2,w,c
  1224  0017F8  E127               	bnz	l2461
  1225  0017FA  04DE               	decf	postinc2,w,c
  1226  0017FC  B0D8               	btfsc	status,0,c
  1227  0017FE  D024               	goto	l2461
  1228  001800                     l2457:
  1229                           
  1230                           ;relogio.c: 39: Calendario->mes--;
  1231  001800  EE20 F002          	lfsr	2,2
  1232  001804  5011               	movf	tratar_relogio@Calendario,w,c
  1233  001806  26D9               	addwf	fsr2l,f,c
  1234  001808  5012               	movf	tratar_relogio@Calendario+1,w,c
  1235  00180A  22DA               	addwfc	fsr2h,f,c
  1236  00180C  06DE               	decf	postinc2,f,c
  1237  00180E  0E00               	movlw	0
  1238  001810  5ADD               	subwfb	postdec2,f,c
  1239                           
  1240                           ;relogio.c: 40: Calendario->dia=qtdDias_mes[Calendario->mes];
  1241  001812  EE20 F002          	lfsr	2,2
  1242  001816  5011               	movf	tratar_relogio@Calendario,w,c
  1243  001818  26D9               	addwf	fsr2l,f,c
  1244  00181A  5012               	movf	tratar_relogio@Calendario+1,w,c
  1245  00181C  22DA               	addwfc	fsr2h,f,c
  1246  00181E  CFDE F013          	movff	postinc2,??_tratar_relogio
  1247  001822  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1248  001826  90D8               	bcf	status,0,c
  1249  001828  3613               	rlcf	??_tratar_relogio,f,c
  1250  00182A  3614               	rlcf	??_tratar_relogio+1,f,c
  1251  00182C  0E90               	movlw	low _qtdDias_mes
  1252  00182E  2413               	addwf	??_tratar_relogio,w,c
  1253  001830  6ED9               	movwf	fsr2l,c
  1254  001832  0E00               	movlw	high _qtdDias_mes
  1255  001834  2014               	addwfc	??_tratar_relogio+1,w,c
  1256  001836  6EDA               	movwf	fsr2h,c
  1257  001838  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1258  00183C  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1259  001840  CFDE FFE6          	movff	postinc2,postinc1
  1260  001844  CFDD FFE5          	movff	postdec2,postdec1
  1261  001848                     l2461:
  1262                           
  1263                           ;relogio.c: 41: }
  1264                           ;relogio.c: 43: if(Calendario->mes>12){
  1265  001848  EE20 F002          	lfsr	2,2
  1266  00184C  5011               	movf	tratar_relogio@Calendario,w,c
  1267  00184E  26D9               	addwf	fsr2l,f,c
  1268  001850  5012               	movf	tratar_relogio@Calendario+1,w,c
  1269  001852  22DA               	addwfc	fsr2h,f,c
  1270  001854  0E01               	movlw	1
  1271  001856  BEDB               	btfsc	plusw2,7,c
  1272  001858  D01A               	goto	l79
  1273  00185A  0E01               	movlw	1
  1274  00185C  50DB               	movf	plusw2,w,c
  1275  00185E  E104               	bnz	u2510
  1276  001860  0E0D               	movlw	13
  1277  001862  5CDE               	subwf	postinc2,w,c
  1278  001864  A0D8               	btfss	status,0,c
  1279  001866  D013               	goto	l79
  1280  001868                     u2510:
  1281                           
  1282                           ;relogio.c: 44: Calendario->ano++;
  1283  001868  EE20 F004          	lfsr	2,4
  1284  00186C  5011               	movf	tratar_relogio@Calendario,w,c
  1285  00186E  26D9               	addwf	fsr2l,f,c
  1286  001870  5012               	movf	tratar_relogio@Calendario+1,w,c
  1287  001872  22DA               	addwfc	fsr2h,f,c
  1288  001874  2ADE               	incf	postinc2,f,c
  1289  001876  0E00               	movlw	0
  1290  001878  22DD               	addwfc	postdec2,f,c
  1291                           
  1292                           ;relogio.c: 45: Calendario->mes=1;
  1293  00187A  EE20 F002          	lfsr	2,2
  1294  00187E  5011               	movf	tratar_relogio@Calendario,w,c
  1295  001880  26D9               	addwf	fsr2l,f,c
  1296  001882  5012               	movf	tratar_relogio@Calendario+1,w,c
  1297  001884  22DA               	addwfc	fsr2h,f,c
  1298  001886  0E01               	movlw	1
  1299  001888  6EDE               	movwf	postinc2,c
  1300  00188A  0E00               	movlw	0
  1301  00188C  6EDD               	movwf	postdec2,c
  1302  00188E                     l79:
  1303                           
  1304                           ;relogio.c: 46: }
  1305                           ;relogio.c: 47: if(Calendario->mes<1){
  1306  00188E  EE20 F002          	lfsr	2,2
  1307  001892  5011               	movf	tratar_relogio@Calendario,w,c
  1308  001894  26D9               	addwf	fsr2l,f,c
  1309  001896  5012               	movf	tratar_relogio@Calendario+1,w,c
  1310  001898  22DA               	addwfc	fsr2h,f,c
  1311  00189A  0E01               	movlw	1
  1312  00189C  BEDB               	btfsc	plusw2,7,c
  1313  00189E  D006               	goto	l2465
  1314  0018A0  0E01               	movlw	1
  1315  0018A2  50DB               	movf	plusw2,w,c
  1316  0018A4  E131               	bnz	l2471
  1317  0018A6  04DE               	decf	postinc2,w,c
  1318  0018A8  B0D8               	btfsc	status,0,c
  1319  0018AA  D02E               	goto	l2471
  1320  0018AC                     l2465:
  1321                           
  1322                           ;relogio.c: 48: Calendario->mes=12;
  1323  0018AC  EE20 F002          	lfsr	2,2
  1324  0018B0  5011               	movf	tratar_relogio@Calendario,w,c
  1325  0018B2  26D9               	addwf	fsr2l,f,c
  1326  0018B4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1327  0018B6  22DA               	addwfc	fsr2h,f,c
  1328  0018B8  0E0C               	movlw	12
  1329  0018BA  6EDE               	movwf	postinc2,c
  1330  0018BC  0E00               	movlw	0
  1331  0018BE  6EDD               	movwf	postdec2,c
  1332                           
  1333                           ;relogio.c: 49: Calendario->dia=qtdDias_mes[Calendario->mes];
  1334  0018C0  EE20 F002          	lfsr	2,2
  1335  0018C4  5011               	movf	tratar_relogio@Calendario,w,c
  1336  0018C6  26D9               	addwf	fsr2l,f,c
  1337  0018C8  5012               	movf	tratar_relogio@Calendario+1,w,c
  1338  0018CA  22DA               	addwfc	fsr2h,f,c
  1339  0018CC  CFDE F013          	movff	postinc2,??_tratar_relogio
  1340  0018D0  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1341  0018D4  90D8               	bcf	status,0,c
  1342  0018D6  3613               	rlcf	??_tratar_relogio,f,c
  1343  0018D8  3614               	rlcf	??_tratar_relogio+1,f,c
  1344  0018DA  0E90               	movlw	low _qtdDias_mes
  1345  0018DC  2413               	addwf	??_tratar_relogio,w,c
  1346  0018DE  6ED9               	movwf	fsr2l,c
  1347  0018E0  0E00               	movlw	high _qtdDias_mes
  1348  0018E2  2014               	addwfc	??_tratar_relogio+1,w,c
  1349  0018E4  6EDA               	movwf	fsr2h,c
  1350  0018E6  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1351  0018EA  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1352  0018EE  CFDE FFE6          	movff	postinc2,postinc1
  1353  0018F2  CFDD FFE5          	movff	postdec2,postdec1
  1354                           
  1355                           ;relogio.c: 50: Calendario->ano--;
  1356  0018F6  EE20 F004          	lfsr	2,4
  1357  0018FA  5011               	movf	tratar_relogio@Calendario,w,c
  1358  0018FC  26D9               	addwf	fsr2l,f,c
  1359  0018FE  5012               	movf	tratar_relogio@Calendario+1,w,c
  1360  001900  22DA               	addwfc	fsr2h,f,c
  1361  001902  06DE               	decf	postinc2,f,c
  1362  001904  0E00               	movlw	0
  1363  001906  5ADD               	subwfb	postdec2,f,c
  1364  001908                     l2471:
  1365                           
  1366                           ;relogio.c: 51: }
  1367                           ;relogio.c: 53: if(Calendario->ano>=100){
  1368  001908  EE20 F004          	lfsr	2,4
  1369  00190C  5011               	movf	tratar_relogio@Calendario,w,c
  1370  00190E  26D9               	addwf	fsr2l,f,c
  1371  001910  5012               	movf	tratar_relogio@Calendario+1,w,c
  1372  001912  22DA               	addwfc	fsr2h,f,c
  1373  001914  0E01               	movlw	1
  1374  001916  BEDB               	btfsc	plusw2,7,c
  1375  001918  D011               	goto	l81
  1376  00191A  0E01               	movlw	1
  1377  00191C  50DB               	movf	plusw2,w,c
  1378  00191E  E104               	bnz	u2530
  1379  001920  0E64               	movlw	100
  1380  001922  5CDE               	subwf	postinc2,w,c
  1381  001924  A0D8               	btfss	status,0,c
  1382  001926  D00A               	goto	l81
  1383  001928                     u2530:
  1384                           
  1385                           ;relogio.c: 54: Calendario->ano=00;
  1386  001928  EE20 F004          	lfsr	2,4
  1387  00192C  5011               	movf	tratar_relogio@Calendario,w,c
  1388  00192E  26D9               	addwf	fsr2l,f,c
  1389  001930  5012               	movf	tratar_relogio@Calendario+1,w,c
  1390  001932  22DA               	addwfc	fsr2h,f,c
  1391  001934  0E00               	movlw	0
  1392  001936  6EDE               	movwf	postinc2,c
  1393  001938  0E00               	movlw	0
  1394  00193A  6EDD               	movwf	postdec2,c
  1395  00193C                     l81:
  1396                           
  1397                           ;relogio.c: 55: }
  1398                           ;relogio.c: 56: if(Calendario->ano<0){
  1399  00193C  EE20 F004          	lfsr	2,4
  1400  001940  5011               	movf	tratar_relogio@Calendario,w,c
  1401  001942  26D9               	addwf	fsr2l,f,c
  1402  001944  5012               	movf	tratar_relogio@Calendario+1,w,c
  1403  001946  22DA               	addwfc	fsr2h,f,c
  1404  001948  0E01               	movlw	1
  1405  00194A  AEDB               	btfss	plusw2,7,c
  1406  00194C  0012               	return	
  1407                           
  1408                           ;relogio.c: 57: Calendario->ano=99;
  1409  00194E  EE20 F004          	lfsr	2,4
  1410  001952  5011               	movf	tratar_relogio@Calendario,w,c
  1411  001954  26D9               	addwf	fsr2l,f,c
  1412  001956  5012               	movf	tratar_relogio@Calendario+1,w,c
  1413  001958  22DA               	addwfc	fsr2h,f,c
  1414  00195A  0E63               	movlw	99
  1415  00195C  6EDE               	movwf	postinc2,c
  1416  00195E  0E00               	movlw	0
  1417  001960  6EDD               	movwf	postdec2,c
  1418  001962  0012               	return	
  1419  001964                     __end_of_tratar_relogio:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           intcon	equ	0xFF2
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postinc1	equ	0xFE6
  1429                           postdec1	equ	0xFE5
  1430                           fsr1h	equ	0xFE2
  1431                           fsr1l	equ	0xFE1
  1432                           postinc2	equ	0xFDE
  1433                           postdec2	equ	0xFDD
  1434                           plusw2	equ	0xFDB
  1435                           fsr2h	equ	0xFDA
  1436                           fsr2l	equ	0xFD9
  1437                           status	equ	0xFD8
  1438                           
  1439 ;; *************** function _pisca_cursor *****************
  1440 ;; Defined at:
  1441 ;;		line 160 in file "display_LCD.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    4
  1462 ;; This function calls:
  1463 ;;		_SetDDRamAddr
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text2
  1470  001D5C                     __ptext2:
  1471                           	opt stack 0
  1472  001D5C                     _pisca_cursor:
  1473                           	opt stack 26
  1474                           
  1475                           ;display_LCD.c: 161: if(tela_exibida==0){
  1476                           
  1477                           ;incstack = 0
  1478  001D5C  503B               	movf	_tela_exibida,w,c
  1479  001D5E  103C               	iorwf	_tela_exibida+1,w,c
  1480  001D60  A4D8               	btfss	status,2,c
  1481  001D62  D05E               	goto	l2569
  1482                           
  1483                           ;display_LCD.c: 162: if(cursor==0) SetDDRamAddr(0x06);
  1484  001D64  5037               	movf	_cursor,w,c
  1485  001D66  1038               	iorwf	_cursor+1,w,c
  1486  001D68  A4D8               	btfss	status,2,c
  1487  001D6A  D003               	goto	l2525
  1488  001D6C  0E06               	movlw	6
  1489  001D6E  ECB9  F010         	call	_SetDDRamAddr
  1490  001D72                     l2525:
  1491                           
  1492                           ;display_LCD.c: 163: if(cursor==1) SetDDRamAddr(0x07);
  1493  001D72  0437               	decf	_cursor,w,c
  1494  001D74  1038               	iorwf	_cursor+1,w,c
  1495  001D76  A4D8               	btfss	status,2,c
  1496  001D78  D003               	goto	l2529
  1497  001D7A  0E07               	movlw	7
  1498  001D7C  ECB9  F010         	call	_SetDDRamAddr
  1499  001D80                     l2529:
  1500                           
  1501                           ;display_LCD.c: 164: if(cursor==2) SetDDRamAddr(0x09);
  1502  001D80  0E02               	movlw	2
  1503  001D82  1837               	xorwf	_cursor,w,c
  1504  001D84  1038               	iorwf	_cursor+1,w,c
  1505  001D86  A4D8               	btfss	status,2,c
  1506  001D88  D003               	goto	l2533
  1507  001D8A  0E09               	movlw	9
  1508  001D8C  ECB9  F010         	call	_SetDDRamAddr
  1509  001D90                     l2533:
  1510                           
  1511                           ;display_LCD.c: 165: if(cursor==3) SetDDRamAddr(0x0A);
  1512  001D90  0E03               	movlw	3
  1513  001D92  1837               	xorwf	_cursor,w,c
  1514  001D94  1038               	iorwf	_cursor+1,w,c
  1515  001D96  A4D8               	btfss	status,2,c
  1516  001D98  D003               	goto	l2537
  1517  001D9A  0E0A               	movlw	10
  1518  001D9C  ECB9  F010         	call	_SetDDRamAddr
  1519  001DA0                     l2537:
  1520                           
  1521                           ;display_LCD.c: 166: if(cursor==4) SetDDRamAddr(0x0C);
  1522  001DA0  0E04               	movlw	4
  1523  001DA2  1837               	xorwf	_cursor,w,c
  1524  001DA4  1038               	iorwf	_cursor+1,w,c
  1525  001DA6  A4D8               	btfss	status,2,c
  1526  001DA8  D003               	goto	l2541
  1527  001DAA  0E0C               	movlw	12
  1528  001DAC  ECB9  F010         	call	_SetDDRamAddr
  1529  001DB0                     l2541:
  1530                           
  1531                           ;display_LCD.c: 167: if(cursor==5) SetDDRamAddr(0x0D);
  1532  001DB0  0E05               	movlw	5
  1533  001DB2  1837               	xorwf	_cursor,w,c
  1534  001DB4  1038               	iorwf	_cursor+1,w,c
  1535  001DB6  A4D8               	btfss	status,2,c
  1536  001DB8  D003               	goto	l2545
  1537  001DBA  0E0D               	movlw	13
  1538  001DBC  ECB9  F010         	call	_SetDDRamAddr
  1539  001DC0                     l2545:
  1540                           
  1541                           ;display_LCD.c: 168: if(cursor==6) SetDDRamAddr(0x46);
  1542  001DC0  0E06               	movlw	6
  1543  001DC2  1837               	xorwf	_cursor,w,c
  1544  001DC4  1038               	iorwf	_cursor+1,w,c
  1545  001DC6  A4D8               	btfss	status,2,c
  1546  001DC8  D003               	goto	l2549
  1547  001DCA  0E46               	movlw	70
  1548  001DCC  ECB9  F010         	call	_SetDDRamAddr
  1549  001DD0                     l2549:
  1550                           
  1551                           ;display_LCD.c: 169: if(cursor==7) SetDDRamAddr(0x47);
  1552  001DD0  0E07               	movlw	7
  1553  001DD2  1837               	xorwf	_cursor,w,c
  1554  001DD4  1038               	iorwf	_cursor+1,w,c
  1555  001DD6  A4D8               	btfss	status,2,c
  1556  001DD8  D003               	goto	l2553
  1557  001DDA  0E47               	movlw	71
  1558  001DDC  ECB9  F010         	call	_SetDDRamAddr
  1559  001DE0                     l2553:
  1560                           
  1561                           ;display_LCD.c: 170: if(cursor==8) SetDDRamAddr(0x49);
  1562  001DE0  0E08               	movlw	8
  1563  001DE2  1837               	xorwf	_cursor,w,c
  1564  001DE4  1038               	iorwf	_cursor+1,w,c
  1565  001DE6  A4D8               	btfss	status,2,c
  1566  001DE8  D003               	goto	l2557
  1567  001DEA  0E49               	movlw	73
  1568  001DEC  ECB9  F010         	call	_SetDDRamAddr
  1569  001DF0                     l2557:
  1570                           
  1571                           ;display_LCD.c: 171: if(cursor==9) SetDDRamAddr(0x4A);
  1572  001DF0  0E09               	movlw	9
  1573  001DF2  1837               	xorwf	_cursor,w,c
  1574  001DF4  1038               	iorwf	_cursor+1,w,c
  1575  001DF6  A4D8               	btfss	status,2,c
  1576  001DF8  D003               	goto	l2561
  1577  001DFA  0E4A               	movlw	74
  1578  001DFC  ECB9  F010         	call	_SetDDRamAddr
  1579  001E00                     l2561:
  1580                           
  1581                           ;display_LCD.c: 172: if(cursor==10) SetDDRamAddr(0x4C);
  1582  001E00  0E0A               	movlw	10
  1583  001E02  1837               	xorwf	_cursor,w,c
  1584  001E04  1038               	iorwf	_cursor+1,w,c
  1585  001E06  A4D8               	btfss	status,2,c
  1586  001E08  D003               	goto	l2565
  1587  001E0A  0E4C               	movlw	76
  1588  001E0C  ECB9  F010         	call	_SetDDRamAddr
  1589  001E10                     l2565:
  1590                           
  1591                           ;display_LCD.c: 173: if(cursor==11) SetDDRamAddr(0x4D);
  1592  001E10  0E0B               	movlw	11
  1593  001E12  1837               	xorwf	_cursor,w,c
  1594  001E14  1038               	iorwf	_cursor+1,w,c
  1595  001E16  A4D8               	btfss	status,2,c
  1596  001E18  D003               	goto	l2569
  1597  001E1A  0E4D               	movlw	77
  1598  001E1C  ECB9  F010         	call	_SetDDRamAddr
  1599  001E20                     l2569:
  1600                           
  1601                           ;display_LCD.c: 174: }
  1602                           ;display_LCD.c: 176: if(tela_exibida==1){
  1603  001E20  043B               	decf	_tela_exibida,w,c
  1604  001E22  103C               	iorwf	_tela_exibida+1,w,c
  1605  001E24  A4D8               	btfss	status,2,c
  1606  001E26  0012               	return	
  1607                           
  1608                           ;display_LCD.c: 177: if(cursor==0) SetDDRamAddr(0x40);
  1609  001E28  5037               	movf	_cursor,w,c
  1610  001E2A  1038               	iorwf	_cursor+1,w,c
  1611  001E2C  A4D8               	btfss	status,2,c
  1612  001E2E  D003               	goto	l2575
  1613  001E30  0E40               	movlw	64
  1614  001E32  ECB9  F010         	call	_SetDDRamAddr
  1615  001E36                     l2575:
  1616                           
  1617                           ;display_LCD.c: 178: if(cursor==1) SetDDRamAddr(0x41);
  1618  001E36  0437               	decf	_cursor,w,c
  1619  001E38  1038               	iorwf	_cursor+1,w,c
  1620  001E3A  A4D8               	btfss	status,2,c
  1621  001E3C  D003               	goto	l2579
  1622  001E3E  0E41               	movlw	65
  1623  001E40  ECB9  F010         	call	_SetDDRamAddr
  1624  001E44                     l2579:
  1625                           
  1626                           ;display_LCD.c: 179: if(cursor==2) SetDDRamAddr(0x43);
  1627  001E44  0E02               	movlw	2
  1628  001E46  1837               	xorwf	_cursor,w,c
  1629  001E48  1038               	iorwf	_cursor+1,w,c
  1630  001E4A  A4D8               	btfss	status,2,c
  1631  001E4C  D003               	goto	l2583
  1632  001E4E  0E43               	movlw	67
  1633  001E50  ECB9  F010         	call	_SetDDRamAddr
  1634  001E54                     l2583:
  1635                           
  1636                           ;display_LCD.c: 180: if(cursor==3) SetDDRamAddr(0x44);
  1637  001E54  0E03               	movlw	3
  1638  001E56  1837               	xorwf	_cursor,w,c
  1639  001E58  1038               	iorwf	_cursor+1,w,c
  1640  001E5A  A4D8               	btfss	status,2,c
  1641  001E5C  D003               	goto	l2587
  1642  001E5E  0E44               	movlw	68
  1643  001E60  ECB9  F010         	call	_SetDDRamAddr
  1644  001E64                     l2587:
  1645                           
  1646                           ;display_LCD.c: 181: if(cursor==4) SetDDRamAddr(0x46);
  1647  001E64  0E04               	movlw	4
  1648  001E66  1837               	xorwf	_cursor,w,c
  1649  001E68  1038               	iorwf	_cursor+1,w,c
  1650  001E6A  A4D8               	btfss	status,2,c
  1651  001E6C  D003               	goto	l2591
  1652  001E6E  0E46               	movlw	70
  1653  001E70  ECB9  F010         	call	_SetDDRamAddr
  1654  001E74                     l2591:
  1655                           
  1656                           ;display_LCD.c: 182: if(cursor==5) SetDDRamAddr(0x47);
  1657  001E74  0E05               	movlw	5
  1658  001E76  1837               	xorwf	_cursor,w,c
  1659  001E78  1038               	iorwf	_cursor+1,w,c
  1660  001E7A  A4D8               	btfss	status,2,c
  1661  001E7C  0012               	return	
  1662  001E7E  0E47               	movlw	71
  1663  001E80  ECB9  F010         	call	_SetDDRamAddr
  1664  001E84  0012               	return	
  1665  001E86                     __end_of_pisca_cursor:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           intcon	equ	0xFF2
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postinc1	equ	0xFE6
  1675                           postdec1	equ	0xFE5
  1676                           fsr1h	equ	0xFE2
  1677                           fsr1l	equ	0xFE1
  1678                           postinc2	equ	0xFDE
  1679                           postdec2	equ	0xFDD
  1680                           plusw2	equ	0xFDB
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _init_XLCD *****************
  1686 ;; Defined at:
  1687 ;;		line 22 in file "display_LCD.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    5
  1708 ;; This function calls:
  1709 ;;		_BusyXLCD
  1710 ;;		_OpenXLCD
  1711 ;;		_WriteCmdXLCD
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text3
  1718  0022F6                     __ptext3:
  1719                           	opt stack 0
  1720  0022F6                     _init_XLCD:
  1721                           	opt stack 25
  1722                           
  1723                           ;display_LCD.c: 23: OpenXLCD(0b00101100&0b00111000);
  1724                           
  1725                           ;incstack = 0
  1726  0022F6  0E28               	movlw	40
  1727  0022F8  EC96  F00F         	call	_OpenXLCD
  1728  0022FC                     l2235:
  1729  0022FC  EC5E  F011         	call	_BusyXLCD	;wreg free
  1730  002300  0900               	iorlw	0
  1731  002302  A4D8               	btfss	status,2,c
  1732  002304  D7FB               	goto	l2235
  1733                           
  1734                           ;display_LCD.c: 25: WriteCmdXLCD(0x06);
  1735  002306  0E06               	movlw	6
  1736  002308  EC03  F011         	call	_WriteCmdXLCD
  1737                           
  1738                           ;display_LCD.c: 26: WriteCmdXLCD(0x0C);
  1739  00230C  0E0C               	movlw	12
  1740  00230E  EC03  F011         	call	_WriteCmdXLCD
  1741  002312  0012               	return		;funcret
  1742  002314                     __end_of_init_XLCD:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           tblptrh	equ	0xFF7
  1746                           tblptrl	equ	0xFF6
  1747                           tablat	equ	0xFF5
  1748                           intcon	equ	0xFF2
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           postinc1	equ	0xFE6
  1752                           postdec1	equ	0xFE5
  1753                           fsr1h	equ	0xFE2
  1754                           fsr1l	equ	0xFE1
  1755                           postinc2	equ	0xFDE
  1756                           postdec2	equ	0xFDD
  1757                           plusw2	equ	0xFDB
  1758                           fsr2h	equ	0xFDA
  1759                           fsr2l	equ	0xFD9
  1760                           status	equ	0xFD8
  1761                           
  1762 ;; *************** function _OpenXLCD *****************
  1763 ;; Defined at:
  1764 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  lcdtype         1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  lcdtype         1   19[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    4
  1785 ;; This function calls:
  1786 ;;		_BusyXLCD
  1787 ;;		_Delay10KTCYx
  1788 ;;		_DelayPORXLCD
  1789 ;;		_SetDDRamAddr
  1790 ;;		_WriteCmdXLCD
  1791 ;; This function is called by:
  1792 ;;		_init_XLCD
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text4
  1797  001F2C                     __ptext4:
  1798                           	opt stack 0
  1799  001F2C                     _OpenXLCD:
  1800                           	opt stack 25
  1801                           
  1802                           ;incstack = 0
  1803                           ;OpenXLCD@lcdtype stored from wreg
  1804  001F2C  6E14               	movwf	OpenXLCD@lcdtype,c
  1805  001F2E  0EF0               	movlw	240
  1806  001F30  1681               	andwf	3969,f,c	;volatile
  1807  001F32  0EF0               	movlw	240
  1808  001F34  1693               	andwf	3987,f,c	;volatile
  1809  001F36  9C93               	bcf	3987,6,c	;volatile
  1810  001F38  9A93               	bcf	3987,5,c	;volatile
  1811  001F3A  9893               	bcf	3987,4,c	;volatile
  1812  001F3C  9C8A               	bcf	3978,6,c	;volatile
  1813  001F3E  9A8A               	bcf	3978,5,c	;volatile
  1814  001F40  988A               	bcf	3978,4,c	;volatile
  1815  001F42  ECB2  F011         	call	_DelayPORXLCD	;wreg free
  1816  001F46  0E30               	movlw	48
  1817  001F48  EC03  F011         	call	_WriteCmdXLCD
  1818  001F4C  0E05               	movlw	5
  1819  001F4E  EC97  F011         	call	_Delay10KTCYx
  1820  001F52  0E30               	movlw	48
  1821  001F54  EC03  F011         	call	_WriteCmdXLCD
  1822  001F58  0E01               	movlw	1
  1823  001F5A  EC97  F011         	call	_Delay10KTCYx
  1824  001F5E  0E32               	movlw	50
  1825  001F60  EC03  F011         	call	_WriteCmdXLCD
  1826  001F64                     l2055:
  1827  001F64  EC5E  F011         	call	_BusyXLCD	;wreg free
  1828  001F68  0900               	iorlw	0
  1829  001F6A  A4D8               	btfss	status,2,c
  1830  001F6C  D7FB               	goto	l2055
  1831  001F6E                     l2057:
  1832  001F6E  EC5E  F011         	call	_BusyXLCD	;wreg free
  1833  001F72  0900               	iorlw	0
  1834  001F74  A4D8               	btfss	status,2,c
  1835  001F76  D7FB               	goto	l2057
  1836  001F78  5014               	movf	OpenXLCD@lcdtype,w,c
  1837  001F7A  EC03  F011         	call	_WriteCmdXLCD
  1838  001F7E                     l2061:
  1839  001F7E  EC5E  F011         	call	_BusyXLCD	;wreg free
  1840  001F82  0900               	iorlw	0
  1841  001F84  A4D8               	btfss	status,2,c
  1842  001F86  D7FB               	goto	l2061
  1843  001F88  0E08               	movlw	8
  1844  001F8A  EC03  F011         	call	_WriteCmdXLCD
  1845  001F8E                     l2065:
  1846  001F8E  EC5E  F011         	call	_BusyXLCD	;wreg free
  1847  001F92  0900               	iorlw	0
  1848  001F94  A4D8               	btfss	status,2,c
  1849  001F96  D7FB               	goto	l2065
  1850  001F98  0E0F               	movlw	15
  1851  001F9A  EC03  F011         	call	_WriteCmdXLCD
  1852  001F9E                     l2069:
  1853  001F9E  EC5E  F011         	call	_BusyXLCD	;wreg free
  1854  001FA2  0900               	iorlw	0
  1855  001FA4  A4D8               	btfss	status,2,c
  1856  001FA6  D7FB               	goto	l2069
  1857  001FA8  0E01               	movlw	1
  1858  001FAA  EC03  F011         	call	_WriteCmdXLCD
  1859  001FAE                     l2073:
  1860  001FAE  EC5E  F011         	call	_BusyXLCD	;wreg free
  1861  001FB2  0900               	iorlw	0
  1862  001FB4  A4D8               	btfss	status,2,c
  1863  001FB6  D7FB               	goto	l2073
  1864  001FB8  0E04               	movlw	4
  1865  001FBA  EC03  F011         	call	_WriteCmdXLCD
  1866  001FBE                     l2077:
  1867  001FBE  EC5E  F011         	call	_BusyXLCD	;wreg free
  1868  001FC2  0900               	iorlw	0
  1869  001FC4  A4D8               	btfss	status,2,c
  1870  001FC6  D7FB               	goto	l2077
  1871  001FC8  0E80               	movlw	128
  1872  001FCA  ECB9  F010         	call	_SetDDRamAddr
  1873  001FCE  0012               	return	
  1874  001FD0                     __end_of_OpenXLCD:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           intcon	equ	0xFF2
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postinc1	equ	0xFE6
  1884                           postdec1	equ	0xFE5
  1885                           fsr1h	equ	0xFE2
  1886                           fsr1l	equ	0xFE1
  1887                           postinc2	equ	0xFDE
  1888                           postdec2	equ	0xFDD
  1889                           plusw2	equ	0xFDB
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _WriteCmdXLCD *****************
  1895 ;; Defined at:
  1896 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  cmd             1    wreg     unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  cmd             1   15[COMRAM] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1913 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		_DelayFor18TCY
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_init_XLCD
  1922 ;;		_OpenXLCD
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text5
  1927  002206                     __ptext5:
  1928                           	opt stack 0
  1929  002206                     _WriteCmdXLCD:
  1930                           	opt stack 26
  1931                           
  1932                           ;incstack = 0
  1933                           ;WriteCmdXLCD@cmd stored from wreg
  1934  002206  6E10               	movwf	WriteCmdXLCD@cmd,c
  1935  002208  0EF0               	movlw	240
  1936  00220A  1693               	andwf	3987,f,c	;volatile
  1937  00220C  0EF0               	movlw	240
  1938  00220E  1681               	andwf	3969,f,c	;volatile
  1939  002210  3810               	swapf	WriteCmdXLCD@cmd,w,c
  1940  002212  0B0F               	andlw	15
  1941  002214  0B0F               	andlw	15
  1942  002216  1281               	iorwf	3969,f,c	;volatile
  1943  002218  9C8A               	bcf	3978,6,c	;volatile
  1944  00221A  9A8A               	bcf	3978,5,c	;volatile
  1945  00221C  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  1946  002220  888A               	bsf	3978,4,c	;volatile
  1947  002222  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  1948  002226  988A               	bcf	3978,4,c	;volatile
  1949  002228  0EF0               	movlw	240
  1950  00222A  1681               	andwf	3969,f,c	;volatile
  1951  00222C  5010               	movf	WriteCmdXLCD@cmd,w,c
  1952  00222E  0B0F               	andlw	15
  1953  002230  1281               	iorwf	3969,f,c	;volatile
  1954  002232  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  1955  002236  888A               	bsf	3978,4,c	;volatile
  1956  002238  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  1957  00223C  988A               	bcf	3978,4,c	;volatile
  1958  00223E  0E0F               	movlw	15
  1959  002240  1293               	iorwf	3987,f,c	;volatile
  1960  002242  0012               	return	
  1961  002244                     __end_of_WriteCmdXLCD:
  1962                           	opt stack 0
  1963                           tblptru	equ	0xFF8
  1964                           tblptrh	equ	0xFF7
  1965                           tblptrl	equ	0xFF6
  1966                           tablat	equ	0xFF5
  1967                           intcon	equ	0xFF2
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postinc1	equ	0xFE6
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           postinc2	equ	0xFDE
  1975                           postdec2	equ	0xFDD
  1976                           plusw2	equ	0xFDB
  1977                           fsr2h	equ	0xFDA
  1978                           fsr2l	equ	0xFD9
  1979                           status	equ	0xFD8
  1980                           
  1981 ;; *************** function _DelayPORXLCD *****************
  1982 ;; Defined at:
  1983 ;;		line 11 in file "display_LCD.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    2
  2004 ;; This function calls:
  2005 ;;		_Delay1KTCYx
  2006 ;; This function is called by:
  2007 ;;		_OpenXLCD
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text6
  2012  002364                     __ptext6:
  2013                           	opt stack 0
  2014  002364                     _DelayPORXLCD:
  2015                           	opt stack 26
  2016                           
  2017                           ;display_LCD.c: 12: Delay1KTCYx(180);
  2018                           
  2019                           ;incstack = 0
  2020  002364  0EB4               	movlw	180
  2021  002366  ECA2  F011         	call	_Delay1KTCYx
  2022  00236A  0012               	return	
  2023  00236C                     __end_of_DelayPORXLCD:
  2024                           	opt stack 0
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           intcon	equ	0xFF2
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           postinc1	equ	0xFE6
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           postinc2	equ	0xFDE
  2037                           postdec2	equ	0xFDD
  2038                           plusw2	equ	0xFDB
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _Delay1KTCYx *****************
  2044 ;; Defined at:
  2045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  unit            1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  unit            1   14[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2062 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_DelayPORXLCD
  2070 ;;		_DelayXLCD
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text7
  2075  002344                     __ptext7:
  2076                           	opt stack 0
  2077  002344                     _Delay1KTCYx:
  2078                           	opt stack 26
  2079                           
  2080                           ;incstack = 0
  2081                           ;Delay1KTCYx@unit stored from wreg
  2082  002344  6E0F               	movwf	Delay1KTCYx@unit,c
  2083  002346  0EC8               	movlw	200
  2084  002348                     u2967:
  2085  002348  D000               	nop2	
  2086  00234A  2EE8               	decfsz	wreg,f,c
  2087  00234C  D7FD               	bra	u2967
  2088  00234E  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2089  002350  D7FA               	goto	l1007
  2090  002352  0012               	return	
  2091  002354                     __end_of_Delay1KTCYx:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postinc1	equ	0xFE6
  2101                           postdec1	equ	0xFE5
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           postinc2	equ	0xFDE
  2105                           postdec2	equ	0xFDD
  2106                           plusw2	equ	0xFDB
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _Delay10KTCYx *****************
  2112 ;; Defined at:
  2113 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  unit            1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  unit            1   15[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0
  2128 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2129 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2130 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_OpenXLCD
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text8
  2142  00232E                     __ptext8:
  2143                           	opt stack 0
  2144  00232E                     _Delay10KTCYx:
  2145                           	opt stack 27
  2146                           
  2147                           ;incstack = 0
  2148                           ;Delay10KTCYx@unit stored from wreg
  2149  00232E  6E10               	movwf	Delay10KTCYx@unit,c
  2150  002330  0E0D               	movlw	13
  2151  002332  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2152  002334  0EFC               	movlw	252
  2153  002336                     u2977:
  2154  002336  2EE8               	decfsz	wreg,f,c
  2155  002338  D7FE               	bra	u2977
  2156  00233A  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2157  00233C  D7FC               	bra	u2977
  2158  00233E  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2159  002340  D7F7               	goto	l1099
  2160  002342  0012               	return	
  2161  002344                     __end_of_Delay10KTCYx:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           intcon	equ	0xFF2
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postinc1	equ	0xFE6
  2171                           postdec1	equ	0xFE5
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           postinc2	equ	0xFDE
  2175                           postdec2	equ	0xFDD
  2176                           plusw2	equ	0xFDB
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _exibir_lcd *****************
  2182 ;; Defined at:
  2183 ;;		line 29 in file "display_LCD.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  Relogio         2    0[BANK0 ] PTR struct .
  2186 ;;		 -> Relogio(6), 
  2187 ;;  Despertador     2    2[BANK0 ] PTR struct .
  2188 ;;		 -> Despertador(6), 
  2189 ;;  Calendario      2    4[BANK0 ] PTR struct .
  2190 ;;		 -> Calendario(6), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  str            16    6[BANK0 ] unsigned char [16]
  2193 ;;  f               2   44[BANK0 ] int 
  2194 ;;  e               2   42[BANK0 ] int 
  2195 ;;  d               2   40[BANK0 ] int 
  2196 ;;  c               2   38[BANK0 ] int 
  2197 ;;  b               2   36[BANK0 ] int 
  2198 ;;  a               2   34[BANK0 ] int 
  2199 ;;  l               2   32[BANK0 ] int 
  2200 ;;  k               2   30[BANK0 ] int 
  2201 ;;  j               2   28[BANK0 ] int 
  2202 ;;  i               2   26[BANK0 ] int 
  2203 ;;  h               2   24[BANK0 ] int 
  2204 ;;  g               2   22[BANK0 ] int 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         0       6       0       0       0       0       0       0       0
  2215 ;;      Locals:         0      40       0       0       0       0       0       0       0
  2216 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         2      46       0       0       0       0       0       0       0
  2218 ;;Total ram usage:       48 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    5
  2221 ;; This function calls:
  2222 ;;		_SetDDRamAddr
  2223 ;;		___awdiv
  2224 ;;		___awmod
  2225 ;;		_putrsXLCD
  2226 ;;		_sprintf
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text9
  2233  000F74                     __ptext9:
  2234                           	opt stack 0
  2235  000F74                     _exibir_lcd:
  2236                           	opt stack 25
  2237                           
  2238                           ;display_LCD.c: 31: int a, b, c, d, e, f, g, h, i, j, k, l;
  2239                           ;display_LCD.c: 32: char str[16];
  2240                           ;display_LCD.c: 35: if(tela_exibida==0){
  2241                           
  2242                           ;incstack = 0
  2243  000F74  503B               	movf	_tela_exibida,w,c
  2244  000F76  103C               	iorwf	_tela_exibida+1,w,c
  2245  000F78  A4D8               	btfss	status,2,c
  2246  000F7A  D22A               	goto	l2707
  2247                           
  2248                           ;display_LCD.c: 36: a=((Relogio->hora)/10)-(((Relogio->hora)%10)/10);
  2249  000F7C  0100               	movlb	0	; () banked
  2250  000F7E  EE20 F004          	lfsr	2,4
  2251  000F82  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2252  000F84  26D9               	addwf	fsr2l,f,c
  2253  000F86  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2254  000F88  22DA               	addwfc	fsr2h,f,c
  2255  000F8A  CFDE F015          	movff	postinc2,___awdiv@dividend
  2256  000F8E  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2257  000F92  0E00               	movlw	0
  2258  000F94  6E18               	movwf	___awdiv@divisor+1,c
  2259  000F96  0E0A               	movlw	10
  2260  000F98  6E17               	movwf	___awdiv@divisor,c
  2261  000F9A  ECE8  F00F         	call	___awdiv	;wreg free
  2262  000F9E  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2263  000FA2  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2264  000FA6  0E00               	movlw	0
  2265  000FA8  6E12               	movwf	___awmod@divisor+1,c
  2266  000FAA  0E0A               	movlw	10
  2267  000FAC  6E11               	movwf	___awmod@divisor,c
  2268  000FAE  0100               	movlb	0	; () banked
  2269  000FB0  EE20 F004          	lfsr	2,4
  2270  000FB4  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2271  000FB6  26D9               	addwf	fsr2l,f,c
  2272  000FB8  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2273  000FBA  22DA               	addwfc	fsr2h,f,c
  2274  000FBC  CFDE F00F          	movff	postinc2,___awmod@dividend
  2275  000FC0  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2276  000FC4  EC2A  F010         	call	___awmod	;wreg free
  2277  000FC8  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2278  000FCC  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2279  000FD0  0E00               	movlw	0
  2280  000FD2  6E18               	movwf	___awdiv@divisor+1,c
  2281  000FD4  0E0A               	movlw	10
  2282  000FD6  6E17               	movwf	___awdiv@divisor,c
  2283  000FD8  ECE8  F00F         	call	___awdiv	;wreg free
  2284  000FDC  1E15               	comf	?___awdiv,f,c
  2285  000FDE  1E16               	comf	?___awdiv+1,f,c
  2286  000FE0  4A15               	infsnz	?___awdiv,f,c
  2287  000FE2  2A16               	incf	?___awdiv+1,f,c
  2288  000FE4  5015               	movf	?___awdiv,w,c
  2289  000FE6  2433               	addwf	??_exibir_lcd,w,c
  2290  000FE8  0100               	movlb	0	; () banked
  2291  000FEA  6F82               	movwf	exibir_lcd@a& (0+255),b
  2292  000FEC  5016               	movf	?___awdiv+1,w,c
  2293  000FEE  2034               	addwfc	??_exibir_lcd+1,w,c
  2294  000FF0  0100               	movlb	0	; () banked
  2295  000FF2  6F83               	movwf	(exibir_lcd@a+1)& (0+255),b
  2296                           
  2297                           ;display_LCD.c: 37: b=Relogio->hora%10;
  2298  000FF4  0100               	movlb	0	; () banked
  2299  000FF6  EE20 F004          	lfsr	2,4
  2300  000FFA  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2301  000FFC  26D9               	addwf	fsr2l,f,c
  2302  000FFE  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2303  001000  22DA               	addwfc	fsr2h,f,c
  2304  001002  CFDE F00F          	movff	postinc2,___awmod@dividend
  2305  001006  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2306  00100A  0E00               	movlw	0
  2307  00100C  6E12               	movwf	___awmod@divisor+1,c
  2308  00100E  0E0A               	movlw	10
  2309  001010  6E11               	movwf	___awmod@divisor,c
  2310  001012  EC2A  F010         	call	___awmod	;wreg free
  2311  001016  C00F  F084         	movff	?___awmod,exibir_lcd@b
  2312  00101A  C010  F085         	movff	?___awmod+1,exibir_lcd@b+1
  2313                           
  2314                           ;display_LCD.c: 38: c=((Relogio->minuto)/10)-(((Relogio->minuto)%10)/10);
  2315  00101E  C060  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2316  001022  C061  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2317  001026  CFDE F015          	movff	postinc2,___awdiv@dividend
  2318  00102A  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2319  00102E  0E00               	movlw	0
  2320  001030  6E18               	movwf	___awdiv@divisor+1,c
  2321  001032  0E0A               	movlw	10
  2322  001034  6E17               	movwf	___awdiv@divisor,c
  2323  001036  ECE8  F00F         	call	___awdiv	;wreg free
  2324  00103A  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2325  00103E  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2326  001042  0E00               	movlw	0
  2327  001044  6E12               	movwf	___awmod@divisor+1,c
  2328  001046  0E0A               	movlw	10
  2329  001048  6E11               	movwf	___awmod@divisor,c
  2330  00104A  C060  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2331  00104E  C061  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2332  001052  CFDE F00F          	movff	postinc2,___awmod@dividend
  2333  001056  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2334  00105A  EC2A  F010         	call	___awmod	;wreg free
  2335  00105E  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2336  001062  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2337  001066  0E00               	movlw	0
  2338  001068  6E18               	movwf	___awdiv@divisor+1,c
  2339  00106A  0E0A               	movlw	10
  2340  00106C  6E17               	movwf	___awdiv@divisor,c
  2341  00106E  ECE8  F00F         	call	___awdiv	;wreg free
  2342  001072  1E15               	comf	?___awdiv,f,c
  2343  001074  1E16               	comf	?___awdiv+1,f,c
  2344  001076  4A15               	infsnz	?___awdiv,f,c
  2345  001078  2A16               	incf	?___awdiv+1,f,c
  2346  00107A  5015               	movf	?___awdiv,w,c
  2347  00107C  2433               	addwf	??_exibir_lcd,w,c
  2348  00107E  0100               	movlb	0	; () banked
  2349  001080  6F86               	movwf	exibir_lcd@c& (0+255),b
  2350  001082  5016               	movf	?___awdiv+1,w,c
  2351  001084  2034               	addwfc	??_exibir_lcd+1,w,c
  2352  001086  0100               	movlb	0	; () banked
  2353  001088  6F87               	movwf	(exibir_lcd@c+1)& (0+255),b
  2354                           
  2355                           ;display_LCD.c: 39: d=Relogio->minuto%10;
  2356  00108A  C060  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2357  00108E  C061  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2358  001092  CFDE F00F          	movff	postinc2,___awmod@dividend
  2359  001096  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2360  00109A  0E00               	movlw	0
  2361  00109C  6E12               	movwf	___awmod@divisor+1,c
  2362  00109E  0E0A               	movlw	10
  2363  0010A0  6E11               	movwf	___awmod@divisor,c
  2364  0010A2  EC2A  F010         	call	___awmod	;wreg free
  2365  0010A6  C00F  F088         	movff	?___awmod,exibir_lcd@d
  2366  0010AA  C010  F089         	movff	?___awmod+1,exibir_lcd@d+1
  2367                           
  2368                           ;display_LCD.c: 40: e=((Relogio->segundo)/10)-(((Relogio->segundo)%10)/10);
  2369  0010AE  0100               	movlb	0	; () banked
  2370  0010B0  EE20 F002          	lfsr	2,2
  2371  0010B4  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2372  0010B6  26D9               	addwf	fsr2l,f,c
  2373  0010B8  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2374  0010BA  22DA               	addwfc	fsr2h,f,c
  2375  0010BC  CFDE F015          	movff	postinc2,___awdiv@dividend
  2376  0010C0  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2377  0010C4  0E00               	movlw	0
  2378  0010C6  6E18               	movwf	___awdiv@divisor+1,c
  2379  0010C8  0E0A               	movlw	10
  2380  0010CA  6E17               	movwf	___awdiv@divisor,c
  2381  0010CC  ECE8  F00F         	call	___awdiv	;wreg free
  2382  0010D0  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2383  0010D4  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2384  0010D8  0E00               	movlw	0
  2385  0010DA  6E12               	movwf	___awmod@divisor+1,c
  2386  0010DC  0E0A               	movlw	10
  2387  0010DE  6E11               	movwf	___awmod@divisor,c
  2388  0010E0  0100               	movlb	0	; () banked
  2389  0010E2  EE20 F002          	lfsr	2,2
  2390  0010E6  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2391  0010E8  26D9               	addwf	fsr2l,f,c
  2392  0010EA  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2393  0010EC  22DA               	addwfc	fsr2h,f,c
  2394  0010EE  CFDE F00F          	movff	postinc2,___awmod@dividend
  2395  0010F2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2396  0010F6  EC2A  F010         	call	___awmod	;wreg free
  2397  0010FA  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2398  0010FE  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2399  001102  0E00               	movlw	0
  2400  001104  6E18               	movwf	___awdiv@divisor+1,c
  2401  001106  0E0A               	movlw	10
  2402  001108  6E17               	movwf	___awdiv@divisor,c
  2403  00110A  ECE8  F00F         	call	___awdiv	;wreg free
  2404  00110E  1E15               	comf	?___awdiv,f,c
  2405  001110  1E16               	comf	?___awdiv+1,f,c
  2406  001112  4A15               	infsnz	?___awdiv,f,c
  2407  001114  2A16               	incf	?___awdiv+1,f,c
  2408  001116  5015               	movf	?___awdiv,w,c
  2409  001118  2433               	addwf	??_exibir_lcd,w,c
  2410  00111A  0100               	movlb	0	; () banked
  2411  00111C  6F8A               	movwf	exibir_lcd@e& (0+255),b
  2412  00111E  5016               	movf	?___awdiv+1,w,c
  2413  001120  2034               	addwfc	??_exibir_lcd+1,w,c
  2414  001122  0100               	movlb	0	; () banked
  2415  001124  6F8B               	movwf	(exibir_lcd@e+1)& (0+255),b
  2416                           
  2417                           ;display_LCD.c: 41: f=Relogio->segundo%10;
  2418  001126  0100               	movlb	0	; () banked
  2419  001128  EE20 F002          	lfsr	2,2
  2420  00112C  5160               	movf	exibir_lcd@Relogio& (0+255),w,b
  2421  00112E  26D9               	addwf	fsr2l,f,c
  2422  001130  5161               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2423  001132  22DA               	addwfc	fsr2h,f,c
  2424  001134  CFDE F00F          	movff	postinc2,___awmod@dividend
  2425  001138  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2426  00113C  0E00               	movlw	0
  2427  00113E  6E12               	movwf	___awmod@divisor+1,c
  2428  001140  0E0A               	movlw	10
  2429  001142  6E11               	movwf	___awmod@divisor,c
  2430  001144  EC2A  F010         	call	___awmod	;wreg free
  2431  001148  C00F  F08C         	movff	?___awmod,exibir_lcd@f
  2432  00114C  C010  F08D         	movff	?___awmod+1,exibir_lcd@f+1
  2433                           
  2434                           ;display_LCD.c: 42: sprintf(str, "HORA: %d%d:%d%d:%d%d ", a, b, c, d, e, f);
  2435  001150  0E66               	movlw	low exibir_lcd@str
  2436  001152  6E1B               	movwf	sprintf@sp,c
  2437  001154  0E00               	movlw	high exibir_lcd@str
  2438  001156  6E1C               	movwf	sprintf@sp+1,c
  2439  001158  0E22               	movlw	low STR_1
  2440  00115A  6E1D               	movwf	sprintf@f,c
  2441  00115C  0E08               	movlw	high STR_1
  2442  00115E  6E1E               	movwf	sprintf@f+1,c
  2443  001160  C082  F01F         	movff	exibir_lcd@a,?_sprintf+4
  2444  001164  C083  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  2445  001168  C084  F021         	movff	exibir_lcd@b,?_sprintf+6
  2446  00116C  C085  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  2447  001170  C086  F023         	movff	exibir_lcd@c,?_sprintf+8
  2448  001174  C087  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  2449  001178  C088  F025         	movff	exibir_lcd@d,?_sprintf+10
  2450  00117C  C089  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  2451  001180  C08A  F027         	movff	exibir_lcd@e,?_sprintf+12
  2452  001184  C08B  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  2453  001188  C08C  F029         	movff	exibir_lcd@f,?_sprintf+14
  2454  00118C  C08D  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  2455  001190  EC6A  F00D         	call	_sprintf	;wreg free
  2456                           
  2457                           ;display_LCD.c: 43: SetDDRamAddr(0x00);
  2458  001194  0E00               	movlw	0
  2459  001196  ECB9  F010         	call	_SetDDRamAddr
  2460                           
  2461                           ;display_LCD.c: 44: putrsXLCD(str);
  2462  00119A  0E66               	movlw	low exibir_lcd@str
  2463  00119C  6E11               	movwf	putrsXLCD@buffer,c
  2464  00119E  0E00               	movlw	high exibir_lcd@str
  2465  0011A0  6E12               	movwf	putrsXLCD@buffer+1,c
  2466  0011A2  EC62  F010         	call	_putrsXLCD	;wreg free
  2467                           
  2468                           ;display_LCD.c: 48: g=((Calendario->dia)/10)-(((Calendario->dia)%10)/10);
  2469  0011A6  C064  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2470  0011AA  C065  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2471  0011AE  CFDE F015          	movff	postinc2,___awdiv@dividend
  2472  0011B2  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2473  0011B6  0E00               	movlw	0
  2474  0011B8  6E18               	movwf	___awdiv@divisor+1,c
  2475  0011BA  0E0A               	movlw	10
  2476  0011BC  6E17               	movwf	___awdiv@divisor,c
  2477  0011BE  ECE8  F00F         	call	___awdiv	;wreg free
  2478  0011C2  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2479  0011C6  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2480  0011CA  0E00               	movlw	0
  2481  0011CC  6E12               	movwf	___awmod@divisor+1,c
  2482  0011CE  0E0A               	movlw	10
  2483  0011D0  6E11               	movwf	___awmod@divisor,c
  2484  0011D2  C064  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2485  0011D6  C065  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2486  0011DA  CFDE F00F          	movff	postinc2,___awmod@dividend
  2487  0011DE  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2488  0011E2  EC2A  F010         	call	___awmod	;wreg free
  2489  0011E6  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2490  0011EA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2491  0011EE  0E00               	movlw	0
  2492  0011F0  6E18               	movwf	___awdiv@divisor+1,c
  2493  0011F2  0E0A               	movlw	10
  2494  0011F4  6E17               	movwf	___awdiv@divisor,c
  2495  0011F6  ECE8  F00F         	call	___awdiv	;wreg free
  2496  0011FA  1E15               	comf	?___awdiv,f,c
  2497  0011FC  1E16               	comf	?___awdiv+1,f,c
  2498  0011FE  4A15               	infsnz	?___awdiv,f,c
  2499  001200  2A16               	incf	?___awdiv+1,f,c
  2500  001202  5015               	movf	?___awdiv,w,c
  2501  001204  2433               	addwf	??_exibir_lcd,w,c
  2502  001206  0100               	movlb	0	; () banked
  2503  001208  6F76               	movwf	exibir_lcd@g& (0+255),b
  2504  00120A  5016               	movf	?___awdiv+1,w,c
  2505  00120C  2034               	addwfc	??_exibir_lcd+1,w,c
  2506  00120E  0100               	movlb	0	; () banked
  2507  001210  6F77               	movwf	(exibir_lcd@g+1)& (0+255),b
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;display_LCD.c: 49: h=Calendario->dia%10;
  2511  001212  C064  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2512  001216  C065  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2513  00121A  CFDE F00F          	movff	postinc2,___awmod@dividend
  2514  00121E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2515  001222  0E00               	movlw	0
  2516  001224  6E12               	movwf	___awmod@divisor+1,c
  2517  001226  0E0A               	movlw	10
  2518  001228  6E11               	movwf	___awmod@divisor,c
  2519  00122A  EC2A  F010         	call	___awmod	;wreg free
  2520  00122E  C00F  F078         	movff	?___awmod,exibir_lcd@h
  2521  001232  C010  F079         	movff	?___awmod+1,exibir_lcd@h+1
  2522                           
  2523                           ;display_LCD.c: 50: i=((Calendario->mes)/10)-(((Calendario->mes)%10)/10);
  2524  001236  0100               	movlb	0	; () banked
  2525  001238  EE20 F002          	lfsr	2,2
  2526  00123C  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2527  00123E  26D9               	addwf	fsr2l,f,c
  2528  001240  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2529  001242  22DA               	addwfc	fsr2h,f,c
  2530  001244  CFDE F015          	movff	postinc2,___awdiv@dividend
  2531  001248  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2532  00124C  0E00               	movlw	0
  2533  00124E  6E18               	movwf	___awdiv@divisor+1,c
  2534  001250  0E0A               	movlw	10
  2535  001252  6E17               	movwf	___awdiv@divisor,c
  2536  001254  ECE8  F00F         	call	___awdiv	;wreg free
  2537  001258  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2538  00125C  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2539  001260  0E00               	movlw	0
  2540  001262  6E12               	movwf	___awmod@divisor+1,c
  2541  001264  0E0A               	movlw	10
  2542  001266  6E11               	movwf	___awmod@divisor,c
  2543  001268  0100               	movlb	0	; () banked
  2544  00126A  EE20 F002          	lfsr	2,2
  2545  00126E  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2546  001270  26D9               	addwf	fsr2l,f,c
  2547  001272  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2548  001274  22DA               	addwfc	fsr2h,f,c
  2549  001276  CFDE F00F          	movff	postinc2,___awmod@dividend
  2550  00127A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2551  00127E  EC2A  F010         	call	___awmod	;wreg free
  2552  001282  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2553  001286  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2554  00128A  0E00               	movlw	0
  2555  00128C  6E18               	movwf	___awdiv@divisor+1,c
  2556  00128E  0E0A               	movlw	10
  2557  001290  6E17               	movwf	___awdiv@divisor,c
  2558  001292  ECE8  F00F         	call	___awdiv	;wreg free
  2559  001296  1E15               	comf	?___awdiv,f,c
  2560  001298  1E16               	comf	?___awdiv+1,f,c
  2561  00129A  4A15               	infsnz	?___awdiv,f,c
  2562  00129C  2A16               	incf	?___awdiv+1,f,c
  2563  00129E  5015               	movf	?___awdiv,w,c
  2564  0012A0  2433               	addwf	??_exibir_lcd,w,c
  2565  0012A2  0100               	movlb	0	; () banked
  2566  0012A4  6F7A               	movwf	exibir_lcd@i& (0+255),b
  2567  0012A6  5016               	movf	?___awdiv+1,w,c
  2568  0012A8  2034               	addwfc	??_exibir_lcd+1,w,c
  2569  0012AA  0100               	movlb	0	; () banked
  2570  0012AC  6F7B               	movwf	(exibir_lcd@i+1)& (0+255),b
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;display_LCD.c: 51: j=Calendario->mes%10;
  2574  0012AE  0100               	movlb	0	; () banked
  2575  0012B0  EE20 F002          	lfsr	2,2
  2576  0012B4  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2577  0012B6  26D9               	addwf	fsr2l,f,c
  2578  0012B8  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2579  0012BA  22DA               	addwfc	fsr2h,f,c
  2580  0012BC  CFDE F00F          	movff	postinc2,___awmod@dividend
  2581  0012C0  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2582  0012C4  0E00               	movlw	0
  2583  0012C6  6E12               	movwf	___awmod@divisor+1,c
  2584  0012C8  0E0A               	movlw	10
  2585  0012CA  6E11               	movwf	___awmod@divisor,c
  2586  0012CC  EC2A  F010         	call	___awmod	;wreg free
  2587  0012D0  C00F  F07C         	movff	?___awmod,exibir_lcd@j
  2588  0012D4  C010  F07D         	movff	?___awmod+1,exibir_lcd@j+1
  2589                           
  2590                           ;display_LCD.c: 52: k=((Calendario->ano)/10)-(((Calendario->ano)%10)/10);
  2591  0012D8  0100               	movlb	0	; () banked
  2592  0012DA  EE20 F004          	lfsr	2,4
  2593  0012DE  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2594  0012E0  26D9               	addwf	fsr2l,f,c
  2595  0012E2  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2596  0012E4  22DA               	addwfc	fsr2h,f,c
  2597  0012E6  CFDE F015          	movff	postinc2,___awdiv@dividend
  2598  0012EA  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2599  0012EE  0E00               	movlw	0
  2600  0012F0  6E18               	movwf	___awdiv@divisor+1,c
  2601  0012F2  0E0A               	movlw	10
  2602  0012F4  6E17               	movwf	___awdiv@divisor,c
  2603  0012F6  ECE8  F00F         	call	___awdiv	;wreg free
  2604  0012FA  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2605  0012FE  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2606  001302  0E00               	movlw	0
  2607  001304  6E12               	movwf	___awmod@divisor+1,c
  2608  001306  0E0A               	movlw	10
  2609  001308  6E11               	movwf	___awmod@divisor,c
  2610  00130A  0100               	movlb	0	; () banked
  2611  00130C  EE20 F004          	lfsr	2,4
  2612  001310  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2613  001312  26D9               	addwf	fsr2l,f,c
  2614  001314  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2615  001316  22DA               	addwfc	fsr2h,f,c
  2616  001318  CFDE F00F          	movff	postinc2,___awmod@dividend
  2617  00131C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2618  001320  EC2A  F010         	call	___awmod	;wreg free
  2619  001324  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2620  001328  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2621  00132C  0E00               	movlw	0
  2622  00132E  6E18               	movwf	___awdiv@divisor+1,c
  2623  001330  0E0A               	movlw	10
  2624  001332  6E17               	movwf	___awdiv@divisor,c
  2625  001334  ECE8  F00F         	call	___awdiv	;wreg free
  2626  001338  1E15               	comf	?___awdiv,f,c
  2627  00133A  1E16               	comf	?___awdiv+1,f,c
  2628  00133C  4A15               	infsnz	?___awdiv,f,c
  2629  00133E  2A16               	incf	?___awdiv+1,f,c
  2630  001340  5015               	movf	?___awdiv,w,c
  2631  001342  2433               	addwf	??_exibir_lcd,w,c
  2632  001344  0100               	movlb	0	; () banked
  2633  001346  6F7E               	movwf	exibir_lcd@k& (0+255),b
  2634  001348  5016               	movf	?___awdiv+1,w,c
  2635  00134A  2034               	addwfc	??_exibir_lcd+1,w,c
  2636  00134C  0100               	movlb	0	; () banked
  2637  00134E  6F7F               	movwf	(exibir_lcd@k+1)& (0+255),b
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;display_LCD.c: 53: l=Calendario->ano%10;
  2641  001350  0100               	movlb	0	; () banked
  2642  001352  EE20 F004          	lfsr	2,4
  2643  001356  5164               	movf	exibir_lcd@Calendario& (0+255),w,b
  2644  001358  26D9               	addwf	fsr2l,f,c
  2645  00135A  5165               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2646  00135C  22DA               	addwfc	fsr2h,f,c
  2647  00135E  CFDE F00F          	movff	postinc2,___awmod@dividend
  2648  001362  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2649  001366  0E00               	movlw	0
  2650  001368  6E12               	movwf	___awmod@divisor+1,c
  2651  00136A  0E0A               	movlw	10
  2652  00136C  6E11               	movwf	___awmod@divisor,c
  2653  00136E  EC2A  F010         	call	___awmod	;wreg free
  2654  001372  C00F  F080         	movff	?___awmod,exibir_lcd@l
  2655  001376  C010  F081         	movff	?___awmod+1,exibir_lcd@l+1
  2656                           
  2657                           ;display_LCD.c: 54: sprintf(str, "DATA: %d%d:%d%d:%d%d", g, h, i, j, k, l);
  2658  00137A  0E66               	movlw	low exibir_lcd@str
  2659  00137C  6E1B               	movwf	sprintf@sp,c
  2660  00137E  0E00               	movlw	high exibir_lcd@str
  2661  001380  6E1C               	movwf	sprintf@sp+1,c
  2662  001382  0E38               	movlw	low STR_2
  2663  001384  6E1D               	movwf	sprintf@f,c
  2664  001386  0E08               	movlw	high STR_2
  2665  001388  6E1E               	movwf	sprintf@f+1,c
  2666  00138A  C076  F01F         	movff	exibir_lcd@g,?_sprintf+4
  2667  00138E  C077  F020         	movff	exibir_lcd@g+1,?_sprintf+5
  2668  001392  C078  F021         	movff	exibir_lcd@h,?_sprintf+6
  2669  001396  C079  F022         	movff	exibir_lcd@h+1,?_sprintf+7
  2670  00139A  C07A  F023         	movff	exibir_lcd@i,?_sprintf+8
  2671  00139E  C07B  F024         	movff	exibir_lcd@i+1,?_sprintf+9
  2672  0013A2  C07C  F025         	movff	exibir_lcd@j,?_sprintf+10
  2673  0013A6  C07D  F026         	movff	exibir_lcd@j+1,?_sprintf+11
  2674  0013AA  C07E  F027         	movff	exibir_lcd@k,?_sprintf+12
  2675  0013AE  C07F  F028         	movff	exibir_lcd@k+1,?_sprintf+13
  2676  0013B2  C080  F029         	movff	exibir_lcd@l,?_sprintf+14
  2677  0013B6  C081  F02A         	movff	exibir_lcd@l+1,?_sprintf+15
  2678  0013BA  EC6A  F00D         	call	_sprintf	;wreg free
  2679                           
  2680                           ;display_LCD.c: 55: SetDDRamAddr(0x40);
  2681  0013BE  0E40               	movlw	64
  2682  0013C0  ECB9  F010         	call	_SetDDRamAddr
  2683                           
  2684                           ;display_LCD.c: 56: putrsXLCD(str);
  2685  0013C4  0E66               	movlw	low exibir_lcd@str
  2686  0013C6  6E11               	movwf	putrsXLCD@buffer,c
  2687  0013C8  0E00               	movlw	high exibir_lcd@str
  2688  0013CA  6E12               	movwf	putrsXLCD@buffer+1,c
  2689  0013CC  EC62  F010         	call	_putrsXLCD	;wreg free
  2690  0013D0                     l2707:
  2691                           
  2692                           ;display_LCD.c: 57: }
  2693                           ;display_LCD.c: 60: if(tela_exibida==1){
  2694  0013D0  043B               	decf	_tela_exibida,w,c
  2695  0013D2  103C               	iorwf	_tela_exibida+1,w,c
  2696  0013D4  A4D8               	btfss	status,2,c
  2697  0013D6  0012               	return	
  2698                           
  2699                           ;display_LCD.c: 61: a=((Despertador->hora)/10)-(((Despertador->hora)%10)/10);
  2700  0013D8  0100               	movlb	0	; () banked
  2701  0013DA  EE20 F004          	lfsr	2,4
  2702  0013DE  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2703  0013E0  26D9               	addwf	fsr2l,f,c
  2704  0013E2  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2705  0013E4  22DA               	addwfc	fsr2h,f,c
  2706  0013E6  CFDE F015          	movff	postinc2,___awdiv@dividend
  2707  0013EA  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2708  0013EE  0E00               	movlw	0
  2709  0013F0  6E18               	movwf	___awdiv@divisor+1,c
  2710  0013F2  0E0A               	movlw	10
  2711  0013F4  6E17               	movwf	___awdiv@divisor,c
  2712  0013F6  ECE8  F00F         	call	___awdiv	;wreg free
  2713  0013FA  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2714  0013FE  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2715  001402  0E00               	movlw	0
  2716  001404  6E12               	movwf	___awmod@divisor+1,c
  2717  001406  0E0A               	movlw	10
  2718  001408  6E11               	movwf	___awmod@divisor,c
  2719  00140A  0100               	movlb	0	; () banked
  2720  00140C  EE20 F004          	lfsr	2,4
  2721  001410  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2722  001412  26D9               	addwf	fsr2l,f,c
  2723  001414  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2724  001416  22DA               	addwfc	fsr2h,f,c
  2725  001418  CFDE F00F          	movff	postinc2,___awmod@dividend
  2726  00141C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2727  001420  EC2A  F010         	call	___awmod	;wreg free
  2728  001424  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2729  001428  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2730  00142C  0E00               	movlw	0
  2731  00142E  6E18               	movwf	___awdiv@divisor+1,c
  2732  001430  0E0A               	movlw	10
  2733  001432  6E17               	movwf	___awdiv@divisor,c
  2734  001434  ECE8  F00F         	call	___awdiv	;wreg free
  2735  001438  1E15               	comf	?___awdiv,f,c
  2736  00143A  1E16               	comf	?___awdiv+1,f,c
  2737  00143C  4A15               	infsnz	?___awdiv,f,c
  2738  00143E  2A16               	incf	?___awdiv+1,f,c
  2739  001440  5015               	movf	?___awdiv,w,c
  2740  001442  2433               	addwf	??_exibir_lcd,w,c
  2741  001444  0100               	movlb	0	; () banked
  2742  001446  6F82               	movwf	exibir_lcd@a& (0+255),b
  2743  001448  5016               	movf	?___awdiv+1,w,c
  2744  00144A  2034               	addwfc	??_exibir_lcd+1,w,c
  2745  00144C  0100               	movlb	0	; () banked
  2746  00144E  6F83               	movwf	(exibir_lcd@a+1)& (0+255),b
  2747                           
  2748                           ;display_LCD.c: 62: b=Despertador->hora%10;
  2749  001450  0100               	movlb	0	; () banked
  2750  001452  EE20 F004          	lfsr	2,4
  2751  001456  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2752  001458  26D9               	addwf	fsr2l,f,c
  2753  00145A  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2754  00145C  22DA               	addwfc	fsr2h,f,c
  2755  00145E  CFDE F00F          	movff	postinc2,___awmod@dividend
  2756  001462  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2757  001466  0E00               	movlw	0
  2758  001468  6E12               	movwf	___awmod@divisor+1,c
  2759  00146A  0E0A               	movlw	10
  2760  00146C  6E11               	movwf	___awmod@divisor,c
  2761  00146E  EC2A  F010         	call	___awmod	;wreg free
  2762  001472  C00F  F084         	movff	?___awmod,exibir_lcd@b
  2763  001476  C010  F085         	movff	?___awmod+1,exibir_lcd@b+1
  2764                           
  2765                           ;display_LCD.c: 63: c=((Despertador->minuto)/10)-(((Despertador->minuto)%10)/10);
  2766  00147A  C062  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  2767  00147E  C063  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  2768  001482  CFDE F015          	movff	postinc2,___awdiv@dividend
  2769  001486  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2770  00148A  0E00               	movlw	0
  2771  00148C  6E18               	movwf	___awdiv@divisor+1,c
  2772  00148E  0E0A               	movlw	10
  2773  001490  6E17               	movwf	___awdiv@divisor,c
  2774  001492  ECE8  F00F         	call	___awdiv	;wreg free
  2775  001496  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2776  00149A  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2777  00149E  0E00               	movlw	0
  2778  0014A0  6E12               	movwf	___awmod@divisor+1,c
  2779  0014A2  0E0A               	movlw	10
  2780  0014A4  6E11               	movwf	___awmod@divisor,c
  2781  0014A6  C062  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  2782  0014AA  C063  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  2783  0014AE  CFDE F00F          	movff	postinc2,___awmod@dividend
  2784  0014B2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2785  0014B6  EC2A  F010         	call	___awmod	;wreg free
  2786  0014BA  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2787  0014BE  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2788  0014C2  0E00               	movlw	0
  2789  0014C4  6E18               	movwf	___awdiv@divisor+1,c
  2790  0014C6  0E0A               	movlw	10
  2791  0014C8  6E17               	movwf	___awdiv@divisor,c
  2792  0014CA  ECE8  F00F         	call	___awdiv	;wreg free
  2793  0014CE  1E15               	comf	?___awdiv,f,c
  2794  0014D0  1E16               	comf	?___awdiv+1,f,c
  2795  0014D2  4A15               	infsnz	?___awdiv,f,c
  2796  0014D4  2A16               	incf	?___awdiv+1,f,c
  2797  0014D6  5015               	movf	?___awdiv,w,c
  2798  0014D8  2433               	addwf	??_exibir_lcd,w,c
  2799  0014DA  0100               	movlb	0	; () banked
  2800  0014DC  6F86               	movwf	exibir_lcd@c& (0+255),b
  2801  0014DE  5016               	movf	?___awdiv+1,w,c
  2802  0014E0  2034               	addwfc	??_exibir_lcd+1,w,c
  2803  0014E2  0100               	movlb	0	; () banked
  2804  0014E4  6F87               	movwf	(exibir_lcd@c+1)& (0+255),b
  2805                           
  2806                           ;display_LCD.c: 64: d=Despertador->minuto%10;
  2807  0014E6  C062  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  2808  0014EA  C063  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  2809  0014EE  CFDE F00F          	movff	postinc2,___awmod@dividend
  2810  0014F2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2811  0014F6  0E00               	movlw	0
  2812  0014F8  6E12               	movwf	___awmod@divisor+1,c
  2813  0014FA  0E0A               	movlw	10
  2814  0014FC  6E11               	movwf	___awmod@divisor,c
  2815  0014FE  EC2A  F010         	call	___awmod	;wreg free
  2816  001502  C00F  F088         	movff	?___awmod,exibir_lcd@d
  2817  001506  C010  F089         	movff	?___awmod+1,exibir_lcd@d+1
  2818                           
  2819                           ;display_LCD.c: 65: e=((Despertador->segundo)/10)-(((Despertador->segundo)%10)/10);
  2820  00150A  0100               	movlb	0	; () banked
  2821  00150C  EE20 F002          	lfsr	2,2
  2822  001510  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2823  001512  26D9               	addwf	fsr2l,f,c
  2824  001514  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2825  001516  22DA               	addwfc	fsr2h,f,c
  2826  001518  CFDE F015          	movff	postinc2,___awdiv@dividend
  2827  00151C  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2828  001520  0E00               	movlw	0
  2829  001522  6E18               	movwf	___awdiv@divisor+1,c
  2830  001524  0E0A               	movlw	10
  2831  001526  6E17               	movwf	___awdiv@divisor,c
  2832  001528  ECE8  F00F         	call	___awdiv	;wreg free
  2833  00152C  C015  F033         	movff	?___awdiv,??_exibir_lcd
  2834  001530  C016  F034         	movff	?___awdiv+1,??_exibir_lcd+1
  2835  001534  0E00               	movlw	0
  2836  001536  6E12               	movwf	___awmod@divisor+1,c
  2837  001538  0E0A               	movlw	10
  2838  00153A  6E11               	movwf	___awmod@divisor,c
  2839  00153C  0100               	movlb	0	; () banked
  2840  00153E  EE20 F002          	lfsr	2,2
  2841  001542  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2842  001544  26D9               	addwf	fsr2l,f,c
  2843  001546  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2844  001548  22DA               	addwfc	fsr2h,f,c
  2845  00154A  CFDE F00F          	movff	postinc2,___awmod@dividend
  2846  00154E  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2847  001552  EC2A  F010         	call	___awmod	;wreg free
  2848  001556  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2849  00155A  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2850  00155E  0E00               	movlw	0
  2851  001560  6E18               	movwf	___awdiv@divisor+1,c
  2852  001562  0E0A               	movlw	10
  2853  001564  6E17               	movwf	___awdiv@divisor,c
  2854  001566  ECE8  F00F         	call	___awdiv	;wreg free
  2855  00156A  1E15               	comf	?___awdiv,f,c
  2856  00156C  1E16               	comf	?___awdiv+1,f,c
  2857  00156E  4A15               	infsnz	?___awdiv,f,c
  2858  001570  2A16               	incf	?___awdiv+1,f,c
  2859  001572  5015               	movf	?___awdiv,w,c
  2860  001574  2433               	addwf	??_exibir_lcd,w,c
  2861  001576  0100               	movlb	0	; () banked
  2862  001578  6F8A               	movwf	exibir_lcd@e& (0+255),b
  2863  00157A  5016               	movf	?___awdiv+1,w,c
  2864  00157C  2034               	addwfc	??_exibir_lcd+1,w,c
  2865  00157E  0100               	movlb	0	; () banked
  2866  001580  6F8B               	movwf	(exibir_lcd@e+1)& (0+255),b
  2867                           
  2868                           ;display_LCD.c: 66: f=Despertador->segundo%10;
  2869  001582  0100               	movlb	0	; () banked
  2870  001584  EE20 F002          	lfsr	2,2
  2871  001588  5162               	movf	exibir_lcd@Despertador& (0+255),w,b
  2872  00158A  26D9               	addwf	fsr2l,f,c
  2873  00158C  5163               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  2874  00158E  22DA               	addwfc	fsr2h,f,c
  2875  001590  CFDE F00F          	movff	postinc2,___awmod@dividend
  2876  001594  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2877  001598  0E00               	movlw	0
  2878  00159A  6E12               	movwf	___awmod@divisor+1,c
  2879  00159C  0E0A               	movlw	10
  2880  00159E  6E11               	movwf	___awmod@divisor,c
  2881  0015A0  EC2A  F010         	call	___awmod	;wreg free
  2882  0015A4  C00F  F08C         	movff	?___awmod,exibir_lcd@f
  2883  0015A8  C010  F08D         	movff	?___awmod+1,exibir_lcd@f+1
  2884                           
  2885                           ;display_LCD.c: 68: sprintf(str, "%d%d:%d%d:%d%d        ", a, b, c, d, e, f);
  2886  0015AC  0E66               	movlw	low exibir_lcd@str
  2887  0015AE  6E1B               	movwf	sprintf@sp,c
  2888  0015B0  0E00               	movlw	high exibir_lcd@str
  2889  0015B2  6E1C               	movwf	sprintf@sp+1,c
  2890  0015B4  0E0B               	movlw	low STR_3
  2891  0015B6  6E1D               	movwf	sprintf@f,c
  2892  0015B8  0E08               	movlw	high STR_3
  2893  0015BA  6E1E               	movwf	sprintf@f+1,c
  2894  0015BC  C082  F01F         	movff	exibir_lcd@a,?_sprintf+4
  2895  0015C0  C083  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  2896  0015C4  C084  F021         	movff	exibir_lcd@b,?_sprintf+6
  2897  0015C8  C085  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  2898  0015CC  C086  F023         	movff	exibir_lcd@c,?_sprintf+8
  2899  0015D0  C087  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  2900  0015D4  C088  F025         	movff	exibir_lcd@d,?_sprintf+10
  2901  0015D8  C089  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  2902  0015DC  C08A  F027         	movff	exibir_lcd@e,?_sprintf+12
  2903  0015E0  C08B  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  2904  0015E4  C08C  F029         	movff	exibir_lcd@f,?_sprintf+14
  2905  0015E8  C08D  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  2906  0015EC  EC6A  F00D         	call	_sprintf	;wreg free
  2907                           
  2908                           ;display_LCD.c: 69: SetDDRamAddr(0x00);
  2909  0015F0  0E00               	movlw	0
  2910  0015F2  ECB9  F010         	call	_SetDDRamAddr
  2911                           
  2912                           ;display_LCD.c: 70: putrsXLCD("DESPERTADOR.  ");
  2913  0015F6  0E4D               	movlw	low STR_4
  2914  0015F8  6E11               	movwf	putrsXLCD@buffer,c
  2915  0015FA  0E08               	movlw	high STR_4
  2916  0015FC  6E12               	movwf	putrsXLCD@buffer+1,c
  2917  0015FE  EC62  F010         	call	_putrsXLCD	;wreg free
  2918                           
  2919                           ;display_LCD.c: 71: SetDDRamAddr(0x40);
  2920  001602  0E40               	movlw	64
  2921  001604  ECB9  F010         	call	_SetDDRamAddr
  2922                           
  2923                           ;display_LCD.c: 72: putrsXLCD(str);
  2924  001608  0E66               	movlw	low exibir_lcd@str
  2925  00160A  6E11               	movwf	putrsXLCD@buffer,c
  2926  00160C  0E00               	movlw	high exibir_lcd@str
  2927  00160E  6E12               	movwf	putrsXLCD@buffer+1,c
  2928  001610  EC62  F010         	call	_putrsXLCD	;wreg free
  2929  001614  0012               	return	
  2930  001616                     __end_of_exibir_lcd:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           intcon	equ	0xFF2
  2937                           postinc0	equ	0xFEE
  2938                           wreg	equ	0xFE8
  2939                           postinc1	equ	0xFE6
  2940                           postdec1	equ	0xFE5
  2941                           fsr1h	equ	0xFE2
  2942                           fsr1l	equ	0xFE1
  2943                           postinc2	equ	0xFDE
  2944                           postdec2	equ	0xFDD
  2945                           plusw2	equ	0xFDB
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8
  2949                           
  2950 ;; *************** function _sprintf *****************
  2951 ;; Defined at:
  2952 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  sp              2   26[COMRAM] PTR unsigned char 
  2955 ;;		 -> exibir_lcd@str(16), 
  2956 ;;  f               2   28[COMRAM] PTR const unsigned char 
  2957 ;;		 -> STR_3(23), STR_2(21), STR_1(22), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  tmpval          4    0        struct .
  2960 ;;  cp              3    0        PTR const unsigned char 
  2961 ;;  val             2   47[COMRAM] unsigned int 
  2962 ;;  ap              2   43[COMRAM] PTR void [1]
  2963 ;;		 -> ?_sprintf(2), 
  2964 ;;  len             2    0        unsigned int 
  2965 ;;  c               1   49[COMRAM] char 
  2966 ;;  prec            1   46[COMRAM] char 
  2967 ;;  flag            1   45[COMRAM] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2   26[COMRAM] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2977 ;;      Params:        16       0       0       0       0       0       0       0       0
  2978 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2980 ;;      Totals:        24       0       0       0       0       0       0       0       0
  2981 ;;Total ram usage:       24 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		___lwdiv
  2986 ;;		___lwmod
  2987 ;; This function is called by:
  2988 ;;		_exibir_lcd
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text10
  2993  001AD4                     __ptext10:
  2994                           	opt stack 0
  2995  001AD4                     _sprintf:
  2996                           	opt stack 27
  2997                           
  2998                           ;doprnt.c: 494: va_list ap;
  2999                           ;doprnt.c: 499: signed char c;
  3000                           ;doprnt.c: 506: signed char prec;
  3001                           ;doprnt.c: 508: unsigned char flag;
  3002                           ;doprnt.c: 523: union {
  3003                           ;doprnt.c: 524: unsigned long vd;
  3004                           ;doprnt.c: 525: double integ;
  3005                           ;doprnt.c: 526: } tmpval;
  3006                           ;doprnt.c: 528: unsigned int val;
  3007                           ;doprnt.c: 529: unsigned len;
  3008                           ;doprnt.c: 530: const char * cp;
  3009                           ;doprnt.c: 533: *ap = __va_start();
  3010                           
  3011                           ;incstack = 0
  3012  001AD4  0E1F               	movlw	low (?_sprintf+4)
  3013  001AD6  6E2C               	movwf	sprintf@ap,c
  3014  001AD8  0E00               	movlw	high (?_sprintf+4)
  3015  001ADA  6E2D               	movwf	sprintf@ap+1,c
  3016                           
  3017                           ;doprnt.c: 536: while(c = *f++) {
  3018  001ADC  D08C               	goto	l2137
  3019  001ADE                     l2085:
  3020                           
  3021                           ;doprnt.c: 538: if(c != '%')
  3022  001ADE  0E25               	movlw	37
  3023  001AE0  1832               	xorwf	sprintf@c,w,c
  3024  001AE2  B4D8               	btfsc	status,2,c
  3025  001AE4  D009               	goto	l2091
  3026                           
  3027                           ;doprnt.c: 540: {
  3028                           ;doprnt.c: 541: ((*sp++ = (c)));
  3029  001AE6  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3030  001AEA  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3031  001AEE  C032  FFDF         	movff	sprintf@c,indf2
  3032  001AF2  4A1B               	infsnz	sprintf@sp,f,c
  3033  001AF4  2A1C               	incf	sprintf@sp+1,f,c
  3034                           
  3035                           ;doprnt.c: 542: continue;
  3036  001AF6  D07F               	goto	l2137
  3037  001AF8                     l2091:
  3038                           
  3039                           ;doprnt.c: 543: }
  3040                           ;doprnt.c: 548: flag = 0;
  3041  001AF8  0E00               	movlw	0
  3042  001AFA  6E2E               	movwf	sprintf@flag,c
  3043                           
  3044                           ;doprnt.c: 822: }
  3045                           
  3046                           ;doprnt.c: 813: continue;
  3047                           
  3048                           ;doprnt.c: 802: default:
  3049                           
  3050                           ;doprnt.c: 698: case 'i':
  3051                           ;doprnt.c: 699: break;
  3052                           
  3053                           ;doprnt.c: 697: case 'd':
  3054                           
  3055                           ;doprnt.c: 638: goto alldone;
  3056                           
  3057                           ;doprnt.c: 637: case 0:
  3058                           
  3059                           ;doprnt.c: 635: switch(c = *f++) {
  3060  001AFC  C01D  FFF6         	movff	sprintf@f,tblptrl
  3061  001B00  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3062  001B04  4A1D               	infsnz	sprintf@f,f,c
  3063  001B06  2A1E               	incf	sprintf@f+1,f,c
  3064  001B08                     	if	0	;tblptru may be non-zero
  3065  001B08                     	endif
  3066  001B08                     	if	0	;tblptru may be non-zero
  3067  001B08                     	endif
  3068  001B08  0008               	tblrd		*
  3069  001B0A  CFF5 F032          	movff	tablat,sprintf@c
  3070  001B0E  5032               	movf	sprintf@c,w,c
  3071                           
  3072                           ; Switch size 1, requested type "space"
  3073                           ; Number of cases is 3, Range of values is 0 to 105
  3074                           ; switch strategies available:
  3075                           ; Name         Instructions Cycles
  3076                           ; simple_byte           10     6 (average)
  3077                           ;	Chosen strategy is simple_byte
  3078  001B10  0A00               	xorlw	0	; case 0
  3079  001B12  B4D8               	btfsc	status,2,c
  3080  001B14  D07C               	goto	l2139
  3081  001B16  0A64               	xorlw	100	; case 100
  3082  001B18  B4D8               	btfsc	status,2,c
  3083  001B1A  D003               	goto	l2097
  3084  001B1C  0A0D               	xorlw	13	; case 105
  3085  001B1E  A4D8               	btfss	status,2,c
  3086  001B20  D06A               	goto	l2137
  3087  001B22                     l2097:
  3088                           
  3089                           ;doprnt.c: 1253: {
  3090                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3091  001B22  C02C  FFD9         	movff	sprintf@ap,fsr2l
  3092  001B26  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
  3093  001B2A  CFDE F030          	movff	postinc2,sprintf@val
  3094  001B2E  CFDD F031          	movff	postdec2,sprintf@val+1
  3095  001B32  0E02               	movlw	2
  3096  001B34  262C               	addwf	sprintf@ap,f,c
  3097  001B36  0E00               	movlw	0
  3098  001B38  222D               	addwfc	sprintf@ap+1,f,c
  3099                           
  3100                           ;doprnt.c: 1261: if((int)val < 0) {
  3101  001B3A  AE31               	btfss	sprintf@val+1,7,c
  3102  001B3C  D006               	goto	l2107
  3103                           
  3104                           ;doprnt.c: 1262: flag |= 0x03;
  3105  001B3E  0E03               	movlw	3
  3106  001B40  122E               	iorwf	sprintf@flag,f,c
  3107                           
  3108                           ;doprnt.c: 1263: val = -val;
  3109  001B42  6C30               	negf	sprintf@val,c
  3110  001B44  1E31               	comf	sprintf@val+1,f,c
  3111  001B46  B0D8               	btfsc	status,0,c
  3112  001B48  2A31               	incf	sprintf@val+1,f,c
  3113  001B4A                     l2107:
  3114                           
  3115                           ;doprnt.c: 1264: }
  3116                           ;doprnt.c: 1266: }
  3117                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3118  001B4A  0E01               	movlw	1
  3119  001B4C  6E32               	movwf	sprintf@c,c
  3120  001B4E                     l2109:
  3121  001B4E  0E05               	movlw	5
  3122  001B50  1832               	xorwf	sprintf@c,w,c
  3123  001B52  B4D8               	btfsc	status,2,c
  3124  001B54  D012               	goto	l2121
  3125                           
  3126                           ;doprnt.c: 1306: if(val < dpowers[c])
  3127  001B56  5032               	movf	sprintf@c,w,c
  3128  001B58  0D02               	mullw	2
  3129  001B5A  0E01               	movlw	low _dpowers
  3130  001B5C  24F3               	addwf	prodl,w,c
  3131  001B5E  6EF6               	movwf	tblptrl,c
  3132  001B60  0E08               	movlw	high _dpowers
  3133  001B62  20F4               	addwfc	prodh,w,c
  3134  001B64  6EF7               	movwf	tblptrh,c
  3135  001B66                     	if	0	;There are less than 3 active tblptr bytes
  3136  001B66                     	endif
  3137  001B66  0009               	tblrd		*+
  3138  001B68  50F5               	movf	tablat,w,c
  3139  001B6A  5C30               	subwf	sprintf@val,w,c
  3140  001B6C  0009               	tblrd		*+
  3141  001B6E  50F5               	movf	tablat,w,c
  3142  001B70  5831               	subwfb	sprintf@val+1,w,c
  3143  001B72  A0D8               	btfss	status,0,c
  3144  001B74  D002               	goto	l2121
  3145                           
  3146                           ;doprnt.c: 1307: break;
  3147  001B76  2A32               	incf	sprintf@c,f,c
  3148  001B78  D7EA               	goto	l2109
  3149  001B7A                     l2121:
  3150                           
  3151                           ;doprnt.c: 1422: {
  3152                           ;doprnt.c: 1438: if(flag & 0x03)
  3153  001B7A  C02E  F02B         	movff	sprintf@flag,??_sprintf
  3154  001B7E  0E03               	movlw	3
  3155  001B80  162B               	andwf	??_sprintf,f,c
  3156  001B82  B4D8               	btfsc	status,2,c
  3157  001B84  D008               	goto	l2127
  3158                           
  3159                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3160  001B86  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3161  001B8A  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3162  001B8E  0E2D               	movlw	45
  3163  001B90  6EDF               	movwf	indf2,c
  3164  001B92  4A1B               	infsnz	sprintf@sp,f,c
  3165  001B94  2A1C               	incf	sprintf@sp+1,f,c
  3166  001B96                     l2127:
  3167                           
  3168                           ;doprnt.c: 1469: }
  3169                           ;doprnt.c: 1472: prec = c;
  3170  001B96  C032  F02F         	movff	sprintf@c,sprintf@prec
  3171                           
  3172                           ;doprnt.c: 1474: while(prec--) {
  3173  001B9A  D029               	goto	l2135
  3174  001B9C                     l2129:
  3175                           
  3176                           ;doprnt.c: 1478: {
  3177                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3178  001B9C  502F               	movf	sprintf@prec,w,c
  3179  001B9E  0D02               	mullw	2
  3180  001BA0  0E01               	movlw	low _dpowers
  3181  001BA2  24F3               	addwf	prodl,w,c
  3182  001BA4  6EF6               	movwf	tblptrl,c
  3183  001BA6  0E08               	movlw	high _dpowers
  3184  001BA8  20F4               	addwfc	prodh,w,c
  3185  001BAA  6EF7               	movwf	tblptrh,c
  3186  001BAC                     	if	0	;There are less than 3 active tblptr bytes
  3187  001BAC                     	endif
  3188  001BAC  0009               	tblrd		*+
  3189  001BAE  CFF5 F011          	movff	tablat,___lwdiv@divisor
  3190  001BB2  000A               	tblrd		*-
  3191  001BB4  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  3192  001BB8  C030  F00F         	movff	sprintf@val,___lwdiv@dividend
  3193  001BBC  C031  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  3194  001BC0  EC90  F010         	call	___lwdiv	;wreg free
  3195  001BC4  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  3196  001BC8  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  3197  001BCC  0E00               	movlw	0
  3198  001BCE  6E19               	movwf	___lwmod@divisor+1,c
  3199  001BD0  0E0A               	movlw	10
  3200  001BD2  6E18               	movwf	___lwmod@divisor,c
  3201  001BD4  ECE2  F010         	call	___lwmod	;wreg free
  3202  001BD8  5016               	movf	?___lwmod,w,c
  3203  001BDA  0F30               	addlw	48
  3204  001BDC  6E32               	movwf	sprintf@c,c
  3205                           
  3206                           ;doprnt.c: 1523: }
  3207                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3208  001BDE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3209  001BE2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3210  001BE6  C032  FFDF         	movff	sprintf@c,indf2
  3211  001BEA  4A1B               	infsnz	sprintf@sp,f,c
  3212  001BEC  2A1C               	incf	sprintf@sp+1,f,c
  3213  001BEE                     l2135:
  3214  001BEE  062F               	decf	sprintf@prec,f,c
  3215  001BF0  282F               	incf	sprintf@prec,w,c
  3216  001BF2  A4D8               	btfss	status,2,c
  3217  001BF4  D7D3               	goto	l2129
  3218  001BF6                     l2137:
  3219  001BF6  C01D  FFF6         	movff	sprintf@f,tblptrl
  3220  001BFA  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3221  001BFE  4A1D               	infsnz	sprintf@f,f,c
  3222  001C00  2A1E               	incf	sprintf@f+1,f,c
  3223  001C02                     	if	0	;tblptru may be non-zero
  3224  001C02                     	endif
  3225  001C02                     	if	0	;tblptru may be non-zero
  3226  001C02                     	endif
  3227  001C02  0008               	tblrd		*
  3228  001C04  CFF5 F032          	movff	tablat,sprintf@c
  3229  001C08  5032               	movf	sprintf@c,w,c
  3230  001C0A  A4D8               	btfss	status,2,c
  3231  001C0C  D768               	goto	l2085
  3232  001C0E                     l2139:
  3233                           
  3234                           ;doprnt.c: 1538: *sp = 0;
  3235  001C0E  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3236  001C12  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3237  001C16  0E00               	movlw	0
  3238  001C18  6EDF               	movwf	indf2,c
  3239  001C1A  0012               	return	
  3240  001C1C                     __end_of_sprintf:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           postinc1	equ	0xFE6
  3252                           postdec1	equ	0xFE5
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           postdec2	equ	0xFDD
  3258                           plusw2	equ	0xFDB
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function ___lwmod *****************
  3264 ;; Defined at:
  3265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  dividend        2   21[COMRAM] unsigned int 
  3268 ;;  divisor         2   23[COMRAM] unsigned int 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  counter         1   25[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2   21[COMRAM] unsigned int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         4       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3283 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        5 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_sprintf
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text11
  3295  0021C4                     __ptext11:
  3296                           	opt stack 0
  3297  0021C4                     ___lwmod:
  3298                           	opt stack 27
  3299                           
  3300                           ;incstack = 0
  3301  0021C4  5018               	movf	___lwmod@divisor,w,c
  3302  0021C6  1019               	iorwf	___lwmod@divisor+1,w,c
  3303  0021C8  B4D8               	btfsc	status,2,c
  3304  0021CA  D018               	goto	l800
  3305  0021CC  0E01               	movlw	1
  3306  0021CE  6E1A               	movwf	___lwmod@counter,c
  3307  0021D0  D004               	goto	l1997
  3308  0021D2                     l1995:
  3309  0021D2  90D8               	bcf	status,0,c
  3310  0021D4  3618               	rlcf	___lwmod@divisor,f,c
  3311  0021D6  3619               	rlcf	___lwmod@divisor+1,f,c
  3312  0021D8  2A1A               	incf	___lwmod@counter,f,c
  3313  0021DA                     l1997:
  3314  0021DA  AE19               	btfss	___lwmod@divisor+1,7,c
  3315  0021DC  D7FA               	goto	l1995
  3316  0021DE                     l1999:
  3317  0021DE  5018               	movf	___lwmod@divisor,w,c
  3318  0021E0  5C16               	subwf	___lwmod@dividend,w,c
  3319  0021E2  5019               	movf	___lwmod@divisor+1,w,c
  3320  0021E4  5817               	subwfb	___lwmod@dividend+1,w,c
  3321  0021E6  A0D8               	btfss	status,0,c
  3322  0021E8  D004               	goto	l2003
  3323  0021EA  5018               	movf	___lwmod@divisor,w,c
  3324  0021EC  5E16               	subwf	___lwmod@dividend,f,c
  3325  0021EE  5019               	movf	___lwmod@divisor+1,w,c
  3326  0021F0  5A17               	subwfb	___lwmod@dividend+1,f,c
  3327  0021F2                     l2003:
  3328  0021F2  90D8               	bcf	status,0,c
  3329  0021F4  3219               	rrcf	___lwmod@divisor+1,f,c
  3330  0021F6  3218               	rrcf	___lwmod@divisor,f,c
  3331  0021F8  2E1A               	decfsz	___lwmod@counter,f,c
  3332  0021FA  D7F1               	goto	l1999
  3333  0021FC                     l800:
  3334  0021FC  C016  F016         	movff	___lwmod@dividend,?___lwmod
  3335  002200  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  3336  002204  0012               	return		;funcret
  3337  002206                     __end_of___lwmod:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postinc1	equ	0xFE6
  3349                           postdec1	equ	0xFE5
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           plusw2	equ	0xFDB
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function ___lwdiv *****************
  3361 ;; Defined at:
  3362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dividend        2   14[COMRAM] unsigned int 
  3365 ;;  divisor         2   16[COMRAM] unsigned int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  quotient        2   18[COMRAM] unsigned int 
  3368 ;;  counter         1   20[COMRAM] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  2   14[COMRAM] unsigned int 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3378 ;;      Params:         4       0       0       0       0       0       0       0       0
  3379 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3381 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3382 ;;Total ram usage:        7 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_sprintf
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text12
  3393  002120                     __ptext12:
  3394                           	opt stack 0
  3395  002120                     ___lwdiv:
  3396                           	opt stack 27
  3397                           
  3398                           ;incstack = 0
  3399  002120  0E00               	movlw	0
  3400  002122  6E14               	movwf	___lwdiv@quotient+1,c
  3401  002124  0E00               	movlw	0
  3402  002126  6E13               	movwf	___lwdiv@quotient,c
  3403  002128  5011               	movf	___lwdiv@divisor,w,c
  3404  00212A  1012               	iorwf	___lwdiv@divisor+1,w,c
  3405  00212C  B4D8               	btfsc	status,2,c
  3406  00212E  D01C               	goto	l790
  3407  002130  0E01               	movlw	1
  3408  002132  6E15               	movwf	___lwdiv@counter,c
  3409  002134  D004               	goto	l1977
  3410  002136                     l1975:
  3411  002136  90D8               	bcf	status,0,c
  3412  002138  3611               	rlcf	___lwdiv@divisor,f,c
  3413  00213A  3612               	rlcf	___lwdiv@divisor+1,f,c
  3414  00213C  2A15               	incf	___lwdiv@counter,f,c
  3415  00213E                     l1977:
  3416  00213E  AE12               	btfss	___lwdiv@divisor+1,7,c
  3417  002140  D7FA               	goto	l1975
  3418  002142                     l1979:
  3419  002142  90D8               	bcf	status,0,c
  3420  002144  3613               	rlcf	___lwdiv@quotient,f,c
  3421  002146  3614               	rlcf	___lwdiv@quotient+1,f,c
  3422  002148  5011               	movf	___lwdiv@divisor,w,c
  3423  00214A  5C0F               	subwf	___lwdiv@dividend,w,c
  3424  00214C  5012               	movf	___lwdiv@divisor+1,w,c
  3425  00214E  5810               	subwfb	___lwdiv@dividend+1,w,c
  3426  002150  A0D8               	btfss	status,0,c
  3427  002152  D005               	goto	l1987
  3428  002154  5011               	movf	___lwdiv@divisor,w,c
  3429  002156  5E0F               	subwf	___lwdiv@dividend,f,c
  3430  002158  5012               	movf	___lwdiv@divisor+1,w,c
  3431  00215A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  3432  00215C  8013               	bsf	___lwdiv@quotient,0,c
  3433  00215E                     l1987:
  3434  00215E  90D8               	bcf	status,0,c
  3435  002160  3212               	rrcf	___lwdiv@divisor+1,f,c
  3436  002162  3211               	rrcf	___lwdiv@divisor,f,c
  3437  002164  2E15               	decfsz	___lwdiv@counter,f,c
  3438  002166  D7ED               	goto	l1979
  3439  002168                     l790:
  3440  002168  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3441  00216C  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3442  002170  0012               	return		;funcret
  3443  002172                     __end_of___lwdiv:
  3444                           	opt stack 0
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           postinc0	equ	0xFEE
  3453                           wreg	equ	0xFE8
  3454                           postinc1	equ	0xFE6
  3455                           postdec1	equ	0xFE5
  3456                           fsr1h	equ	0xFE2
  3457                           fsr1l	equ	0xFE1
  3458                           indf2	equ	0xFDF
  3459                           postinc2	equ	0xFDE
  3460                           postdec2	equ	0xFDD
  3461                           plusw2	equ	0xFDB
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _putrsXLCD *****************
  3467 ;; Defined at:
  3468 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  3471 ;;		 -> STR_4(15), exibir_lcd@str(16), 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3483 ;;      Params:         2       0       0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3486 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    4
  3490 ;; This function calls:
  3491 ;;		_BusyXLCD
  3492 ;;		_WriteDataXLCD
  3493 ;; This function is called by:
  3494 ;;		_exibir_lcd
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text13
  3499  0020C4                     __ptext13:
  3500                           	opt stack 0
  3501  0020C4                     _putrsXLCD:
  3502                           	opt stack 25
  3503                           
  3504                           ;incstack = 0
  3505  0020C4  D019               	goto	l2151
  3506  0020C6                     l2145:
  3507  0020C6  EC5E  F011         	call	_BusyXLCD	;wreg free
  3508  0020CA  0900               	iorlw	0
  3509  0020CC  A4D8               	btfss	status,2,c
  3510  0020CE  D7FB               	goto	l2145
  3511  0020D0  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3512  0020D4  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3513  0020D8  6AF8               	clrf	tblptru,c
  3514  0020DA  0E07               	movlw	(high __ramtop+-1)
  3515  0020DC  64F7               	cpfsgt	tblptrh,c
  3516  0020DE  D003               	bra	u1747
  3517  0020E0  0008               	tblrd		*
  3518  0020E2  50F5               	movf	tablat,w,c
  3519  0020E4  D005               	bra	u1740
  3520  0020E6                     u1747:
  3521  0020E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3522  0020EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3523  0020EE  50E7               	movf	indf1,w,c
  3524  0020F0                     u1740:
  3525  0020F0  EC22  F011         	call	_WriteDataXLCD
  3526  0020F4  4A11               	infsnz	putrsXLCD@buffer,f,c
  3527  0020F6  2A12               	incf	putrsXLCD@buffer+1,f,c
  3528  0020F8                     l2151:
  3529  0020F8  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3530  0020FC  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3531  002100  6AF8               	clrf	tblptru,c
  3532  002102  0E07               	movlw	(high __ramtop+-1)
  3533  002104  64F7               	cpfsgt	tblptrh,c
  3534  002106  D003               	bra	u1757
  3535  002108  0008               	tblrd		*
  3536  00210A  50F5               	movf	tablat,w,c
  3537  00210C  D005               	bra	u1750
  3538  00210E                     u1757:
  3539  00210E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3540  002112  CFF7 FFE2          	movff	tblptrh,fsr1h
  3541  002116  50E7               	movf	indf1,w,c
  3542  002118                     u1750:
  3543  002118  0900               	iorlw	0
  3544  00211A  B4D8               	btfsc	status,2,c
  3545  00211C  0012               	return	
  3546  00211E  D7D3               	goto	l2145
  3547  002120                     __end_of_putrsXLCD:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           postinc0	equ	0xFEE
  3557                           wreg	equ	0xFE8
  3558                           indf1	equ	0xFE7
  3559                           postinc1	equ	0xFE6
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           plusw2	equ	0xFDB
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _WriteDataXLCD *****************
  3572 ;; Defined at:
  3573 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  data            1    wreg     unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  data            1   15[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0
  3588 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3590 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3591 ;;Total ram usage:        1 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    3
  3594 ;; This function calls:
  3595 ;;		_DelayFor18TCY
  3596 ;; This function is called by:
  3597 ;;		_putrsXLCD
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text14
  3602  002244                     __ptext14:
  3603                           	opt stack 0
  3604  002244                     _WriteDataXLCD:
  3605                           	opt stack 25
  3606                           
  3607                           ;incstack = 0
  3608                           ;WriteDataXLCD@data stored from wreg
  3609  002244  6E10               	movwf	WriteDataXLCD@data,c
  3610  002246  0EF0               	movlw	240
  3611  002248  1693               	andwf	3987,f,c	;volatile
  3612  00224A  0EF0               	movlw	240
  3613  00224C  1681               	andwf	3969,f,c	;volatile
  3614  00224E  3810               	swapf	WriteDataXLCD@data,w,c
  3615  002250  0B0F               	andlw	15
  3616  002252  0B0F               	andlw	15
  3617  002254  1281               	iorwf	3969,f,c	;volatile
  3618  002256  8A8A               	bsf	3978,5,c	;volatile
  3619  002258  9C8A               	bcf	3978,6,c	;volatile
  3620  00225A  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3621  00225E  888A               	bsf	3978,4,c	;volatile
  3622  002260  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3623  002264  988A               	bcf	3978,4,c	;volatile
  3624  002266  0EF0               	movlw	240
  3625  002268  1681               	andwf	3969,f,c	;volatile
  3626  00226A  5010               	movf	WriteDataXLCD@data,w,c
  3627  00226C  0B0F               	andlw	15
  3628  00226E  1281               	iorwf	3969,f,c	;volatile
  3629  002270  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3630  002274  888A               	bsf	3978,4,c	;volatile
  3631  002276  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3632  00227A  988A               	bcf	3978,4,c	;volatile
  3633  00227C  0E0F               	movlw	15
  3634  00227E  1293               	iorwf	3987,f,c	;volatile
  3635  002280  0012               	return	
  3636  002282                     __end_of_WriteDataXLCD:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           indf1	equ	0xFE7
  3648                           postinc1	equ	0xFE6
  3649                           postdec1	equ	0xFE5
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           indf2	equ	0xFDF
  3653                           postinc2	equ	0xFDE
  3654                           postdec2	equ	0xFDD
  3655                           plusw2	equ	0xFDB
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _BusyXLCD *****************
  3661 ;; Defined at:
  3662 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      unsigned char 
  3669 ;; Registers used:
  3670 ;;		wreg, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    3
  3683 ;; This function calls:
  3684 ;;		_DelayFor18TCY
  3685 ;; This function is called by:
  3686 ;;		_init_XLCD
  3687 ;;		_OpenXLCD
  3688 ;;		_putrsXLCD
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text15
  3693  0022BC                     __ptext15:
  3694                           	opt stack 0
  3695  0022BC                     _BusyXLCD:
  3696                           	opt stack 25
  3697                           
  3698                           ;incstack = 0
  3699  0022BC  8C8A               	bsf	3978,6,c	;volatile
  3700  0022BE  9A8A               	bcf	3978,5,c	;volatile
  3701  0022C0  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3702  0022C4  888A               	bsf	3978,4,c	;volatile
  3703  0022C6  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3704  0022CA  A681               	btfss	3969,3,c	;volatile
  3705  0022CC  D00A               	goto	l276
  3706  0022CE  988A               	bcf	3978,4,c	;volatile
  3707  0022D0  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3708  0022D4  888A               	bsf	3978,4,c	;volatile
  3709  0022D6  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3710  0022DA  988A               	bcf	3978,4,c	;volatile
  3711  0022DC  9C8A               	bcf	3978,6,c	;volatile
  3712  0022DE  0E01               	movlw	1
  3713  0022E0  0012               	return	
  3714  0022E2                     l276:
  3715  0022E2  988A               	bcf	3978,4,c	;volatile
  3716  0022E4  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3717  0022E8  888A               	bsf	3978,4,c	;volatile
  3718  0022EA  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  3719  0022EE  988A               	bcf	3978,4,c	;volatile
  3720  0022F0  9C8A               	bcf	3978,6,c	;volatile
  3721  0022F2  0E00               	movlw	0
  3722  0022F4  0012               	return	
  3723  0022F6                     __end_of_BusyXLCD:
  3724                           	opt stack 0
  3725                           tblptru	equ	0xFF8
  3726                           tblptrh	equ	0xFF7
  3727                           tblptrl	equ	0xFF6
  3728                           tablat	equ	0xFF5
  3729                           prodh	equ	0xFF4
  3730                           prodl	equ	0xFF3
  3731                           intcon	equ	0xFF2
  3732                           postinc0	equ	0xFEE
  3733                           wreg	equ	0xFE8
  3734                           indf1	equ	0xFE7
  3735                           postinc1	equ	0xFE6
  3736                           postdec1	equ	0xFE5
  3737                           fsr1h	equ	0xFE2
  3738                           fsr1l	equ	0xFE1
  3739                           indf2	equ	0xFDF
  3740                           postinc2	equ	0xFDE
  3741                           postdec2	equ	0xFDD
  3742                           plusw2	equ	0xFDB
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           
  3747 ;; *************** function ___awmod *****************
  3748 ;; Defined at:
  3749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  dividend        2   14[COMRAM] int 
  3752 ;;  divisor         2   16[COMRAM] int 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  sign            1   19[COMRAM] unsigned char 
  3755 ;;  counter         1   18[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2   14[COMRAM] int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3765 ;;      Params:         4       0       0       0       0       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3768 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_exibir_lcd
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text16
  3780  002054                     __ptext16:
  3781                           	opt stack 0
  3782  002054                     ___awmod:
  3783                           	opt stack 28
  3784                           
  3785                           ;incstack = 0
  3786  002054  0E00               	movlw	0
  3787  002056  6E14               	movwf	___awmod@sign,c
  3788  002058  AE10               	btfss	___awmod@dividend+1,7,c
  3789  00205A  D006               	goto	l2205
  3790  00205C  6C0F               	negf	___awmod@dividend,c
  3791  00205E  1E10               	comf	___awmod@dividend+1,f,c
  3792  002060  B0D8               	btfsc	status,0,c
  3793  002062  2A10               	incf	___awmod@dividend+1,f,c
  3794  002064  0E01               	movlw	1
  3795  002066  6E14               	movwf	___awmod@sign,c
  3796  002068                     l2205:
  3797  002068  AE12               	btfss	___awmod@divisor+1,7,c
  3798  00206A  D004               	goto	l2209
  3799  00206C  6C11               	negf	___awmod@divisor,c
  3800  00206E  1E12               	comf	___awmod@divisor+1,f,c
  3801  002070  B0D8               	btfsc	status,0,c
  3802  002072  2A12               	incf	___awmod@divisor+1,f,c
  3803  002074                     l2209:
  3804  002074  5011               	movf	___awmod@divisor,w,c
  3805  002076  1012               	iorwf	___awmod@divisor+1,w,c
  3806  002078  B4D8               	btfsc	status,2,c
  3807  00207A  D018               	goto	l2225
  3808  00207C  0E01               	movlw	1
  3809  00207E  6E13               	movwf	___awmod@counter,c
  3810  002080  D004               	goto	l2215
  3811  002082                     l2213:
  3812  002082  90D8               	bcf	status,0,c
  3813  002084  3611               	rlcf	___awmod@divisor,f,c
  3814  002086  3612               	rlcf	___awmod@divisor+1,f,c
  3815  002088  2A13               	incf	___awmod@counter,f,c
  3816  00208A                     l2215:
  3817  00208A  AE12               	btfss	___awmod@divisor+1,7,c
  3818  00208C  D7FA               	goto	l2213
  3819  00208E                     l2217:
  3820  00208E  5011               	movf	___awmod@divisor,w,c
  3821  002090  5C0F               	subwf	___awmod@dividend,w,c
  3822  002092  5012               	movf	___awmod@divisor+1,w,c
  3823  002094  5810               	subwfb	___awmod@dividend+1,w,c
  3824  002096  A0D8               	btfss	status,0,c
  3825  002098  D004               	goto	l2221
  3826  00209A  5011               	movf	___awmod@divisor,w,c
  3827  00209C  5E0F               	subwf	___awmod@dividend,f,c
  3828  00209E  5012               	movf	___awmod@divisor+1,w,c
  3829  0020A0  5A10               	subwfb	___awmod@dividend+1,f,c
  3830  0020A2                     l2221:
  3831  0020A2  90D8               	bcf	status,0,c
  3832  0020A4  3212               	rrcf	___awmod@divisor+1,f,c
  3833  0020A6  3211               	rrcf	___awmod@divisor,f,c
  3834  0020A8  2E13               	decfsz	___awmod@counter,f,c
  3835  0020AA  D7F1               	goto	l2217
  3836  0020AC                     l2225:
  3837  0020AC  5014               	movf	___awmod@sign,w,c
  3838  0020AE  B4D8               	btfsc	status,2,c
  3839  0020B0  D004               	goto	l2229
  3840  0020B2  6C0F               	negf	___awmod@dividend,c
  3841  0020B4  1E10               	comf	___awmod@dividend+1,f,c
  3842  0020B6  B0D8               	btfsc	status,0,c
  3843  0020B8  2A10               	incf	___awmod@dividend+1,f,c
  3844  0020BA                     l2229:
  3845  0020BA  C00F  F00F         	movff	___awmod@dividend,?___awmod
  3846  0020BE  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  3847  0020C2  0012               	return	
  3848  0020C4                     __end_of___awmod:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           indf1	equ	0xFE7
  3860                           postinc1	equ	0xFE6
  3861                           postdec1	equ	0xFE5
  3862                           fsr1h	equ	0xFE2
  3863                           fsr1l	equ	0xFE1
  3864                           indf2	equ	0xFDF
  3865                           postinc2	equ	0xFDE
  3866                           postdec2	equ	0xFDD
  3867                           plusw2	equ	0xFDB
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function ___awdiv *****************
  3873 ;; Defined at:
  3874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  dividend        2   20[COMRAM] int 
  3877 ;;  divisor         2   22[COMRAM] int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  quotient        2   26[COMRAM] int 
  3880 ;;  sign            1   25[COMRAM] unsigned char 
  3881 ;;  counter         1   24[COMRAM] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  2   20[COMRAM] int 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         4       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        8 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_exibir_lcd
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text17
  3906  001FD0                     __ptext17:
  3907                           	opt stack 0
  3908  001FD0                     ___awdiv:
  3909                           	opt stack 28
  3910                           
  3911                           ;incstack = 0
  3912  001FD0  0E00               	movlw	0
  3913  001FD2  6E1A               	movwf	___awdiv@sign,c
  3914  001FD4  AE18               	btfss	___awdiv@divisor+1,7,c
  3915  001FD6  D006               	goto	l2161
  3916  001FD8  6C17               	negf	___awdiv@divisor,c
  3917  001FDA  1E18               	comf	___awdiv@divisor+1,f,c
  3918  001FDC  B0D8               	btfsc	status,0,c
  3919  001FDE  2A18               	incf	___awdiv@divisor+1,f,c
  3920  001FE0  0E01               	movlw	1
  3921  001FE2  6E1A               	movwf	___awdiv@sign,c
  3922  001FE4                     l2161:
  3923  001FE4  AE16               	btfss	___awdiv@dividend+1,7,c
  3924  001FE6  D006               	goto	l2167
  3925  001FE8  6C15               	negf	___awdiv@dividend,c
  3926  001FEA  1E16               	comf	___awdiv@dividend+1,f,c
  3927  001FEC  B0D8               	btfsc	status,0,c
  3928  001FEE  2A16               	incf	___awdiv@dividend+1,f,c
  3929  001FF0  0E01               	movlw	1
  3930  001FF2  1A1A               	xorwf	___awdiv@sign,f,c
  3931  001FF4                     l2167:
  3932  001FF4  0E00               	movlw	0
  3933  001FF6  6E1C               	movwf	___awdiv@quotient+1,c
  3934  001FF8  0E00               	movlw	0
  3935  001FFA  6E1B               	movwf	___awdiv@quotient,c
  3936  001FFC  5017               	movf	___awdiv@divisor,w,c
  3937  001FFE  1018               	iorwf	___awdiv@divisor+1,w,c
  3938  002000  B4D8               	btfsc	status,2,c
  3939  002002  D01C               	goto	l2189
  3940  002004  0E01               	movlw	1
  3941  002006  6E19               	movwf	___awdiv@counter,c
  3942  002008  D004               	goto	l2175
  3943  00200A                     l2173:
  3944  00200A  90D8               	bcf	status,0,c
  3945  00200C  3617               	rlcf	___awdiv@divisor,f,c
  3946  00200E  3618               	rlcf	___awdiv@divisor+1,f,c
  3947  002010  2A19               	incf	___awdiv@counter,f,c
  3948  002012                     l2175:
  3949  002012  AE18               	btfss	___awdiv@divisor+1,7,c
  3950  002014  D7FA               	goto	l2173
  3951  002016                     l2177:
  3952  002016  90D8               	bcf	status,0,c
  3953  002018  361B               	rlcf	___awdiv@quotient,f,c
  3954  00201A  361C               	rlcf	___awdiv@quotient+1,f,c
  3955  00201C  5017               	movf	___awdiv@divisor,w,c
  3956  00201E  5C15               	subwf	___awdiv@dividend,w,c
  3957  002020  5018               	movf	___awdiv@divisor+1,w,c
  3958  002022  5816               	subwfb	___awdiv@dividend+1,w,c
  3959  002024  A0D8               	btfss	status,0,c
  3960  002026  D005               	goto	l2185
  3961  002028  5017               	movf	___awdiv@divisor,w,c
  3962  00202A  5E15               	subwf	___awdiv@dividend,f,c
  3963  00202C  5018               	movf	___awdiv@divisor+1,w,c
  3964  00202E  5A16               	subwfb	___awdiv@dividend+1,f,c
  3965  002030  801B               	bsf	___awdiv@quotient,0,c
  3966  002032                     l2185:
  3967  002032  90D8               	bcf	status,0,c
  3968  002034  3218               	rrcf	___awdiv@divisor+1,f,c
  3969  002036  3217               	rrcf	___awdiv@divisor,f,c
  3970  002038  2E19               	decfsz	___awdiv@counter,f,c
  3971  00203A  D7ED               	goto	l2177
  3972  00203C                     l2189:
  3973  00203C  501A               	movf	___awdiv@sign,w,c
  3974  00203E  B4D8               	btfsc	status,2,c
  3975  002040  D004               	goto	l2193
  3976  002042  6C1B               	negf	___awdiv@quotient,c
  3977  002044  1E1C               	comf	___awdiv@quotient+1,f,c
  3978  002046  B0D8               	btfsc	status,0,c
  3979  002048  2A1C               	incf	___awdiv@quotient+1,f,c
  3980  00204A                     l2193:
  3981  00204A  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  3982  00204E  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  3983  002052  0012               	return	
  3984  002054                     __end_of___awdiv:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           postinc0	equ	0xFEE
  3994                           wreg	equ	0xFE8
  3995                           indf1	equ	0xFE7
  3996                           postinc1	equ	0xFE6
  3997                           postdec1	equ	0xFE5
  3998                           fsr1h	equ	0xFE2
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           plusw2	equ	0xFDB
  4004                           fsr2h	equ	0xFDA
  4005                           fsr2l	equ	0xFD9
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function _SetDDRamAddr *****************
  4009 ;; Defined at:
  4010 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  DDaddr          1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  DDaddr          1   18[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4027 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:        4 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    3
  4031 ;; This function calls:
  4032 ;;		_DelayFor18TCY
  4033 ;; This function is called by:
  4034 ;;		_exibir_lcd
  4035 ;;		_pisca_cursor
  4036 ;;		_OpenXLCD
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text18
  4041  002172                     __ptext18:
  4042                           	opt stack 0
  4043  002172                     _SetDDRamAddr:
  4044                           	opt stack 26
  4045                           
  4046                           ;incstack = 0
  4047                           ;SetDDRamAddr@DDaddr stored from wreg
  4048  002172  6E13               	movwf	SetDDRamAddr@DDaddr,c
  4049  002174  0EF0               	movlw	240
  4050  002176  1693               	andwf	3987,f,c	;volatile
  4051  002178  0EF0               	movlw	240
  4052  00217A  1681               	andwf	3969,f,c	;volatile
  4053  00217C  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4054  00217E  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  4055  002180  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4056  002182  8E10               	bsf	??_SetDDRamAddr,7,c
  4057  002184  0E04               	movlw	4
  4058  002186  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4059  002188                     u1455:
  4060  002188  3411               	rlcf	??_SetDDRamAddr+1,w,c
  4061  00218A  3211               	rrcf	??_SetDDRamAddr+1,f,c
  4062  00218C  3210               	rrcf	??_SetDDRamAddr,f,c
  4063  00218E  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4064  002190  D7FB               	goto	u1455
  4065  002192  5010               	movf	??_SetDDRamAddr,w,c
  4066  002194  0B0F               	andlw	15
  4067  002196  1281               	iorwf	3969,f,c	;volatile
  4068  002198  9C8A               	bcf	3978,6,c	;volatile
  4069  00219A  9A8A               	bcf	3978,5,c	;volatile
  4070  00219C  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  4071  0021A0  888A               	bsf	3978,4,c	;volatile
  4072  0021A2  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  4073  0021A6  988A               	bcf	3978,4,c	;volatile
  4074  0021A8  0EF0               	movlw	240
  4075  0021AA  1681               	andwf	3969,f,c	;volatile
  4076  0021AC  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4077  0021AE  0B0F               	andlw	15
  4078  0021B0  1281               	iorwf	3969,f,c	;volatile
  4079  0021B2  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  4080  0021B6  888A               	bsf	3978,4,c	;volatile
  4081  0021B8  ECB6  F011         	call	_DelayFor18TCY	;wreg free
  4082  0021BC  988A               	bcf	3978,4,c	;volatile
  4083  0021BE  0E0F               	movlw	15
  4084  0021C0  1293               	iorwf	3987,f,c	;volatile
  4085  0021C2  0012               	return	
  4086  0021C4                     __end_of_SetDDRamAddr:
  4087                           	opt stack 0
  4088                           tblptru	equ	0xFF8
  4089                           tblptrh	equ	0xFF7
  4090                           tblptrl	equ	0xFF6
  4091                           tablat	equ	0xFF5
  4092                           prodh	equ	0xFF4
  4093                           prodl	equ	0xFF3
  4094                           intcon	equ	0xFF2
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           indf1	equ	0xFE7
  4098                           postinc1	equ	0xFE6
  4099                           postdec1	equ	0xFE5
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           indf2	equ	0xFDF
  4103                           postinc2	equ	0xFDE
  4104                           postdec2	equ	0xFDD
  4105                           plusw2	equ	0xFDB
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           
  4110 ;; *************** function _DelayFor18TCY *****************
  4111 ;; Defined at:
  4112 ;;		line 7 in file "display_LCD.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    2
  4133 ;; This function calls:
  4134 ;;		_Delay10TCYx
  4135 ;; This function is called by:
  4136 ;;		_BusyXLCD
  4137 ;;		_SetDDRamAddr
  4138 ;;		_WriteCmdXLCD
  4139 ;;		_WriteDataXLCD
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text19
  4144  00236C                     __ptext19:
  4145                           	opt stack 0
  4146  00236C                     _DelayFor18TCY:
  4147                           	opt stack 26
  4148                           
  4149                           ;display_LCD.c: 8: Delay10TCYx(120);
  4150                           
  4151                           ;incstack = 0
  4152  00236C  0E78               	movlw	120
  4153  00236E  ECAA  F011         	call	_Delay10TCYx
  4154  002372  0012               	return		;funcret
  4155  002374                     __end_of_DelayFor18TCY:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon	equ	0xFF2
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           indf1	equ	0xFE7
  4167                           postinc1	equ	0xFE6
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           indf2	equ	0xFDF
  4172                           postinc2	equ	0xFDE
  4173                           postdec2	equ	0xFDD
  4174                           plusw2	equ	0xFDB
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _Delay10TCYx *****************
  4180 ;; Defined at:
  4181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  unit            1    wreg     unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  unit            1   14[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4198 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:        1 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_DelayFor18TCY
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text20
  4210  002354                     __ptext20:
  4211                           	opt stack 0
  4212  002354                     _Delay10TCYx:
  4213                           	opt stack 26
  4214                           
  4215                           ;incstack = 0
  4216                           ;Delay10TCYx@unit stored from wreg
  4217  002354  6E0F               	movwf	Delay10TCYx@unit,c
  4218  002356  0E03               	movlw	3
  4219  002358                     u2987:
  4220  002358  2EE8               	decfsz	wreg,f,c
  4221  00235A  D7FE               	bra	u2987
  4222  00235C  F000               	nop	
  4223  00235E  2E0F               	decfsz	Delay10TCYx@unit,f,c
  4224  002360  D7FA               	goto	l1855
  4225  002362  0012               	return	
  4226  002364                     __end_of_Delay10TCYx:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postinc1	equ	0xFE6
  4239                           postdec1	equ	0xFE5
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           indf2	equ	0xFDF
  4243                           postinc2	equ	0xFDE
  4244                           postdec2	equ	0xFDD
  4245                           plusw2	equ	0xFDB
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _checa_botao *****************
  4251 ;; Defined at:
  4252 ;;		line 76 in file "display_LCD.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  Relogio         2   18[COMRAM] PTR struct .
  4255 ;;		 -> Relogio(6), 
  4256 ;;  Despertador     2   20[COMRAM] PTR struct .
  4257 ;;		 -> Despertador(6), 
  4258 ;;  Calendario      2   22[COMRAM] PTR struct .
  4259 ;;		 -> Calendario(6), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4271 ;;      Params:         6       0       0       0       0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4273 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4274 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4275 ;;Total ram usage:       10 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    2
  4278 ;; This function calls:
  4279 ;;		_controla_despertador
  4280 ;; This function is called by:
  4281 ;;		_main
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text21
  4286  00085E                     __ptext21:
  4287                           	opt stack 0
  4288  00085E                     _checa_botao:
  4289                           	opt stack 28
  4290                           
  4291                           ;display_LCD.c: 79: if(PORTDbits.RD0==1){
  4292                           
  4293                           ;incstack = 0
  4294  00085E  A083               	btfss	3971,0,c	;volatile
  4295  000860  D013               	goto	l2247
  4296                           
  4297                           ;display_LCD.c: 80: _delay((unsigned long)((180)*(20000000/4000.0)));
  4298  000862  0E05               	movlw	5
  4299  000864  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4300  000866  0E91               	movlw	145
  4301  000868  6E19               	movwf	??_checa_botao& (0+255),c
  4302  00086A  0ED0               	movlw	208
  4303  00086C                     u2997:
  4304  00086C  2EE8               	decfsz	wreg,f,c
  4305  00086E  D7FE               	bra	u2997
  4306  000870  2E19               	decfsz	??_checa_botao& (0+255),f,c
  4307  000872  D7FC               	bra	u2997
  4308  000874  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  4309  000876  D7FA               	bra	u2997
  4310                           
  4311                           ;display_LCD.c: 81: tela_exibida++;
  4312  000878  4A3B               	infsnz	_tela_exibida,f,c
  4313  00087A  2A3C               	incf	_tela_exibida+1,f,c
  4314                           
  4315                           ;display_LCD.c: 82: cursor=0;
  4316  00087C  0E00               	movlw	0
  4317  00087E  6E38               	movwf	_cursor+1,c
  4318  000880  0E00               	movlw	0
  4319  000882  6E37               	movwf	_cursor,c
  4320  000884                     l158:
  4321  000884  B083               	btfsc	3971,0,c	;volatile
  4322  000886  D7FE               	goto	l158
  4323  000888                     l2247:
  4324                           
  4325                           ;display_LCD.c: 84: }
  4326                           ;display_LCD.c: 85: if(tela_exibida>1) tela_exibida=0;
  4327  000888  BE3C               	btfsc	_tela_exibida+1,7,c
  4328  00088A  D00A               	goto	l2251
  4329  00088C  503C               	movf	_tela_exibida+1,w,c
  4330  00088E  E104               	bnz	u1920
  4331  000890  0E02               	movlw	2
  4332  000892  5C3B               	subwf	_tela_exibida,w,c
  4333  000894  A0D8               	btfss	status,0,c
  4334  000896  D004               	goto	l2251
  4335  000898                     u1920:
  4336  000898  0E00               	movlw	0
  4337  00089A  6E3C               	movwf	_tela_exibida+1,c
  4338  00089C  0E00               	movlw	0
  4339  00089E  6E3B               	movwf	_tela_exibida,c
  4340  0008A0                     l2251:
  4341                           
  4342                           ;display_LCD.c: 88: if(PORTDbits.RD1==1){
  4343  0008A0  A283               	btfss	3971,1,c	;volatile
  4344  0008A2  D188               	goto	l162
  4345                           
  4346                           ;display_LCD.c: 89: _delay((unsigned long)((180)*(20000000/4000.0)));
  4347  0008A4  0E05               	movlw	5
  4348  0008A6  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4349  0008A8  0E91               	movlw	145
  4350  0008AA  6E19               	movwf	??_checa_botao& (0+255),c
  4351  0008AC  0ED0               	movlw	208
  4352  0008AE                     u3007:
  4353  0008AE  2EE8               	decfsz	wreg,f,c
  4354  0008B0  D7FE               	bra	u3007
  4355  0008B2  2E19               	decfsz	??_checa_botao& (0+255),f,c
  4356  0008B4  D7FC               	bra	u3007
  4357  0008B6  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  4358  0008B8  D7FA               	bra	u3007
  4359                           
  4360                           ;display_LCD.c: 91: if(tela_exibida==0){
  4361  0008BA  503B               	movf	_tela_exibida,w,c
  4362  0008BC  103C               	iorwf	_tela_exibida+1,w,c
  4363  0008BE  A4D8               	btfss	status,2,c
  4364  0008C0  D0F4               	goto	l2305
  4365                           
  4366                           ;display_LCD.c: 92: if(cursor==0) Relogio->hora=Relogio->hora+10;
  4367  0008C2  5037               	movf	_cursor,w,c
  4368  0008C4  1038               	iorwf	_cursor+1,w,c
  4369  0008C6  A4D8               	btfss	status,2,c
  4370  0008C8  D018               	goto	l2261
  4371  0008CA  EE20 F004          	lfsr	2,4
  4372  0008CE  5013               	movf	checa_botao@Relogio,w,c
  4373  0008D0  26D9               	addwf	fsr2l,f,c
  4374  0008D2  5014               	movf	checa_botao@Relogio+1,w,c
  4375  0008D4  22DA               	addwfc	fsr2h,f,c
  4376  0008D6  CFDE F019          	movff	postinc2,??_checa_botao
  4377  0008DA  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4378  0008DE  0E0A               	movlw	10
  4379  0008E0  2619               	addwf	??_checa_botao,f,c
  4380  0008E2  0E00               	movlw	0
  4381  0008E4  221A               	addwfc	??_checa_botao+1,f,c
  4382  0008E6  EE20 F004          	lfsr	2,4
  4383  0008EA  5013               	movf	checa_botao@Relogio,w,c
  4384  0008EC  26D9               	addwf	fsr2l,f,c
  4385  0008EE  5014               	movf	checa_botao@Relogio+1,w,c
  4386  0008F0  22DA               	addwfc	fsr2h,f,c
  4387  0008F2  C019  FFDE         	movff	??_checa_botao,postinc2
  4388  0008F6  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4389  0008FA                     l2261:
  4390                           
  4391                           ;display_LCD.c: 93: if(cursor==1) Relogio->hora++;
  4392  0008FA  0437               	decf	_cursor,w,c
  4393  0008FC  1038               	iorwf	_cursor+1,w,c
  4394  0008FE  A4D8               	btfss	status,2,c
  4395  000900  D009               	goto	l2265
  4396  000902  EE20 F004          	lfsr	2,4
  4397  000906  5013               	movf	checa_botao@Relogio,w,c
  4398  000908  26D9               	addwf	fsr2l,f,c
  4399  00090A  5014               	movf	checa_botao@Relogio+1,w,c
  4400  00090C  22DA               	addwfc	fsr2h,f,c
  4401  00090E  2ADE               	incf	postinc2,f,c
  4402  000910  0E00               	movlw	0
  4403  000912  22DD               	addwfc	postdec2,f,c
  4404  000914                     l2265:
  4405                           
  4406                           ;display_LCD.c: 94: if(cursor==2) Relogio->minuto=Relogio->minuto+10;
  4407  000914  0E02               	movlw	2
  4408  000916  1837               	xorwf	_cursor,w,c
  4409  000918  1038               	iorwf	_cursor+1,w,c
  4410  00091A  A4D8               	btfss	status,2,c
  4411  00091C  D014               	goto	l2269
  4412  00091E  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4413  000922  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4414  000926  CFDE F019          	movff	postinc2,??_checa_botao
  4415  00092A  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4416  00092E  0E0A               	movlw	10
  4417  000930  2619               	addwf	??_checa_botao,f,c
  4418  000932  0E00               	movlw	0
  4419  000934  221A               	addwfc	??_checa_botao+1,f,c
  4420  000936  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4421  00093A  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4422  00093E  C019  FFDE         	movff	??_checa_botao,postinc2
  4423  000942  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4424  000946                     l2269:
  4425                           
  4426                           ;display_LCD.c: 95: if(cursor==3) Relogio->minuto++;
  4427  000946  0E03               	movlw	3
  4428  000948  1837               	xorwf	_cursor,w,c
  4429  00094A  1038               	iorwf	_cursor+1,w,c
  4430  00094C  A4D8               	btfss	status,2,c
  4431  00094E  D007               	goto	l2273
  4432  000950  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4433  000954  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4434  000958  2ADE               	incf	postinc2,f,c
  4435  00095A  0E00               	movlw	0
  4436  00095C  22DD               	addwfc	postdec2,f,c
  4437  00095E                     l2273:
  4438                           
  4439                           ;display_LCD.c: 96: if(cursor==4) Relogio->segundo=Relogio->segundo+10;
  4440  00095E  0E04               	movlw	4
  4441  000960  1837               	xorwf	_cursor,w,c
  4442  000962  1038               	iorwf	_cursor+1,w,c
  4443  000964  A4D8               	btfss	status,2,c
  4444  000966  D018               	goto	l2277
  4445  000968  EE20 F002          	lfsr	2,2
  4446  00096C  5013               	movf	checa_botao@Relogio,w,c
  4447  00096E  26D9               	addwf	fsr2l,f,c
  4448  000970  5014               	movf	checa_botao@Relogio+1,w,c
  4449  000972  22DA               	addwfc	fsr2h,f,c
  4450  000974  CFDE F019          	movff	postinc2,??_checa_botao
  4451  000978  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4452  00097C  0E0A               	movlw	10
  4453  00097E  2619               	addwf	??_checa_botao,f,c
  4454  000980  0E00               	movlw	0
  4455  000982  221A               	addwfc	??_checa_botao+1,f,c
  4456  000984  EE20 F002          	lfsr	2,2
  4457  000988  5013               	movf	checa_botao@Relogio,w,c
  4458  00098A  26D9               	addwf	fsr2l,f,c
  4459  00098C  5014               	movf	checa_botao@Relogio+1,w,c
  4460  00098E  22DA               	addwfc	fsr2h,f,c
  4461  000990  C019  FFDE         	movff	??_checa_botao,postinc2
  4462  000994  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4463  000998                     l2277:
  4464                           
  4465                           ;display_LCD.c: 97: if(cursor==5) Relogio->segundo++;
  4466  000998  0E05               	movlw	5
  4467  00099A  1837               	xorwf	_cursor,w,c
  4468  00099C  1038               	iorwf	_cursor+1,w,c
  4469  00099E  A4D8               	btfss	status,2,c
  4470  0009A0  D009               	goto	l2281
  4471  0009A2  EE20 F002          	lfsr	2,2
  4472  0009A6  5013               	movf	checa_botao@Relogio,w,c
  4473  0009A8  26D9               	addwf	fsr2l,f,c
  4474  0009AA  5014               	movf	checa_botao@Relogio+1,w,c
  4475  0009AC  22DA               	addwfc	fsr2h,f,c
  4476  0009AE  2ADE               	incf	postinc2,f,c
  4477  0009B0  0E00               	movlw	0
  4478  0009B2  22DD               	addwfc	postdec2,f,c
  4479  0009B4                     l2281:
  4480                           
  4481                           ;display_LCD.c: 98: if(cursor==6) Calendario->dia=Calendario->dia+10;
  4482  0009B4  0E06               	movlw	6
  4483  0009B6  1837               	xorwf	_cursor,w,c
  4484  0009B8  1038               	iorwf	_cursor+1,w,c
  4485  0009BA  A4D8               	btfss	status,2,c
  4486  0009BC  D014               	goto	l2285
  4487  0009BE  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4488  0009C2  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4489  0009C6  CFDE F019          	movff	postinc2,??_checa_botao
  4490  0009CA  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4491  0009CE  0E0A               	movlw	10
  4492  0009D0  2619               	addwf	??_checa_botao,f,c
  4493  0009D2  0E00               	movlw	0
  4494  0009D4  221A               	addwfc	??_checa_botao+1,f,c
  4495  0009D6  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4496  0009DA  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4497  0009DE  C019  FFDE         	movff	??_checa_botao,postinc2
  4498  0009E2  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4499  0009E6                     l2285:
  4500                           
  4501                           ;display_LCD.c: 99: if(cursor==7) Calendario->dia++;
  4502  0009E6  0E07               	movlw	7
  4503  0009E8  1837               	xorwf	_cursor,w,c
  4504  0009EA  1038               	iorwf	_cursor+1,w,c
  4505  0009EC  A4D8               	btfss	status,2,c
  4506  0009EE  D007               	goto	l2289
  4507  0009F0  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4508  0009F4  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4509  0009F8  2ADE               	incf	postinc2,f,c
  4510  0009FA  0E00               	movlw	0
  4511  0009FC  22DD               	addwfc	postdec2,f,c
  4512  0009FE                     l2289:
  4513                           
  4514                           ;display_LCD.c: 100: if(cursor==8) Calendario->mes=Calendario->mes+10;
  4515  0009FE  0E08               	movlw	8
  4516  000A00  1837               	xorwf	_cursor,w,c
  4517  000A02  1038               	iorwf	_cursor+1,w,c
  4518  000A04  A4D8               	btfss	status,2,c
  4519  000A06  D018               	goto	l2293
  4520  000A08  EE20 F002          	lfsr	2,2
  4521  000A0C  5017               	movf	checa_botao@Calendario,w,c
  4522  000A0E  26D9               	addwf	fsr2l,f,c
  4523  000A10  5018               	movf	checa_botao@Calendario+1,w,c
  4524  000A12  22DA               	addwfc	fsr2h,f,c
  4525  000A14  CFDE F019          	movff	postinc2,??_checa_botao
  4526  000A18  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4527  000A1C  0E0A               	movlw	10
  4528  000A1E  2619               	addwf	??_checa_botao,f,c
  4529  000A20  0E00               	movlw	0
  4530  000A22  221A               	addwfc	??_checa_botao+1,f,c
  4531  000A24  EE20 F002          	lfsr	2,2
  4532  000A28  5017               	movf	checa_botao@Calendario,w,c
  4533  000A2A  26D9               	addwf	fsr2l,f,c
  4534  000A2C  5018               	movf	checa_botao@Calendario+1,w,c
  4535  000A2E  22DA               	addwfc	fsr2h,f,c
  4536  000A30  C019  FFDE         	movff	??_checa_botao,postinc2
  4537  000A34  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4538  000A38                     l2293:
  4539                           
  4540                           ;display_LCD.c: 101: if(cursor==9) Calendario->mes++;
  4541  000A38  0E09               	movlw	9
  4542  000A3A  1837               	xorwf	_cursor,w,c
  4543  000A3C  1038               	iorwf	_cursor+1,w,c
  4544  000A3E  A4D8               	btfss	status,2,c
  4545  000A40  D009               	goto	l2297
  4546  000A42  EE20 F002          	lfsr	2,2
  4547  000A46  5017               	movf	checa_botao@Calendario,w,c
  4548  000A48  26D9               	addwf	fsr2l,f,c
  4549  000A4A  5018               	movf	checa_botao@Calendario+1,w,c
  4550  000A4C  22DA               	addwfc	fsr2h,f,c
  4551  000A4E  2ADE               	incf	postinc2,f,c
  4552  000A50  0E00               	movlw	0
  4553  000A52  22DD               	addwfc	postdec2,f,c
  4554  000A54                     l2297:
  4555                           
  4556                           ;display_LCD.c: 102: if(cursor==10) Calendario->ano=Calendario->ano+10;
  4557  000A54  0E0A               	movlw	10
  4558  000A56  1837               	xorwf	_cursor,w,c
  4559  000A58  1038               	iorwf	_cursor+1,w,c
  4560  000A5A  A4D8               	btfss	status,2,c
  4561  000A5C  D018               	goto	l2301
  4562  000A5E  EE20 F004          	lfsr	2,4
  4563  000A62  5017               	movf	checa_botao@Calendario,w,c
  4564  000A64  26D9               	addwf	fsr2l,f,c
  4565  000A66  5018               	movf	checa_botao@Calendario+1,w,c
  4566  000A68  22DA               	addwfc	fsr2h,f,c
  4567  000A6A  CFDE F019          	movff	postinc2,??_checa_botao
  4568  000A6E  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4569  000A72  0E0A               	movlw	10
  4570  000A74  2619               	addwf	??_checa_botao,f,c
  4571  000A76  0E00               	movlw	0
  4572  000A78  221A               	addwfc	??_checa_botao+1,f,c
  4573  000A7A  EE20 F004          	lfsr	2,4
  4574  000A7E  5017               	movf	checa_botao@Calendario,w,c
  4575  000A80  26D9               	addwf	fsr2l,f,c
  4576  000A82  5018               	movf	checa_botao@Calendario+1,w,c
  4577  000A84  22DA               	addwfc	fsr2h,f,c
  4578  000A86  C019  FFDE         	movff	??_checa_botao,postinc2
  4579  000A8A  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4580  000A8E                     l2301:
  4581                           
  4582                           ;display_LCD.c: 103: if(cursor==11) Calendario->ano++;
  4583  000A8E  0E0B               	movlw	11
  4584  000A90  1837               	xorwf	_cursor,w,c
  4585  000A92  1038               	iorwf	_cursor+1,w,c
  4586  000A94  A4D8               	btfss	status,2,c
  4587  000A96  D009               	goto	l2305
  4588  000A98  EE20 F004          	lfsr	2,4
  4589  000A9C  5017               	movf	checa_botao@Calendario,w,c
  4590  000A9E  26D9               	addwf	fsr2l,f,c
  4591  000AA0  5018               	movf	checa_botao@Calendario+1,w,c
  4592  000AA2  22DA               	addwfc	fsr2h,f,c
  4593  000AA4  2ADE               	incf	postinc2,f,c
  4594  000AA6  0E00               	movlw	0
  4595  000AA8  22DD               	addwfc	postdec2,f,c
  4596  000AAA                     l2305:
  4597                           
  4598                           ;display_LCD.c: 104: }
  4599                           ;display_LCD.c: 106: if(tela_exibida==1){
  4600  000AAA  043B               	decf	_tela_exibida,w,c
  4601  000AAC  103C               	iorwf	_tela_exibida+1,w,c
  4602  000AAE  A4D8               	btfss	status,2,c
  4603  000AB0  D07F               	goto	l183
  4604                           
  4605                           ;display_LCD.c: 107: if(cursor==0) Despertador->hora=Despertador->hora+10;
  4606  000AB2  5037               	movf	_cursor,w,c
  4607  000AB4  1038               	iorwf	_cursor+1,w,c
  4608  000AB6  A4D8               	btfss	status,2,c
  4609  000AB8  D018               	goto	l2311
  4610  000ABA  EE20 F004          	lfsr	2,4
  4611  000ABE  5015               	movf	checa_botao@Despertador,w,c
  4612  000AC0  26D9               	addwf	fsr2l,f,c
  4613  000AC2  5016               	movf	checa_botao@Despertador+1,w,c
  4614  000AC4  22DA               	addwfc	fsr2h,f,c
  4615  000AC6  CFDE F019          	movff	postinc2,??_checa_botao
  4616  000ACA  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4617  000ACE  0E0A               	movlw	10
  4618  000AD0  2619               	addwf	??_checa_botao,f,c
  4619  000AD2  0E00               	movlw	0
  4620  000AD4  221A               	addwfc	??_checa_botao+1,f,c
  4621  000AD6  EE20 F004          	lfsr	2,4
  4622  000ADA  5015               	movf	checa_botao@Despertador,w,c
  4623  000ADC  26D9               	addwf	fsr2l,f,c
  4624  000ADE  5016               	movf	checa_botao@Despertador+1,w,c
  4625  000AE0  22DA               	addwfc	fsr2h,f,c
  4626  000AE2  C019  FFDE         	movff	??_checa_botao,postinc2
  4627  000AE6  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4628  000AEA                     l2311:
  4629                           
  4630                           ;display_LCD.c: 108: if(cursor==1) Despertador->hora++;
  4631  000AEA  0437               	decf	_cursor,w,c
  4632  000AEC  1038               	iorwf	_cursor+1,w,c
  4633  000AEE  A4D8               	btfss	status,2,c
  4634  000AF0  D009               	goto	l2315
  4635  000AF2  EE20 F004          	lfsr	2,4
  4636  000AF6  5015               	movf	checa_botao@Despertador,w,c
  4637  000AF8  26D9               	addwf	fsr2l,f,c
  4638  000AFA  5016               	movf	checa_botao@Despertador+1,w,c
  4639  000AFC  22DA               	addwfc	fsr2h,f,c
  4640  000AFE  2ADE               	incf	postinc2,f,c
  4641  000B00  0E00               	movlw	0
  4642  000B02  22DD               	addwfc	postdec2,f,c
  4643  000B04                     l2315:
  4644                           
  4645                           ;display_LCD.c: 109: if(cursor==2) Despertador->minuto=Despertador->minuto+10;
  4646  000B04  0E02               	movlw	2
  4647  000B06  1837               	xorwf	_cursor,w,c
  4648  000B08  1038               	iorwf	_cursor+1,w,c
  4649  000B0A  A4D8               	btfss	status,2,c
  4650  000B0C  D014               	goto	l2319
  4651  000B0E  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  4652  000B12  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  4653  000B16  CFDE F019          	movff	postinc2,??_checa_botao
  4654  000B1A  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4655  000B1E  0E0A               	movlw	10
  4656  000B20  2619               	addwf	??_checa_botao,f,c
  4657  000B22  0E00               	movlw	0
  4658  000B24  221A               	addwfc	??_checa_botao+1,f,c
  4659  000B26  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  4660  000B2A  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  4661  000B2E  C019  FFDE         	movff	??_checa_botao,postinc2
  4662  000B32  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4663  000B36                     l2319:
  4664                           
  4665                           ;display_LCD.c: 110: if(cursor==3) Despertador->minuto++;
  4666  000B36  0E03               	movlw	3
  4667  000B38  1837               	xorwf	_cursor,w,c
  4668  000B3A  1038               	iorwf	_cursor+1,w,c
  4669  000B3C  A4D8               	btfss	status,2,c
  4670  000B3E  D007               	goto	l2323
  4671  000B40  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  4672  000B44  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  4673  000B48  2ADE               	incf	postinc2,f,c
  4674  000B4A  0E00               	movlw	0
  4675  000B4C  22DD               	addwfc	postdec2,f,c
  4676  000B4E                     l2323:
  4677                           
  4678                           ;display_LCD.c: 111: if(cursor==4) Despertador->segundo=Despertador->segundo+10;
  4679  000B4E  0E04               	movlw	4
  4680  000B50  1837               	xorwf	_cursor,w,c
  4681  000B52  1038               	iorwf	_cursor+1,w,c
  4682  000B54  A4D8               	btfss	status,2,c
  4683  000B56  D018               	goto	l2327
  4684  000B58  EE20 F002          	lfsr	2,2
  4685  000B5C  5015               	movf	checa_botao@Despertador,w,c
  4686  000B5E  26D9               	addwf	fsr2l,f,c
  4687  000B60  5016               	movf	checa_botao@Despertador+1,w,c
  4688  000B62  22DA               	addwfc	fsr2h,f,c
  4689  000B64  CFDE F019          	movff	postinc2,??_checa_botao
  4690  000B68  CFDD F01A          	movff	postdec2,??_checa_botao+1
  4691  000B6C  0E0A               	movlw	10
  4692  000B6E  2619               	addwf	??_checa_botao,f,c
  4693  000B70  0E00               	movlw	0
  4694  000B72  221A               	addwfc	??_checa_botao+1,f,c
  4695  000B74  EE20 F002          	lfsr	2,2
  4696  000B78  5015               	movf	checa_botao@Despertador,w,c
  4697  000B7A  26D9               	addwf	fsr2l,f,c
  4698  000B7C  5016               	movf	checa_botao@Despertador+1,w,c
  4699  000B7E  22DA               	addwfc	fsr2h,f,c
  4700  000B80  C019  FFDE         	movff	??_checa_botao,postinc2
  4701  000B84  C01A  FFDD         	movff	??_checa_botao+1,postdec2
  4702  000B88                     l2327:
  4703                           
  4704                           ;display_LCD.c: 112: if(cursor==5) Despertador->segundo++;
  4705  000B88  0E05               	movlw	5
  4706  000B8A  1837               	xorwf	_cursor,w,c
  4707  000B8C  1038               	iorwf	_cursor+1,w,c
  4708  000B8E  A4D8               	btfss	status,2,c
  4709  000B90  D009               	goto	l2331
  4710  000B92  EE20 F002          	lfsr	2,2
  4711  000B96  5015               	movf	checa_botao@Despertador,w,c
  4712  000B98  26D9               	addwf	fsr2l,f,c
  4713  000B9A  5016               	movf	checa_botao@Despertador+1,w,c
  4714  000B9C  22DA               	addwfc	fsr2h,f,c
  4715  000B9E  2ADE               	incf	postinc2,f,c
  4716  000BA0  0E00               	movlw	0
  4717  000BA2  22DD               	addwfc	postdec2,f,c
  4718  000BA4                     l2331:
  4719                           
  4720                           ;display_LCD.c: 113: controla_despertador(Despertador);
  4721  000BA4  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  4722  000BA8  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  4723  000BAC  EC0E  F00E         	call	_controla_despertador	;wreg free
  4724  000BB0                     l183:
  4725  000BB0  B283               	btfsc	3971,1,c	;volatile
  4726  000BB2  D7FE               	goto	l183
  4727  000BB4                     l162:
  4728                           
  4729                           ;display_LCD.c: 117: }
  4730                           ;display_LCD.c: 120: if(PORTDbits.RD2==1){
  4731  000BB4  A483               	btfss	3971,2,c	;volatile
  4732  000BB6  D1AC               	goto	l186
  4733                           
  4734                           ;display_LCD.c: 121: _delay((unsigned long)((180)*(20000000/4000.0)));
  4735  000BB8  0E05               	movlw	5
  4736  000BBA  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4737  000BBC  0E91               	movlw	145
  4738  000BBE  6E19               	movwf	??_checa_botao& (0+255),c
  4739  000BC0  0ED0               	movlw	208
  4740  000BC2                     u3017:
  4741  000BC2  2EE8               	decfsz	wreg,f,c
  4742  000BC4  D7FE               	bra	u3017
  4743  000BC6  2E19               	decfsz	??_checa_botao& (0+255),f,c
  4744  000BC8  D7FC               	bra	u3017
  4745  000BCA  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  4746  000BCC  D7FA               	bra	u3017
  4747                           
  4748                           ;display_LCD.c: 123: if(tela_exibida==0){
  4749  000BCE  503B               	movf	_tela_exibida,w,c
  4750  000BD0  103C               	iorwf	_tela_exibida+1,w,c
  4751  000BD2  A4D8               	btfss	status,2,c
  4752  000BD4  D10C               	goto	l2385
  4753                           
  4754                           ;display_LCD.c: 124: if(cursor==0) Relogio->hora=Relogio->hora-10;
  4755  000BD6  5037               	movf	_cursor,w,c
  4756  000BD8  1038               	iorwf	_cursor+1,w,c
  4757  000BDA  A4D8               	btfss	status,2,c
  4758  000BDC  D01C               	goto	l2341
  4759  000BDE  0EF6               	movlw	246
  4760  000BE0  6E19               	movwf	??_checa_botao& (0+255),c
  4761  000BE2  0EFF               	movlw	255
  4762  000BE4  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4763  000BE6  EE20 F004          	lfsr	2,4
  4764  000BEA  5013               	movf	checa_botao@Relogio,w,c
  4765  000BEC  26D9               	addwf	fsr2l,f,c
  4766  000BEE  5014               	movf	checa_botao@Relogio+1,w,c
  4767  000BF0  22DA               	addwfc	fsr2h,f,c
  4768  000BF2  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4769  000BF6  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4770  000BFA  5019               	movf	??_checa_botao,w,c
  4771  000BFC  261B               	addwf	??_checa_botao+2,f,c
  4772  000BFE  501A               	movf	??_checa_botao+1,w,c
  4773  000C00  221C               	addwfc	??_checa_botao+3,f,c
  4774  000C02  EE20 F004          	lfsr	2,4
  4775  000C06  5013               	movf	checa_botao@Relogio,w,c
  4776  000C08  26D9               	addwf	fsr2l,f,c
  4777  000C0A  5014               	movf	checa_botao@Relogio+1,w,c
  4778  000C0C  22DA               	addwfc	fsr2h,f,c
  4779  000C0E  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4780  000C12  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4781  000C16                     l2341:
  4782                           
  4783                           ;display_LCD.c: 125: if(cursor==1) Relogio->hora--;
  4784  000C16  0437               	decf	_cursor,w,c
  4785  000C18  1038               	iorwf	_cursor+1,w,c
  4786  000C1A  A4D8               	btfss	status,2,c
  4787  000C1C  D009               	goto	l2345
  4788  000C1E  EE20 F004          	lfsr	2,4
  4789  000C22  5013               	movf	checa_botao@Relogio,w,c
  4790  000C24  26D9               	addwf	fsr2l,f,c
  4791  000C26  5014               	movf	checa_botao@Relogio+1,w,c
  4792  000C28  22DA               	addwfc	fsr2h,f,c
  4793  000C2A  06DE               	decf	postinc2,f,c
  4794  000C2C  0E00               	movlw	0
  4795  000C2E  5ADD               	subwfb	postdec2,f,c
  4796  000C30                     l2345:
  4797                           
  4798                           ;display_LCD.c: 126: if(cursor==2) Relogio->minuto=Relogio->minuto-10;
  4799  000C30  0E02               	movlw	2
  4800  000C32  1837               	xorwf	_cursor,w,c
  4801  000C34  1038               	iorwf	_cursor+1,w,c
  4802  000C36  A4D8               	btfss	status,2,c
  4803  000C38  D018               	goto	l2349
  4804  000C3A  0EF6               	movlw	246
  4805  000C3C  6E19               	movwf	??_checa_botao& (0+255),c
  4806  000C3E  0EFF               	movlw	255
  4807  000C40  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4808  000C42  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4809  000C46  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4810  000C4A  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4811  000C4E  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4812  000C52  5019               	movf	??_checa_botao,w,c
  4813  000C54  261B               	addwf	??_checa_botao+2,f,c
  4814  000C56  501A               	movf	??_checa_botao+1,w,c
  4815  000C58  221C               	addwfc	??_checa_botao+3,f,c
  4816  000C5A  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4817  000C5E  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4818  000C62  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4819  000C66  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4820  000C6A                     l2349:
  4821                           
  4822                           ;display_LCD.c: 127: if(cursor==3) Relogio->minuto--;
  4823  000C6A  0E03               	movlw	3
  4824  000C6C  1837               	xorwf	_cursor,w,c
  4825  000C6E  1038               	iorwf	_cursor+1,w,c
  4826  000C70  A4D8               	btfss	status,2,c
  4827  000C72  D007               	goto	l2353
  4828  000C74  C013  FFD9         	movff	checa_botao@Relogio,fsr2l
  4829  000C78  C014  FFDA         	movff	checa_botao@Relogio+1,fsr2h
  4830  000C7C  06DE               	decf	postinc2,f,c
  4831  000C7E  0E00               	movlw	0
  4832  000C80  5ADD               	subwfb	postdec2,f,c
  4833  000C82                     l2353:
  4834                           
  4835                           ;display_LCD.c: 128: if(cursor==4) Relogio->segundo=Relogio->segundo-10;
  4836  000C82  0E04               	movlw	4
  4837  000C84  1837               	xorwf	_cursor,w,c
  4838  000C86  1038               	iorwf	_cursor+1,w,c
  4839  000C88  A4D8               	btfss	status,2,c
  4840  000C8A  D01C               	goto	l2357
  4841  000C8C  0EF6               	movlw	246
  4842  000C8E  6E19               	movwf	??_checa_botao& (0+255),c
  4843  000C90  0EFF               	movlw	255
  4844  000C92  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4845  000C94  EE20 F002          	lfsr	2,2
  4846  000C98  5013               	movf	checa_botao@Relogio,w,c
  4847  000C9A  26D9               	addwf	fsr2l,f,c
  4848  000C9C  5014               	movf	checa_botao@Relogio+1,w,c
  4849  000C9E  22DA               	addwfc	fsr2h,f,c
  4850  000CA0  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4851  000CA4  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4852  000CA8  5019               	movf	??_checa_botao,w,c
  4853  000CAA  261B               	addwf	??_checa_botao+2,f,c
  4854  000CAC  501A               	movf	??_checa_botao+1,w,c
  4855  000CAE  221C               	addwfc	??_checa_botao+3,f,c
  4856  000CB0  EE20 F002          	lfsr	2,2
  4857  000CB4  5013               	movf	checa_botao@Relogio,w,c
  4858  000CB6  26D9               	addwf	fsr2l,f,c
  4859  000CB8  5014               	movf	checa_botao@Relogio+1,w,c
  4860  000CBA  22DA               	addwfc	fsr2h,f,c
  4861  000CBC  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4862  000CC0  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4863  000CC4                     l2357:
  4864                           
  4865                           ;display_LCD.c: 129: if(cursor==5) Relogio->segundo--;
  4866  000CC4  0E05               	movlw	5
  4867  000CC6  1837               	xorwf	_cursor,w,c
  4868  000CC8  1038               	iorwf	_cursor+1,w,c
  4869  000CCA  A4D8               	btfss	status,2,c
  4870  000CCC  D009               	goto	l2361
  4871  000CCE  EE20 F002          	lfsr	2,2
  4872  000CD2  5013               	movf	checa_botao@Relogio,w,c
  4873  000CD4  26D9               	addwf	fsr2l,f,c
  4874  000CD6  5014               	movf	checa_botao@Relogio+1,w,c
  4875  000CD8  22DA               	addwfc	fsr2h,f,c
  4876  000CDA  06DE               	decf	postinc2,f,c
  4877  000CDC  0E00               	movlw	0
  4878  000CDE  5ADD               	subwfb	postdec2,f,c
  4879  000CE0                     l2361:
  4880                           
  4881                           ;display_LCD.c: 130: if(cursor==6) Calendario->dia=Calendario->dia-10;
  4882  000CE0  0E06               	movlw	6
  4883  000CE2  1837               	xorwf	_cursor,w,c
  4884  000CE4  1038               	iorwf	_cursor+1,w,c
  4885  000CE6  A4D8               	btfss	status,2,c
  4886  000CE8  D018               	goto	l2365
  4887  000CEA  0EF6               	movlw	246
  4888  000CEC  6E19               	movwf	??_checa_botao& (0+255),c
  4889  000CEE  0EFF               	movlw	255
  4890  000CF0  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4891  000CF2  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4892  000CF6  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4893  000CFA  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4894  000CFE  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4895  000D02  5019               	movf	??_checa_botao,w,c
  4896  000D04  261B               	addwf	??_checa_botao+2,f,c
  4897  000D06  501A               	movf	??_checa_botao+1,w,c
  4898  000D08  221C               	addwfc	??_checa_botao+3,f,c
  4899  000D0A  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4900  000D0E  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4901  000D12  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4902  000D16  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4903  000D1A                     l2365:
  4904                           
  4905                           ;display_LCD.c: 131: if(cursor==7) Calendario->dia--;
  4906  000D1A  0E07               	movlw	7
  4907  000D1C  1837               	xorwf	_cursor,w,c
  4908  000D1E  1038               	iorwf	_cursor+1,w,c
  4909  000D20  A4D8               	btfss	status,2,c
  4910  000D22  D007               	goto	l2369
  4911  000D24  C017  FFD9         	movff	checa_botao@Calendario,fsr2l
  4912  000D28  C018  FFDA         	movff	checa_botao@Calendario+1,fsr2h
  4913  000D2C  06DE               	decf	postinc2,f,c
  4914  000D2E  0E00               	movlw	0
  4915  000D30  5ADD               	subwfb	postdec2,f,c
  4916  000D32                     l2369:
  4917                           
  4918                           ;display_LCD.c: 132: if(cursor==8) Calendario->mes=Calendario->mes-10;
  4919  000D32  0E08               	movlw	8
  4920  000D34  1837               	xorwf	_cursor,w,c
  4921  000D36  1038               	iorwf	_cursor+1,w,c
  4922  000D38  A4D8               	btfss	status,2,c
  4923  000D3A  D01C               	goto	l2373
  4924  000D3C  0EF6               	movlw	246
  4925  000D3E  6E19               	movwf	??_checa_botao& (0+255),c
  4926  000D40  0EFF               	movlw	255
  4927  000D42  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4928  000D44  EE20 F002          	lfsr	2,2
  4929  000D48  5017               	movf	checa_botao@Calendario,w,c
  4930  000D4A  26D9               	addwf	fsr2l,f,c
  4931  000D4C  5018               	movf	checa_botao@Calendario+1,w,c
  4932  000D4E  22DA               	addwfc	fsr2h,f,c
  4933  000D50  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4934  000D54  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4935  000D58  5019               	movf	??_checa_botao,w,c
  4936  000D5A  261B               	addwf	??_checa_botao+2,f,c
  4937  000D5C  501A               	movf	??_checa_botao+1,w,c
  4938  000D5E  221C               	addwfc	??_checa_botao+3,f,c
  4939  000D60  EE20 F002          	lfsr	2,2
  4940  000D64  5017               	movf	checa_botao@Calendario,w,c
  4941  000D66  26D9               	addwf	fsr2l,f,c
  4942  000D68  5018               	movf	checa_botao@Calendario+1,w,c
  4943  000D6A  22DA               	addwfc	fsr2h,f,c
  4944  000D6C  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4945  000D70  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4946  000D74                     l2373:
  4947                           
  4948                           ;display_LCD.c: 133: if(cursor==9) Calendario->mes--;
  4949  000D74  0E09               	movlw	9
  4950  000D76  1837               	xorwf	_cursor,w,c
  4951  000D78  1038               	iorwf	_cursor+1,w,c
  4952  000D7A  A4D8               	btfss	status,2,c
  4953  000D7C  D009               	goto	l2377
  4954  000D7E  EE20 F002          	lfsr	2,2
  4955  000D82  5017               	movf	checa_botao@Calendario,w,c
  4956  000D84  26D9               	addwf	fsr2l,f,c
  4957  000D86  5018               	movf	checa_botao@Calendario+1,w,c
  4958  000D88  22DA               	addwfc	fsr2h,f,c
  4959  000D8A  06DE               	decf	postinc2,f,c
  4960  000D8C  0E00               	movlw	0
  4961  000D8E  5ADD               	subwfb	postdec2,f,c
  4962  000D90                     l2377:
  4963                           
  4964                           ;display_LCD.c: 134: if(cursor==10) Calendario->ano=Calendario->ano-10;
  4965  000D90  0E0A               	movlw	10
  4966  000D92  1837               	xorwf	_cursor,w,c
  4967  000D94  1038               	iorwf	_cursor+1,w,c
  4968  000D96  A4D8               	btfss	status,2,c
  4969  000D98  D01C               	goto	l2381
  4970  000D9A  0EF6               	movlw	246
  4971  000D9C  6E19               	movwf	??_checa_botao& (0+255),c
  4972  000D9E  0EFF               	movlw	255
  4973  000DA0  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  4974  000DA2  EE20 F004          	lfsr	2,4
  4975  000DA6  5017               	movf	checa_botao@Calendario,w,c
  4976  000DA8  26D9               	addwf	fsr2l,f,c
  4977  000DAA  5018               	movf	checa_botao@Calendario+1,w,c
  4978  000DAC  22DA               	addwfc	fsr2h,f,c
  4979  000DAE  CFDE F01B          	movff	postinc2,??_checa_botao+2
  4980  000DB2  CFDD F01C          	movff	postdec2,??_checa_botao+3
  4981  000DB6  5019               	movf	??_checa_botao,w,c
  4982  000DB8  261B               	addwf	??_checa_botao+2,f,c
  4983  000DBA  501A               	movf	??_checa_botao+1,w,c
  4984  000DBC  221C               	addwfc	??_checa_botao+3,f,c
  4985  000DBE  EE20 F004          	lfsr	2,4
  4986  000DC2  5017               	movf	checa_botao@Calendario,w,c
  4987  000DC4  26D9               	addwf	fsr2l,f,c
  4988  000DC6  5018               	movf	checa_botao@Calendario+1,w,c
  4989  000DC8  22DA               	addwfc	fsr2h,f,c
  4990  000DCA  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  4991  000DCE  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  4992  000DD2                     l2381:
  4993                           
  4994                           ;display_LCD.c: 135: if(cursor==11) Calendario->ano--;
  4995  000DD2  0E0B               	movlw	11
  4996  000DD4  1837               	xorwf	_cursor,w,c
  4997  000DD6  1038               	iorwf	_cursor+1,w,c
  4998  000DD8  A4D8               	btfss	status,2,c
  4999  000DDA  D009               	goto	l2385
  5000  000DDC  EE20 F004          	lfsr	2,4
  5001  000DE0  5017               	movf	checa_botao@Calendario,w,c
  5002  000DE2  26D9               	addwf	fsr2l,f,c
  5003  000DE4  5018               	movf	checa_botao@Calendario+1,w,c
  5004  000DE6  22DA               	addwfc	fsr2h,f,c
  5005  000DE8  06DE               	decf	postinc2,f,c
  5006  000DEA  0E00               	movlw	0
  5007  000DEC  5ADD               	subwfb	postdec2,f,c
  5008  000DEE                     l2385:
  5009                           
  5010                           ;display_LCD.c: 136: }
  5011                           ;display_LCD.c: 138: if(tela_exibida==1){
  5012  000DEE  043B               	decf	_tela_exibida,w,c
  5013  000DF0  103C               	iorwf	_tela_exibida+1,w,c
  5014  000DF2  A4D8               	btfss	status,2,c
  5015  000DF4  D08B               	goto	l207
  5016                           
  5017                           ;display_LCD.c: 139: if(cursor==0) Despertador->hora=Despertador->hora-10;
  5018  000DF6  5037               	movf	_cursor,w,c
  5019  000DF8  1038               	iorwf	_cursor+1,w,c
  5020  000DFA  A4D8               	btfss	status,2,c
  5021  000DFC  D01C               	goto	l2391
  5022  000DFE  0EF6               	movlw	246
  5023  000E00  6E19               	movwf	??_checa_botao& (0+255),c
  5024  000E02  0EFF               	movlw	255
  5025  000E04  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  5026  000E06  EE20 F004          	lfsr	2,4
  5027  000E0A  5015               	movf	checa_botao@Despertador,w,c
  5028  000E0C  26D9               	addwf	fsr2l,f,c
  5029  000E0E  5016               	movf	checa_botao@Despertador+1,w,c
  5030  000E10  22DA               	addwfc	fsr2h,f,c
  5031  000E12  CFDE F01B          	movff	postinc2,??_checa_botao+2
  5032  000E16  CFDD F01C          	movff	postdec2,??_checa_botao+3
  5033  000E1A  5019               	movf	??_checa_botao,w,c
  5034  000E1C  261B               	addwf	??_checa_botao+2,f,c
  5035  000E1E  501A               	movf	??_checa_botao+1,w,c
  5036  000E20  221C               	addwfc	??_checa_botao+3,f,c
  5037  000E22  EE20 F004          	lfsr	2,4
  5038  000E26  5015               	movf	checa_botao@Despertador,w,c
  5039  000E28  26D9               	addwf	fsr2l,f,c
  5040  000E2A  5016               	movf	checa_botao@Despertador+1,w,c
  5041  000E2C  22DA               	addwfc	fsr2h,f,c
  5042  000E2E  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  5043  000E32  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  5044  000E36                     l2391:
  5045                           
  5046                           ;display_LCD.c: 140: if(cursor==1) Despertador->hora--;
  5047  000E36  0437               	decf	_cursor,w,c
  5048  000E38  1038               	iorwf	_cursor+1,w,c
  5049  000E3A  A4D8               	btfss	status,2,c
  5050  000E3C  D009               	goto	l2395
  5051  000E3E  EE20 F004          	lfsr	2,4
  5052  000E42  5015               	movf	checa_botao@Despertador,w,c
  5053  000E44  26D9               	addwf	fsr2l,f,c
  5054  000E46  5016               	movf	checa_botao@Despertador+1,w,c
  5055  000E48  22DA               	addwfc	fsr2h,f,c
  5056  000E4A  06DE               	decf	postinc2,f,c
  5057  000E4C  0E00               	movlw	0
  5058  000E4E  5ADD               	subwfb	postdec2,f,c
  5059  000E50                     l2395:
  5060                           
  5061                           ;display_LCD.c: 141: if(cursor==2) Despertador->minuto=Despertador->minuto-10;
  5062  000E50  0E02               	movlw	2
  5063  000E52  1837               	xorwf	_cursor,w,c
  5064  000E54  1038               	iorwf	_cursor+1,w,c
  5065  000E56  A4D8               	btfss	status,2,c
  5066  000E58  D018               	goto	l2399
  5067  000E5A  0EF6               	movlw	246
  5068  000E5C  6E19               	movwf	??_checa_botao& (0+255),c
  5069  000E5E  0EFF               	movlw	255
  5070  000E60  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  5071  000E62  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  5072  000E66  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  5073  000E6A  CFDE F01B          	movff	postinc2,??_checa_botao+2
  5074  000E6E  CFDD F01C          	movff	postdec2,??_checa_botao+3
  5075  000E72  5019               	movf	??_checa_botao,w,c
  5076  000E74  261B               	addwf	??_checa_botao+2,f,c
  5077  000E76  501A               	movf	??_checa_botao+1,w,c
  5078  000E78  221C               	addwfc	??_checa_botao+3,f,c
  5079  000E7A  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  5080  000E7E  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  5081  000E82  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  5082  000E86  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  5083  000E8A                     l2399:
  5084                           
  5085                           ;display_LCD.c: 142: if(cursor==3) Despertador->minuto--;
  5086  000E8A  0E03               	movlw	3
  5087  000E8C  1837               	xorwf	_cursor,w,c
  5088  000E8E  1038               	iorwf	_cursor+1,w,c
  5089  000E90  A4D8               	btfss	status,2,c
  5090  000E92  D007               	goto	l2403
  5091  000E94  C015  FFD9         	movff	checa_botao@Despertador,fsr2l
  5092  000E98  C016  FFDA         	movff	checa_botao@Despertador+1,fsr2h
  5093  000E9C  06DE               	decf	postinc2,f,c
  5094  000E9E  0E00               	movlw	0
  5095  000EA0  5ADD               	subwfb	postdec2,f,c
  5096  000EA2                     l2403:
  5097                           
  5098                           ;display_LCD.c: 143: if(cursor==4) Despertador->segundo=Despertador->segundo-10;
  5099  000EA2  0E04               	movlw	4
  5100  000EA4  1837               	xorwf	_cursor,w,c
  5101  000EA6  1038               	iorwf	_cursor+1,w,c
  5102  000EA8  A4D8               	btfss	status,2,c
  5103  000EAA  D01C               	goto	l2407
  5104  000EAC  0EF6               	movlw	246
  5105  000EAE  6E19               	movwf	??_checa_botao& (0+255),c
  5106  000EB0  0EFF               	movlw	255
  5107  000EB2  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  5108  000EB4  EE20 F002          	lfsr	2,2
  5109  000EB8  5015               	movf	checa_botao@Despertador,w,c
  5110  000EBA  26D9               	addwf	fsr2l,f,c
  5111  000EBC  5016               	movf	checa_botao@Despertador+1,w,c
  5112  000EBE  22DA               	addwfc	fsr2h,f,c
  5113  000EC0  CFDE F01B          	movff	postinc2,??_checa_botao+2
  5114  000EC4  CFDD F01C          	movff	postdec2,??_checa_botao+3
  5115  000EC8  5019               	movf	??_checa_botao,w,c
  5116  000ECA  261B               	addwf	??_checa_botao+2,f,c
  5117  000ECC  501A               	movf	??_checa_botao+1,w,c
  5118  000ECE  221C               	addwfc	??_checa_botao+3,f,c
  5119  000ED0  EE20 F002          	lfsr	2,2
  5120  000ED4  5015               	movf	checa_botao@Despertador,w,c
  5121  000ED6  26D9               	addwf	fsr2l,f,c
  5122  000ED8  5016               	movf	checa_botao@Despertador+1,w,c
  5123  000EDA  22DA               	addwfc	fsr2h,f,c
  5124  000EDC  C01B  FFDE         	movff	??_checa_botao+2,postinc2
  5125  000EE0  C01C  FFDD         	movff	??_checa_botao+3,postdec2
  5126  000EE4                     l2407:
  5127                           
  5128                           ;display_LCD.c: 144: if(cursor==5) Despertador->segundo--;
  5129  000EE4  0E05               	movlw	5
  5130  000EE6  1837               	xorwf	_cursor,w,c
  5131  000EE8  1038               	iorwf	_cursor+1,w,c
  5132  000EEA  A4D8               	btfss	status,2,c
  5133  000EEC  D009               	goto	l2411
  5134  000EEE  EE20 F002          	lfsr	2,2
  5135  000EF2  5015               	movf	checa_botao@Despertador,w,c
  5136  000EF4  26D9               	addwf	fsr2l,f,c
  5137  000EF6  5016               	movf	checa_botao@Despertador+1,w,c
  5138  000EF8  22DA               	addwfc	fsr2h,f,c
  5139  000EFA  06DE               	decf	postinc2,f,c
  5140  000EFC  0E00               	movlw	0
  5141  000EFE  5ADD               	subwfb	postdec2,f,c
  5142  000F00                     l2411:
  5143                           
  5144                           ;display_LCD.c: 145: controla_despertador(Despertador);
  5145  000F00  C015  F00F         	movff	checa_botao@Despertador,controla_despertador@Despertador
  5146  000F04  C016  F010         	movff	checa_botao@Despertador+1,controla_despertador@Despertador+1
  5147  000F08  EC0E  F00E         	call	_controla_despertador	;wreg free
  5148  000F0C                     l207:
  5149  000F0C  B483               	btfsc	3971,2,c	;volatile
  5150  000F0E  D7FE               	goto	l207
  5151  000F10                     l186:
  5152                           
  5153                           ;display_LCD.c: 148: }
  5154                           ;display_LCD.c: 151: if(PORTDbits.RD3==1){
  5155  000F10  A683               	btfss	3971,3,c	;volatile
  5156  000F12  0012               	return	
  5157                           
  5158                           ;display_LCD.c: 152: _delay((unsigned long)((180)*(20000000/4000.0)));
  5159  000F14  0E05               	movlw	5
  5160  000F16  6E1A               	movwf	(??_checa_botao+1)& (0+255),c
  5161  000F18  0E91               	movlw	145
  5162  000F1A  6E19               	movwf	??_checa_botao& (0+255),c
  5163  000F1C  0ED0               	movlw	208
  5164  000F1E                     u3027:
  5165  000F1E  2EE8               	decfsz	wreg,f,c
  5166  000F20  D7FE               	bra	u3027
  5167  000F22  2E19               	decfsz	??_checa_botao& (0+255),f,c
  5168  000F24  D7FC               	bra	u3027
  5169  000F26  2E1A               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5170  000F28  D7FA               	bra	u3027
  5171                           
  5172                           ;display_LCD.c: 153: cursor++;
  5173  000F2A  4A37               	infsnz	_cursor,f,c
  5174  000F2C  2A38               	incf	_cursor+1,f,c
  5175                           
  5176                           ;display_LCD.c: 154: if(cursor>11 && tela_exibida==0) cursor=0;
  5177  000F2E  BE38               	btfsc	_cursor+1,7,c
  5178  000F30  D00E               	goto	l2421
  5179  000F32  5038               	movf	_cursor+1,w,c
  5180  000F34  E104               	bnz	u2380
  5181  000F36  0E0C               	movlw	12
  5182  000F38  5C37               	subwf	_cursor,w,c
  5183  000F3A  A0D8               	btfss	status,0,c
  5184  000F3C  D008               	goto	l2421
  5185  000F3E                     u2380:
  5186  000F3E  503B               	movf	_tela_exibida,w,c
  5187  000F40  103C               	iorwf	_tela_exibida+1,w,c
  5188  000F42  A4D8               	btfss	status,2,c
  5189  000F44  D004               	goto	l2421
  5190  000F46  0E00               	movlw	0
  5191  000F48  6E38               	movwf	_cursor+1,c
  5192  000F4A  0E00               	movlw	0
  5193  000F4C  6E37               	movwf	_cursor,c
  5194  000F4E                     l2421:
  5195                           
  5196                           ;display_LCD.c: 155: if(cursor>5 && tela_exibida==1) cursor=0;
  5197  000F4E  BE38               	btfsc	_cursor+1,7,c
  5198  000F50  D00E               	goto	l213
  5199  000F52  5038               	movf	_cursor+1,w,c
  5200  000F54  E104               	bnz	u2400
  5201  000F56  0E06               	movlw	6
  5202  000F58  5C37               	subwf	_cursor,w,c
  5203  000F5A  A0D8               	btfss	status,0,c
  5204  000F5C  D008               	goto	l213
  5205  000F5E                     u2400:
  5206  000F5E  043B               	decf	_tela_exibida,w,c
  5207  000F60  103C               	iorwf	_tela_exibida+1,w,c
  5208  000F62  A4D8               	btfss	status,2,c
  5209  000F64  D004               	goto	l213
  5210  000F66  0E00               	movlw	0
  5211  000F68  6E38               	movwf	_cursor+1,c
  5212  000F6A  0E00               	movlw	0
  5213  000F6C  6E37               	movwf	_cursor,c
  5214  000F6E                     l213:
  5215  000F6E  A683               	btfss	3971,3,c	;volatile
  5216  000F70  0012               	return	
  5217  000F72  D7FD               	goto	l213
  5218  000F74                     __end_of_checa_botao:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           postinc0	equ	0xFEE
  5228                           wreg	equ	0xFE8
  5229                           indf1	equ	0xFE7
  5230                           postinc1	equ	0xFE6
  5231                           postdec1	equ	0xFE5
  5232                           fsr1h	equ	0xFE2
  5233                           fsr1l	equ	0xFE1
  5234                           indf2	equ	0xFDF
  5235                           postinc2	equ	0xFDE
  5236                           postdec2	equ	0xFDD
  5237                           plusw2	equ	0xFDB
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _controla_despertador *****************
  5243 ;; Defined at:
  5244 ;;		line 61 in file "relogio.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  Despertador     2   14[COMRAM] PTR struct .
  5247 ;;		 -> Despertador(6), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5259 ;;      Params:         2       0       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5261 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5263 ;;Total ram usage:        4 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_checa_botao
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text22
  5274  001C1C                     __ptext22:
  5275                           	opt stack 0
  5276  001C1C                     _controla_despertador:
  5277                           	opt stack 28
  5278                           
  5279                           ;relogio.c: 62: if(Despertador->segundo>59){
  5280                           
  5281                           ;incstack = 0
  5282  001C1C  EE20 F002          	lfsr	2,2
  5283  001C20  500F               	movf	controla_despertador@Despertador,w,c
  5284  001C22  26D9               	addwf	fsr2l,f,c
  5285  001C24  5010               	movf	controla_despertador@Despertador+1,w,c
  5286  001C26  22DA               	addwfc	fsr2h,f,c
  5287  001C28  0E01               	movlw	1
  5288  001C2A  BEDB               	btfsc	plusw2,7,c
  5289  001C2C  D018               	goto	l86
  5290  001C2E  0E01               	movlw	1
  5291  001C30  50DB               	movf	plusw2,w,c
  5292  001C32  E104               	bnz	u1520
  5293  001C34  0E3C               	movlw	60
  5294  001C36  5CDE               	subwf	postinc2,w,c
  5295  001C38  A0D8               	btfss	status,0,c
  5296  001C3A  D011               	goto	l86
  5297  001C3C                     u1520:
  5298                           
  5299                           ;relogio.c: 63: Despertador->minuto++;
  5300  001C3C  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5301  001C40  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5302  001C44  2ADE               	incf	postinc2,f,c
  5303  001C46  0E00               	movlw	0
  5304  001C48  22DD               	addwfc	postdec2,f,c
  5305                           
  5306                           ;relogio.c: 64: Despertador->segundo=0;
  5307  001C4A  EE20 F002          	lfsr	2,2
  5308  001C4E  500F               	movf	controla_despertador@Despertador,w,c
  5309  001C50  26D9               	addwf	fsr2l,f,c
  5310  001C52  5010               	movf	controla_despertador@Despertador+1,w,c
  5311  001C54  22DA               	addwfc	fsr2h,f,c
  5312  001C56  0E00               	movlw	0
  5313  001C58  6EDE               	movwf	postinc2,c
  5314  001C5A  0E00               	movlw	0
  5315  001C5C  6EDD               	movwf	postdec2,c
  5316  001C5E                     l86:
  5317                           
  5318                           ;relogio.c: 65: }
  5319                           ;relogio.c: 66: if(Despertador->segundo<0){
  5320  001C5E  EE20 F002          	lfsr	2,2
  5321  001C62  500F               	movf	controla_despertador@Despertador,w,c
  5322  001C64  26D9               	addwf	fsr2l,f,c
  5323  001C66  5010               	movf	controla_despertador@Despertador+1,w,c
  5324  001C68  22DA               	addwfc	fsr2h,f,c
  5325  001C6A  0E01               	movlw	1
  5326  001C6C  AEDB               	btfss	plusw2,7,c
  5327  001C6E  D011               	goto	l87
  5328                           
  5329                           ;relogio.c: 67: Despertador->segundo=59;
  5330  001C70  EE20 F002          	lfsr	2,2
  5331  001C74  500F               	movf	controla_despertador@Despertador,w,c
  5332  001C76  26D9               	addwf	fsr2l,f,c
  5333  001C78  5010               	movf	controla_despertador@Despertador+1,w,c
  5334  001C7A  22DA               	addwfc	fsr2h,f,c
  5335  001C7C  0E3B               	movlw	59
  5336  001C7E  6EDE               	movwf	postinc2,c
  5337  001C80  0E00               	movlw	0
  5338  001C82  6EDD               	movwf	postdec2,c
  5339                           
  5340                           ;relogio.c: 68: Despertador->minuto--;
  5341  001C84  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5342  001C88  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5343  001C8C  06DE               	decf	postinc2,f,c
  5344  001C8E  0E00               	movlw	0
  5345  001C90  5ADD               	subwfb	postdec2,f,c
  5346  001C92                     l87:
  5347                           
  5348                           ;relogio.c: 69: }
  5349                           ;relogio.c: 71: if(Despertador->minuto>59){
  5350  001C92  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5351  001C96  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5352  001C9A  0E01               	movlw	1
  5353  001C9C  BEDB               	btfsc	plusw2,7,c
  5354  001C9E  D018               	goto	l2017
  5355  001CA0  0E01               	movlw	1
  5356  001CA2  50DB               	movf	plusw2,w,c
  5357  001CA4  E104               	bnz	u1540
  5358  001CA6  0E3C               	movlw	60
  5359  001CA8  5CDE               	subwf	postinc2,w,c
  5360  001CAA  A0D8               	btfss	status,0,c
  5361  001CAC  D011               	goto	l2017
  5362  001CAE                     u1540:
  5363                           
  5364                           ;relogio.c: 72: Despertador->hora++;
  5365  001CAE  EE20 F004          	lfsr	2,4
  5366  001CB2  500F               	movf	controla_despertador@Despertador,w,c
  5367  001CB4  26D9               	addwf	fsr2l,f,c
  5368  001CB6  5010               	movf	controla_despertador@Despertador+1,w,c
  5369  001CB8  22DA               	addwfc	fsr2h,f,c
  5370  001CBA  2ADE               	incf	postinc2,f,c
  5371  001CBC  0E00               	movlw	0
  5372  001CBE  22DD               	addwfc	postdec2,f,c
  5373                           
  5374                           ;relogio.c: 73: Despertador->minuto=0;
  5375  001CC0  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5376  001CC4  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5377  001CC8  0E00               	movlw	0
  5378  001CCA  6EDE               	movwf	postinc2,c
  5379  001CCC  0E00               	movlw	0
  5380  001CCE  6EDD               	movwf	postdec2,c
  5381  001CD0                     l2017:
  5382                           
  5383                           ;relogio.c: 74: }
  5384                           ;relogio.c: 75: if(Despertador->minuto<0){
  5385  001CD0  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5386  001CD4  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5387  001CD8  0E01               	movlw	1
  5388  001CDA  AEDB               	btfss	plusw2,7,c
  5389  001CDC  D011               	goto	l2023
  5390                           
  5391                           ;relogio.c: 76: Despertador->minuto=59;
  5392  001CDE  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  5393  001CE2  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  5394  001CE6  0E3B               	movlw	59
  5395  001CE8  6EDE               	movwf	postinc2,c
  5396  001CEA  0E00               	movlw	0
  5397  001CEC  6EDD               	movwf	postdec2,c
  5398                           
  5399                           ;relogio.c: 77: Despertador->hora--;
  5400  001CEE  EE20 F004          	lfsr	2,4
  5401  001CF2  500F               	movf	controla_despertador@Despertador,w,c
  5402  001CF4  26D9               	addwf	fsr2l,f,c
  5403  001CF6  5010               	movf	controla_despertador@Despertador+1,w,c
  5404  001CF8  22DA               	addwfc	fsr2h,f,c
  5405  001CFA  06DE               	decf	postinc2,f,c
  5406  001CFC  0E00               	movlw	0
  5407  001CFE  5ADD               	subwfb	postdec2,f,c
  5408  001D00                     l2023:
  5409                           
  5410                           ;relogio.c: 78: }
  5411                           ;relogio.c: 80: if(Despertador->hora>23){
  5412  001D00  EE20 F004          	lfsr	2,4
  5413  001D04  500F               	movf	controla_despertador@Despertador,w,c
  5414  001D06  26D9               	addwf	fsr2l,f,c
  5415  001D08  5010               	movf	controla_despertador@Despertador+1,w,c
  5416  001D0A  22DA               	addwfc	fsr2h,f,c
  5417  001D0C  0E01               	movlw	1
  5418  001D0E  BEDB               	btfsc	plusw2,7,c
  5419  001D10  D011               	goto	l90
  5420  001D12  0E01               	movlw	1
  5421  001D14  50DB               	movf	plusw2,w,c
  5422  001D16  E104               	bnz	u1560
  5423  001D18  0E18               	movlw	24
  5424  001D1A  5CDE               	subwf	postinc2,w,c
  5425  001D1C  A0D8               	btfss	status,0,c
  5426  001D1E  D00A               	goto	l90
  5427  001D20                     u1560:
  5428                           
  5429                           ;relogio.c: 81: Despertador->hora=0;
  5430  001D20  EE20 F004          	lfsr	2,4
  5431  001D24  500F               	movf	controla_despertador@Despertador,w,c
  5432  001D26  26D9               	addwf	fsr2l,f,c
  5433  001D28  5010               	movf	controla_despertador@Despertador+1,w,c
  5434  001D2A  22DA               	addwfc	fsr2h,f,c
  5435  001D2C  0E00               	movlw	0
  5436  001D2E  6EDE               	movwf	postinc2,c
  5437  001D30  0E00               	movlw	0
  5438  001D32  6EDD               	movwf	postdec2,c
  5439  001D34                     l90:
  5440                           
  5441                           ;relogio.c: 82: }
  5442                           ;relogio.c: 83: if(Despertador->hora<0){
  5443  001D34  EE20 F004          	lfsr	2,4
  5444  001D38  500F               	movf	controla_despertador@Despertador,w,c
  5445  001D3A  26D9               	addwf	fsr2l,f,c
  5446  001D3C  5010               	movf	controla_despertador@Despertador+1,w,c
  5447  001D3E  22DA               	addwfc	fsr2h,f,c
  5448  001D40  0E01               	movlw	1
  5449  001D42  AEDB               	btfss	plusw2,7,c
  5450  001D44  0012               	return	
  5451                           
  5452                           ;relogio.c: 84: Despertador->hora=23;
  5453  001D46  EE20 F004          	lfsr	2,4
  5454  001D4A  500F               	movf	controla_despertador@Despertador,w,c
  5455  001D4C  26D9               	addwf	fsr2l,f,c
  5456  001D4E  5010               	movf	controla_despertador@Despertador+1,w,c
  5457  001D50  22DA               	addwfc	fsr2h,f,c
  5458  001D52  0E17               	movlw	23
  5459  001D54  6EDE               	movwf	postinc2,c
  5460  001D56  0E00               	movlw	0
  5461  001D58  6EDD               	movwf	postdec2,c
  5462  001D5A  0012               	return	
  5463  001D5C                     __end_of_controla_despertador:
  5464                           	opt stack 0
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           prodh	equ	0xFF4
  5470                           prodl	equ	0xFF3
  5471                           intcon	equ	0xFF2
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           indf1	equ	0xFE7
  5475                           postinc1	equ	0xFE6
  5476                           postdec1	equ	0xFE5
  5477                           fsr1h	equ	0xFE2
  5478                           fsr1l	equ	0xFE1
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           plusw2	equ	0xFDB
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _pic_isr *****************
  5488 ;; Defined at:
  5489 ;;		line 125 in file "exercicio_PIC_8_display_LCD.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5505 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5506 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5507 ;;Total ram usage:       14 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		Interrupt level 2
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	intcode
  5517  000008                     __pintcode:
  5518                           	opt stack 0
  5519  000008                     _pic_isr:
  5520                           	opt stack 25
  5521                           
  5522                           ;incstack = 0
  5523  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5524  00000A  ED43  F00F         	call	int_func,f	;refresh shadow registers
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           intcon	equ	0xFF2
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           indf1	equ	0xFE7
  5535                           postinc1	equ	0xFE6
  5536                           postdec1	equ	0xFE5
  5537                           fsr1h	equ	0xFE2
  5538                           fsr1l	equ	0xFE1
  5539                           indf2	equ	0xFDF
  5540                           postinc2	equ	0xFDE
  5541                           postdec2	equ	0xFDD
  5542                           plusw2	equ	0xFDB
  5543                           fsr2h	equ	0xFDA
  5544                           fsr2l	equ	0xFD9
  5545                           status	equ	0xFD8
  5546                           
  5547                           	psect	intcode_body
  5548  001E86                     __pintcode_body:
  5549                           	opt stack 25
  5550  001E86                     int_func:
  5551                           	opt stack 25
  5552  001E86  0006               	pop		; remove dummy address from shadow register refresh
  5553  001E88  CFFA F001          	movff	pclath,??_pic_isr
  5554  001E8C  CFFB F002          	movff	pclatu,??_pic_isr+1
  5555  001E90  CFE9 F003          	movff	fsr0l,??_pic_isr+2
  5556  001E94  CFEA F004          	movff	fsr0h,??_pic_isr+3
  5557  001E98  CFE1 F005          	movff	fsr1l,??_pic_isr+4
  5558  001E9C  CFE2 F006          	movff	fsr1h,??_pic_isr+5
  5559  001EA0  CFD9 F007          	movff	fsr2l,??_pic_isr+6
  5560  001EA4  CFDA F008          	movff	fsr2h,??_pic_isr+7
  5561  001EA8  CFF3 F009          	movff	prodl,??_pic_isr+8
  5562  001EAC  CFF4 F00A          	movff	prodh,??_pic_isr+9
  5563  001EB0  CFF6 F00B          	movff	tblptrl,??_pic_isr+10
  5564  001EB4  CFF7 F00C          	movff	tblptrh,??_pic_isr+11
  5565  001EB8  CFF8 F00D          	movff	tblptru,??_pic_isr+12
  5566  001EBC  CFF5 F00E          	movff	tablat,??_pic_isr+13
  5567                           
  5568                           ;exercicio_PIC_8_display_LCD.c: 127: if(TMR0IF){
  5569  001EC0  A4F2               	btfss	intcon,2,c	;volatile
  5570  001EC2  D009               	goto	i2l1847
  5571                           
  5572                           ;exercicio_PIC_8_display_LCD.c: 128: TMR0=2535;
  5573  001EC4  0E09               	movlw	9
  5574  001EC6  6ED7               	movwf	4055,c	;volatile
  5575  001EC8  0EE7               	movlw	231
  5576  001ECA  6ED6               	movwf	4054,c	;volatile
  5577                           
  5578                           ;exercicio_PIC_8_display_LCD.c: 129: INTCONbits.TMR0IF=0;
  5579  001ECC  94F2               	bcf	intcon,2,c	;volatile
  5580                           
  5581                           ;exercicio_PIC_8_display_LCD.c: 130: contador++;
  5582  001ECE  4A39               	infsnz	_contador,f,c
  5583  001ED0  2A3A               	incf	_contador+1,f,c
  5584                           
  5585                           ;exercicio_PIC_8_display_LCD.c: 131: flag_time=0;
  5586  001ED2  0E00               	movlw	0
  5587  001ED4  6E3E               	movwf	_flag_time,c
  5588  001ED6                     i2l1847:
  5589                           
  5590                           ;exercicio_PIC_8_display_LCD.c: 132: }
  5591                           ;exercicio_PIC_8_display_LCD.c: 134: if(contador>0){
  5592  001ED6  BE3A               	btfsc	_contador+1,7,c
  5593  001ED8  D00B               	goto	i2l66
  5594  001EDA  503A               	movf	_contador+1,w,c
  5595  001EDC  E103               	bnz	i2u143_40
  5596  001EDE  0439               	decf	_contador,w,c
  5597  001EE0  A0D8               	btfss	status,0,c
  5598  001EE2  D006               	goto	i2l66
  5599  001EE4                     i2u143_40:
  5600                           
  5601                           ;exercicio_PIC_8_display_LCD.c: 135: flag_time=1;
  5602  001EE4  0E01               	movlw	1
  5603  001EE6  6E3E               	movwf	_flag_time,c
  5604                           
  5605                           ;exercicio_PIC_8_display_LCD.c: 136: contador=0;
  5606  001EE8  0E00               	movlw	0
  5607  001EEA  6E3A               	movwf	_contador+1,c
  5608  001EEC  0E00               	movlw	0
  5609  001EEE  6E39               	movwf	_contador,c
  5610  001EF0                     i2l66:
  5611  001EF0  C00E  FFF5         	movff	??_pic_isr+13,tablat
  5612  001EF4  C00D  FFF8         	movff	??_pic_isr+12,tblptru
  5613  001EF8  C00C  FFF7         	movff	??_pic_isr+11,tblptrh
  5614  001EFC  C00B  FFF6         	movff	??_pic_isr+10,tblptrl
  5615  001F00  C00A  FFF4         	movff	??_pic_isr+9,prodh
  5616  001F04  C009  FFF3         	movff	??_pic_isr+8,prodl
  5617  001F08  C008  FFDA         	movff	??_pic_isr+7,fsr2h
  5618  001F0C  C007  FFD9         	movff	??_pic_isr+6,fsr2l
  5619  001F10  C006  FFE2         	movff	??_pic_isr+5,fsr1h
  5620  001F14  C005  FFE1         	movff	??_pic_isr+4,fsr1l
  5621  001F18  C004  FFEA         	movff	??_pic_isr+3,fsr0h
  5622  001F1C  C003  FFE9         	movff	??_pic_isr+2,fsr0l
  5623  001F20  C002  FFFB         	movff	??_pic_isr+1,pclatu
  5624  001F24  C001  FFFA         	movff	??_pic_isr,pclath
  5625  001F28  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5626  001F2A  0011               	retfie		f
  5627  001F2C                     __end_of_pic_isr:
  5628                           	opt stack 0
  5629                           pclatu	equ	0xFFB
  5630                           pclath	equ	0xFFA
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           postinc0	equ	0xFEE
  5639                           fsr0h	equ	0xFEA
  5640                           fsr0l	equ	0xFE9
  5641                           wreg	equ	0xFE8
  5642                           indf1	equ	0xFE7
  5643                           postinc1	equ	0xFE6
  5644                           postdec1	equ	0xFE5
  5645                           fsr1h	equ	0xFE2
  5646                           fsr1l	equ	0xFE1
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           plusw2	equ	0xFDB
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           pclatu	equ	0xFFB
  5655                           pclath	equ	0xFFA
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           intcon	equ	0xFF2
  5663                           postinc0	equ	0xFEE
  5664                           fsr0h	equ	0xFEA
  5665                           fsr0l	equ	0xFE9
  5666                           wreg	equ	0xFE8
  5667                           indf1	equ	0xFE7
  5668                           postinc1	equ	0xFE6
  5669                           postdec1	equ	0xFE5
  5670                           fsr1h	equ	0xFE2
  5671                           fsr1l	equ	0xFE1
  5672                           indf2	equ	0xFDF
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           plusw2	equ	0xFDB
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680                           	psect	rparam
  5681  0000                     pclatu	equ	0xFFB
  5682                           pclath	equ	0xFFA
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           postinc0	equ	0xFEE
  5691                           fsr0h	equ	0xFEA
  5692                           fsr0l	equ	0xFE9
  5693                           wreg	equ	0xFE8
  5694                           indf1	equ	0xFE7
  5695                           postinc1	equ	0xFE6
  5696                           postdec1	equ	0xFE5
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           indf2	equ	0xFDF
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           plusw2	equ	0xFDB
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707                           	psect	temp
  5708  000051                     btemp:
  5709                           	opt stack 0
  5710  000051                     	ds	1
  5711  0000                     int$flags	set	btemp
  5712                           pclatu	equ	0xFFB
  5713                           pclath	equ	0xFFA
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           prodh	equ	0xFF4
  5719                           prodl	equ	0xFF3
  5720                           intcon	equ	0xFF2
  5721                           postinc0	equ	0xFEE
  5722                           fsr0h	equ	0xFEA
  5723                           fsr0l	equ	0xFE9
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postinc1	equ	0xFE6
  5727                           postdec1	equ	0xFE5
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           plusw2	equ	0xFDB
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    10
    Data        26
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      80
    BANK0           160     48      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), exibir_lcd@str(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[21]), STR_1(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> exibir_lcd@str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    checa_botao@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    checa_botao@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    checa_botao@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    exibir_lcd@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    exibir_lcd@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    exibir_lcd@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    controla_despertador@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    tratar_relogio@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_exibir_lcd
    _pisca_cursor->_SetDDRamAddr
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _exibir_lcd->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    ___awdiv->___awmod
    _DelayFor18TCY->_Delay10TCYx
    _checa_botao->_controla_despertador

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11085
                                             46 BANK0      2     2      0
                       _WriteCmdXLCD
                        _checa_botao
                         _exibir_lcd
                          _init_XLCD
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                      11     7      4     986
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          48    42      6    7769
                                             50 COMRAM     2     2      0
                                              0 BANK0     46    40      6
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    17     16    1438
                                             26 COMRAM    24     8     16
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     389
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1988
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1992
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                         10     4      6    1904
                                             18 COMRAM    10     4      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (2) _controla_despertador                                 4     2      2     480
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _pic_isr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _checa_botao
     _controla_despertador
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      4A       5       46.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      20        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 09 15:30:21 2019

                             l71 166A                               l72 169E  
                             l81 193C                               l90 1D34  
                             l75 174E                               l86 1C5E  
                             l87 1C92                               l79 188E  
                   ___awdiv@sign 001A    __size_of_controla_despertador 0140  
                            l213 0F6E                              l207 0F0C  
                            l162 0BB4                              l158 0884  
                            l183 0BB0                              l186 0F10  
                            l276 22E2                              l800 21FC  
                            l790 2168            __size_of_WriteCmdXLCD 003E  
                   ___awmod@sign 0014                              wreg 000FE8  
                     _Calendario 003F                     __CFG_WDT$OFF 000000  
                           l1007 2346                             l2003 21F2  
                           l2023 1D00                             l2017 1CD0  
                           l2121 1B7A                             l2107 1B4A  
                           l2301 0A8E                             l2221 20A2  
                           l2213 2082                             l2205 2068  
                           l2109 1B4E                             l2061 1F7E  
                           l2311 0AEA                             l2215 208A  
                           l2151 20F8                             l2135 1BEE  
                           l2127 1B96                             l2055 1F64  
                           l2305 0AAA                             l2161 1FE4  
                           l2217 208E                             l2225 20AC  
                           l2209 2074                             l2145 20C6  
                           l2129 1B9C                             l2137 1BF6  
                           l2073 1FAE                             l2065 1F8E  
                           l2057 1F6E                             l2411 0F00  
                           l2403 0EA2                             l2331 0BA4  
                           l2323 0B4E                             l2315 0B04  
                           l2251 08A0                             l2139 1C0E  
                           l2091 1AF8                             l1099 2330  
                           l2235 22FC                             l2421 0F4E  
                           l2341 0C16                             l2261 08FA  
                           l2173 200A                             l2229 20BA  
                           l2085 1ADE                             l2077 1FBE  
                           l2069 1F9E                             l2407 0EE4  
                           l2327 0B88                             l2319 0B36  
                           l2247 0888                             l2175 2012  
                           l2167 1FF4                             l2361 0CE0  
                           l2353 0C82                             l2345 0C30  
                           l2281 09B4                             l2273 095E  
                           l2265 0914                             l2193 204A  
                           l2185 2032                             l2177 2016  
                           l2097 1B22                             l2443 170C  
                           l2381 0DD2                             l2373 0D74  
                           l2365 0D1A                             l2357 0CC4  
                           l2349 0C6A                             l2293 0A38  
                           l2285 09E6                             l2277 0998  
                           l2269 0946                             l2189 203C  
                           l2541 1DB0                             l2533 1D90  
                           l2525 1D72                             l2461 1848  
                           l2437 16DC                             l2391 0E36  
                           l2471 1908                             l2455 17E6  
                           l2377 0D90                             l2369 0D32  
                           l2385 0DEE                             l2297 0A54  
                           l2289 09FE                             l2561 1E00  
                           l2553 1DE0                             l2545 1DC0  
                           l2537 1DA0                             l2529 1D80  
                           l2465 18AC                             l2457 1800  
                           l2449 1782                             l2801 1ABC  
                           l2395 0E50                             l2707 13D0  
                           l2565 1E10                             l2557 1DF0  
                           l2549 1DD0                             l2399 0E8A  
                           l1855 2356                             l2591 1E74  
                           l2583 1E54                             l2575 1E36  
                           l2569 1E20                             l2587 1E64  
                           l2579 1E44                             l2763 19E0  
                           l1975 2136                             l1977 213E  
                           l1987 215E                             l1979 2142  
                           l1995 21D2                             l2795 1AA6  
                           l2787 1A78                             l1997 21DA  
                           l1999 21DE                             l2799 1ABA  
                           STR_1 0822                             STR_2 0838  
                           STR_3 080B                             STR_4 084D  
                           u3007 08AE                             u1520 1C3C  
                           u2400 0F5E                             u3017 0BC2  
                           u3027 0F1E                             u1540 1CAE  
                           u2510 1868                             u2430 1648  
                           u1455 2188                             u1560 1D20  
                           u2530 1928                             u2450 16BA  
                           u2380 0F3E                             u1740 20F0  
                           u1750 2118                             u2470 172C  
                           u1920 0898                             u1747 20E6  
                           u1757 210E                             u2957 1A5E  
                           u2967 2348                             u2977 2336  
                           u2987 2358                             u2997 086C  
                           i2l66 1EF0                             _TMR0 000FD6  
                           _main 1964           checa_botao@Despertador 0015  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0051           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                     ___param_bank 000000  
                    _Delay10TCYx 2354            tratar_relogio@Relogio 000F  
                   _WriteCmdXLCD 2206                      _Delay1KTCYx 2344  
                  ?_SetDDRamAddr 0001                            ?_main 0001  
                __end_of___awdiv 2054                  __end_of___awmod 20C4  
                ___awdiv@divisor 0017                  __end_of___lwdiv 2172  
                __end_of___lwmod 2206                  ___awdiv@counter 0019  
           __size_of_checa_botao 0716                            _PORTB 000F81  
                          _TRISB 000F93            __size_of_Delay10KTCYx 0016  
                __end_of_dpowers 080B                  __end_of_pic_isr 1F2C  
                          pclath 000FFA                            tablat 000FF5  
                          plusw2 000FDB                            status 000FD8  
                __end_of_sprintf 1C1C                  __initialization 2282  
                   __end_of_main 1AD4                 __end_of_BusyXLCD 22F6  
                 _tratar_relogio 1616                     _Delay10KTCYx 232E  
          __size_of_DelayPORXLCD 0008                   ??_SetDDRamAddr 0010  
               __end_of_OpenXLCD 1FD0                           ??_main 008E  
                  __activetblptr 000002                    _WriteDataXLCD 2244  
                    _Despertador 0045                 ___awdiv@dividend 0015  
                         i2l1847 1ED6                           _TMR0IF 007F92  
                   _DelayPORXLCD 2364           __end_of_tratar_relogio 1964  
                    exibir_lcd@a 0082                      exibir_lcd@b 0084  
                    exibir_lcd@c 0086                      exibir_lcd@d 0088  
                    exibir_lcd@e 008A                      exibir_lcd@f 008C  
                    exibir_lcd@g 0076                      exibir_lcd@h 0078  
                    exibir_lcd@i 007A                      exibir_lcd@j 007C  
                    exibir_lcd@k 007E                      exibir_lcd@l 0080  
                      ??___awdiv 0019                        ??___awmod 0013  
                      ??___lwdiv 0013                        ??___lwmod 001A  
                         _cursor 0037                           clear_0 22A8  
               ___awdiv@quotient 001B                  ___awmod@divisor 0011  
                ___awmod@counter 0013                   ?_WriteDataXLCD 0001  
          exibir_lcd@Despertador 0062                        ??_pic_isr 0001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ??_sprintf 002B                       __accesstop 0060  
        __end_of__initialization 22AE                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001                  ?_tratar_relogio 000F  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2314  
         __size_of_DelayFor18TCY 0008                        ?_BusyXLCD 0001  
   __end_of_controla_despertador 1D5C                  WriteCmdXLCD@cmd 0010  
           __end_of_SetDDRamAddr 21C4               __size_of_init_XLCD 001E  
                      ?_OpenXLCD 0001                WriteDataXLCD@data 0010  
                   ?_Delay10TCYx 0001                    ?_pisca_cursor 0001  
                ??_WriteDataXLCD 0010                     ?_Delay1KTCYx 0001  
             __size_of_putrsXLCD 005C                       ??_BusyXLCD 0010  
                     ??_OpenXLCD 0014                          __Hparam 0000  
                        _Relogio 004B                          __Lparam 0000  
                        ___awdiv 1FD0                    _DelayFor18TCY 236C  
                        ___awmod 2054                   ??_pisca_cursor 0014  
                     _exibir_lcd 0F74                          ___lwdiv 2120  
                        ___lwmod 21C4                     __psmallconst 0800  
                  ??_checa_botao 0019                          __pcinit 2282  
                putrsXLCD@buffer 0011                  Delay10TCYx@unit 000F  
                        __ramtop 0800                          __ptext0 1964  
                        __ptext1 1616                          __ptext2 1D5C  
                        __ptext3 22F6                          __ptext4 1F2C  
                        __ptext5 2206                          __ptext6 2364  
                        __ptext7 2344                          __ptext8 232E  
                        __ptext9 0F74                __end_of_init_XLCD 2314  
                      _T0CONbits 000FD5                          _dpowers 0801  
                        _pic_isr 0008                 ___awmod@dividend 000F  
                        _sprintf 1AD4                   __pintcode_body 1E86  
           end_of_initialization 22AE                    __Lmediumconst 0000  
                        int_func 1E86         tratar_relogio@Calendario 0011  
                 ?_DelayFor18TCY 0001                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
              __end_of_putrsXLCD 2120             _controla_despertador 1C1C  
                      _PORTAbits 000F80                        _PORTDbits 000F83  
controla_despertador@Despertador 000F                        _TRISAbits 000F92  
                      _TRISBbits 000F93              __end_of_checa_botao 0F74  
                      _TRISDbits 000F95            __size_of_SetDDRamAddr 0052  
             checa_botao@Relogio 0013                 ??_tratar_relogio 0013  
                    ?_exibir_lcd 0060             __size_of_Delay10TCYx 0010  
          ?_controla_despertador 000F                     _SetDDRamAddr 2172  
           __size_of_Delay1KTCYx 0010             exibir_lcd@Calendario 0064  
             SetDDRamAddr@DDaddr 0013              start_initialization 2282  
           __end_of_pisca_cursor 1E86                __size_of_BusyXLCD 003A  
                ??_DelayFor18TCY 0010                __size_of_OpenXLCD 00A4  
                  ?_WriteCmdXLCD 0001                      __pdataBANK0 0090  
                    _checa_botao 085E                      __pbssCOMRAM 0035  
                  __pcstackBANK0 0060                  Delay1KTCYx@unit 000F  
            __size_of_exibir_lcd 06A2                      sprintf@flag 002E  
                    sprintf@prec 002F                 ___lwdiv@dividend 000F  
                      __pintcode 0008                   ??_WriteCmdXLCD 0010  
                       ?___awdiv 0015                         ?___awmod 000F  
                  ?_Delay10KTCYx 0001                        _flag_time 003E  
                       ?___lwdiv 000F           ??_controla_despertador 0011  
                       ?___lwmod 0016                        _despertar 003D  
          __end_of_WriteDataXLCD 2282                      __smallconst 0800  
                       ?_pic_isr 0001                        _init_XLCD 22F6  
               ___lwdiv@quotient 0013                         ?_sprintf 001B  
                       _LATBbits 000F8A                    ?_DelayPORXLCD 0001  
                       i2u143_40 1EE4                  OpenXLCD@lcdtype 0014  
                 ??_Delay10KTCYx 000F                        _putrsXLCD 20C4  
          __size_of_pisca_cursor 012A                 Delay10KTCYx@unit 0010  
                     ?_init_XLCD 0001                        copy_data0 2296  
                       _BusyXLCD 22BC                   ??_DelayPORXLCD 0010  
                       _OpenXLCD 1F2C                         __Hrparam 0000  
                       __Lrparam 0000                    exibir_lcd@str 0066  
                   ??_exibir_lcd 0033                 __size_of___awdiv 0084  
               __size_of___awmod 0070                     _pisca_cursor 1D5C  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                   _tela_exibida 003B                       sprintf@val 0030  
                     ?_putrsXLCD 0011                 __size_of_pic_isr 1F24  
                ___lwdiv@divisor 0011                  ___lwdiv@counter 0015  
                       __ptext10 1AD4                         __ptext11 21C4  
                       __ptext20 2354                         __ptext12 2120  
                       __ptext21 085E                         __ptext13 20C4  
                       __ptext22 1C1C                         __ptext14 2244  
                       __ptext15 22BC                         __ptext16 2054  
                       __ptext17 1FD0                         __ptext18 2172  
                       __ptext19 236C                exibir_lcd@Relogio 0060  
           __end_of_WriteCmdXLCD 2244                         _contador 0039  
               __size_of_sprintf 0148               __end_of_exibir_lcd 1616  
                  __size_of_main 0170                    ??_Delay10TCYx 000F  
                       int$flags 0051                    ??_Delay1KTCYx 000F  
                   ?_checa_botao 0013                       _INTCONbits 000FF2  
                    _qtdDias_mes 0090                      ??_init_XLCD 0015  
           __end_of_Delay10KTCYx 2344                         intlevel2 0000  
                      sprintf@ap 002C                        sprintf@sp 001B  
               ___lwmod@dividend 0016            __end_of_DelayFor18TCY 2374  
        __size_of_tratar_relogio 034E              __end_of_Delay10TCYx 2364  
                       sprintf@c 0032                         sprintf@f 001D  
           __end_of_DelayPORXLCD 236C                      ??_putrsXLCD 0013  
                ___lwmod@divisor 0018              __end_of_Delay1KTCYx 2354  
                ___lwmod@counter 001A            checa_botao@Calendario 0017  
       _controle_tempo_despertar 0035  
