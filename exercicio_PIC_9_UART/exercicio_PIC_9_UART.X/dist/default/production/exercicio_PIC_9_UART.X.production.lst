

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Nov 12 21:36:40 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  002546                     __pidataBANK0:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _qtdDias_mes
    91  002546  0000               	dw	0
    92  002548  001F               	dw	31
    93  00254A  001C               	dw	28
    94  00254C  001F               	dw	31
    95  00254E  001E               	dw	30
    96  002550  001F               	dw	31
    97  002552  001E               	dw	30
    98  002554  001F               	dw	31
    99  002556  001F               	dw	31
   100  002558  001E               	dw	30
   101  00255A  001F               	dw	31
   102  00255C  001E               	dw	30
   103  00255E  001F               	dw	31
   104                           
   105                           	psect	smallconst
   106  000800                     __psmallconst:
   107                           	opt stack 0
   108  000800  00                 	db	0
   109  000801                     _dpowers:
   110                           	opt stack 0
   111  000801  0001               	dw	1
   112  000803  000A               	dw	10
   113  000805  0064               	dw	100
   114  000807  03E8               	dw	1000
   115  000809  2710               	dw	10000
   116  00080B                     __end_of_dpowers:
   117                           	opt stack 0
   118  0000                     _TMR0	set	4054
   119  0000                     _TRISBbits	set	3987
   120  0000                     _PORTB	set	3969
   121  0000                     _LATBbits	set	3978
   122  0000                     _PIR1bits	set	3998
   123  0000                     _TXSTA	set	4012
   124  0000                     _RCSTA	set	4011
   125  0000                     _TRISDbits	set	3989
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _INTCONbits	set	4082
   129  0000                     _T0CONbits	set	4053
   130  0000                     _PORTAbits	set	3968
   131  0000                     _TRISA	set	3986
   132  0000                     _TRISAbits	set	3986
   133  0000                     _ADCON1	set	4033
   134  0000                     _SPBRG	set	4015
   135  0000                     _PORTCbits	set	3970
   136  0000                     _RCREG	set	4014
   137  0000                     _TXREG	set	4013
   138  0000                     _PORTDbits	set	3971
   139  0000                     _TMR0IF	set	32658
   140  0000                     _PEIE	set	32662
   141  0000                     _RCIE	set	31981
   142  0000                     _RCIP	set	31997
   143  0000                     _RCIF	set	31989
   144  0000                     _TXIF	set	31988
   145  00080B                     STR_3:
   146  00080B  25                 	db	37
   147  00080C  64                 	db	100	;'d'
   148  00080D  25                 	db	37
   149  00080E  64                 	db	100	;'d'
   150  00080F  3A                 	db	58	;':'
   151  000810  25                 	db	37
   152  000811  64                 	db	100	;'d'
   153  000812  25                 	db	37
   154  000813  64                 	db	100	;'d'
   155  000814  3A                 	db	58	;':'
   156  000815  25                 	db	37
   157  000816  64                 	db	100	;'d'
   158  000817  25                 	db	37
   159  000818  64                 	db	100	;'d'
   160  000819  20                 	db	32
   161  00081A  20                 	db	32
   162  00081B  20                 	db	32
   163  00081C  20                 	db	32
   164  00081D  20                 	db	32
   165  00081E  20                 	db	32
   166  00081F  20                 	db	32
   167  000820  20                 	db	32
   168  000821  00                 	db	0
   169  000822                     STR_1:
   170  000822  48                 	db	72	;'H'
   171  000823  4F                 	db	79	;'O'
   172  000824  52                 	db	82	;'R'
   173  000825  41                 	db	65	;'A'
   174  000826  3A                 	db	58	;':'
   175  000827  20                 	db	32
   176  000828  25                 	db	37
   177  000829  64                 	db	100	;'d'
   178  00082A  25                 	db	37
   179  00082B  64                 	db	100	;'d'
   180  00082C  3A                 	db	58	;':'
   181  00082D  25                 	db	37
   182  00082E  64                 	db	100	;'d'
   183  00082F  25                 	db	37
   184  000830  64                 	db	100	;'d'
   185  000831  3A                 	db	58	;':'
   186  000832  25                 	db	37
   187  000833  64                 	db	100	;'d'
   188  000834  25                 	db	37
   189  000835  64                 	db	100	;'d'
   190  000836  20                 	db	32
   191  000837  00                 	db	0
   192  000838                     STR_2:
   193  000838  44                 	db	68	;'D'
   194  000839  41                 	db	65	;'A'
   195  00083A  54                 	db	84	;'T'
   196  00083B  41                 	db	65	;'A'
   197  00083C  3A                 	db	58	;':'
   198  00083D  20                 	db	32
   199  00083E  25                 	db	37
   200  00083F  64                 	db	100	;'d'
   201  000840  25                 	db	37
   202  000841  64                 	db	100	;'d'
   203  000842  3A                 	db	58	;':'
   204  000843  25                 	db	37
   205  000844  64                 	db	100	;'d'
   206  000845  25                 	db	37
   207  000846  64                 	db	100	;'d'
   208  000847  3A                 	db	58	;':'
   209  000848  25                 	db	37
   210  000849  64                 	db	100	;'d'
   211  00084A  25                 	db	37
   212  00084B  64                 	db	100	;'d'
   213  00084C  00                 	db	0
   214  00084D                     STR_6:
   215  00084D  25                 	db	37
   216  00084E  64                 	db	100	;'d'
   217  00084F  20                 	db	32
   218  000850  25                 	db	37
   219  000851  64                 	db	100	;'d'
   220  000852  20                 	db	32
   221  000853  25                 	db	37
   222  000854  64                 	db	100	;'d'
   223  000855  20                 	db	32
   224  000856  20                 	db	32
   225  000857  20                 	db	32
   226  000858  20                 	db	32
   227  000859  20                 	db	32
   228  00085A  20                 	db	32
   229  00085B  20                 	db	32
   230  00085C  20                 	db	32
   231  00085D  20                 	db	32
   232  00085E  20                 	db	32
   233  00085F  20                 	db	32
   234  000860  00                 	db	0
   235  000861                     STR_5:
   236  000861  53                 	db	83	;'S'
   237  000862  45                 	db	69	;'E'
   238  000863  52                 	db	82	;'R'
   239  000864  49                 	db	73	;'I'
   240  000865  41                 	db	65	;'A'
   241  000866  4C                 	db	76	;'L'
   242  000867  3A                 	db	58	;':'
   243  000868  20                 	db	32
   244  000869  20                 	db	32
   245  00086A  20                 	db	32
   246  00086B  20                 	db	32
   247  00086C  20                 	db	32
   248  00086D  20                 	db	32
   249  00086E  20                 	db	32
   250  00086F  20                 	db	32
   251  000870  20                 	db	32
   252  000871  00                 	db	0
   253  000872                     STR_4:
   254  000872  44                 	db	68	;'D'
   255  000873  45                 	db	69	;'E'
   256  000874  53                 	db	83	;'S'
   257  000875  50                 	db	80	;'P'
   258  000876  45                 	db	69	;'E'
   259  000877  52                 	db	82	;'R'
   260  000878  54                 	db	84	;'T'
   261  000879  41                 	db	65	;'A'
   262  00087A  44                 	db	68	;'D'
   263  00087B  4F                 	db	79	;'O'
   264  00087C  52                 	db	82	;'R'
   265  00087D  2E                 	db	46
   266  00087E  20                 	db	32
   267  00087F  20                 	db	32
   268  000880  00                 	db	0
   269                           
   270                           ; #config settings
   271  000881  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           	psect	cinit
   274  002300                     __pcinit:
   275                           	opt stack 0
   276  002300                     start_initialization:
   277                           	opt stack 0
   278  002300                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Initialize objects allocated to BANK0 (26 bytes)
   282                           ; load TBLPTR registers with __pidataBANK0
   283  002300  0E46               	movlw	low __pidataBANK0
   284  002302  6EF6               	movwf	tblptrl,c
   285  002304  0E25               	movlw	high __pidataBANK0
   286  002306  6EF7               	movwf	tblptrh,c
   287  002308  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   288  00230A  6EF8               	movwf	tblptru,c
   289  00230C  EE00  F0A3         	lfsr	0,__pdataBANK0
   290  002310  EE10 F01A          	lfsr	1,26
   291  002314                     copy_data0:
   292  002314  0009               	tblrd		*+
   293  002316  CFF5 FFEE          	movff	tablat,postinc0
   294  00231A  50E5               	movf	postdec1,w,c
   295  00231C  50E1               	movf	fsr1l,w,c
   296  00231E  E1FA               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to BANK0 (30 bytes)
   299  002320  EE00  F085         	lfsr	0,__pbssBANK0
   300  002324  0E1E               	movlw	30
   301  002326                     clear_0:
   302  002326  6AEE               	clrf	postinc0,c
   303  002328  06E8               	decf	wreg,f,c
   304  00232A  E1FD               	bnz	clear_0
   305                           
   306                           ; Clear objects allocated to COMRAM (33 bytes)
   307  00232C  EE00  F030         	lfsr	0,__pbssCOMRAM
   308  002330  0E21               	movlw	33
   309  002332                     clear_1:
   310  002332  6AEE               	clrf	postinc0,c
   311  002334  06E8               	decf	wreg,f,c
   312  002336  E1FD               	bnz	clear_1
   313  002338                     end_of_initialization:
   314                           	opt stack 0
   315  002338                     __end_of__initialization:
   316                           	opt stack 0
   317  002338  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318  00233A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319  00233C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   320  00233E  6EF8               	movwf	tblptru,c
   321  002340  0100               	movlb	0
   322  002342  EF5C  F00C         	goto	_main	;jump to C main() function
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	bssCOMRAM
   333  000030                     __pbssCOMRAM:
   334                           	opt stack 0
   335  000030                     _ESTADO_COMUNICACAO:
   336                           	opt stack 0
   337  000030                     	ds	2
   338  000032                     _numero_entrada_terminal:
   339                           	opt stack 0
   340  000032                     	ds	2
   341  000034                     _controle_tempo_despertar:
   342                           	opt stack 0
   343  000034                     	ds	2
   344  000036                     _cursor:
   345                           	opt stack 0
   346  000036                     	ds	2
   347  000038                     _contador:
   348                           	opt stack 0
   349  000038                     	ds	2
   350  00003A                     _tela_exibida:
   351                           	opt stack 0
   352  00003A                     	ds	2
   353  00003C                     _serial_data:
   354                           	opt stack 0
   355  00003C                     	ds	1
   356  00003D                     _despertar:
   357                           	opt stack 0
   358  00003D                     	ds	1
   359  00003E                     _flag_time:
   360                           	opt stack 0
   361  00003E                     	ds	1
   362  00003F                     _Calendario:
   363                           	opt stack 0
   364  00003F                     	ds	6
   365  000045                     _Despertador:
   366                           	opt stack 0
   367  000045                     	ds	6
   368  00004B                     _Relogio:
   369                           	opt stack 0
   370  00004B                     	ds	6
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	bssBANK0
   381  000085                     __pbssBANK0:
   382                           	opt stack 0
   383  000085                     _BUFF_RESP:
   384                           	opt stack 0
   385  000085                     	ds	7
   386  00008C                     _BUFF_COM:
   387                           	opt stack 0
   388  00008C                     	ds	7
   389  000093                     _str:
   390                           	opt stack 0
   391  000093                     	ds	16
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	dataBANK0
   402  0000A3                     __pdataBANK0:
   403                           	opt stack 0
   404  0000A3                     _qtdDias_mes:
   405                           	opt stack 0
   406  0000A3                     	ds	26
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	cstackBANK0
   417  000060                     __pcstackBANK0:
   418                           	opt stack 0
   419  000060                     sprintf@ap:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x0
   423  000060                     	ds	2
   424  000062                     sprintf@flag:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x2
   428  000062                     	ds	1
   429  000063                     sprintf@prec:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x3
   433  000063                     	ds	1
   434  000064                     sprintf@val:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  000064                     	ds	2
   439  000066                     sprintf@c:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x6
   443  000066                     	ds	1
   444  000067                     exibir_lcd@Relogio:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x7
   448  000067                     	ds	2
   449  000069                     exibir_lcd@Despertador:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x9
   453  000069                     	ds	2
   454  00006B                     exibir_lcd@Calendario:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xB
   458  00006B                     	ds	2
   459  00006D                     exibir_lcd@g:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xD
   463  00006D                     	ds	2
   464  00006F                     exibir_lcd@h:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0xF
   468  00006F                     	ds	2
   469  000071                     exibir_lcd@i:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x11
   473  000071                     	ds	2
   474  000073                     exibir_lcd@j:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x13
   478  000073                     	ds	2
   479  000075                     exibir_lcd@k:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x15
   483  000075                     	ds	2
   484  000077                     exibir_lcd@l:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x17
   488  000077                     	ds	2
   489  000079                     exibir_lcd@a:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x19
   493  000079                     	ds	2
   494  00007B                     exibir_lcd@b:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1B
   498  00007B                     	ds	2
   499  00007D                     exibir_lcd@c:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x1D
   503  00007D                     	ds	2
   504  00007F                     exibir_lcd@d:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1F
   508  00007F                     	ds	2
   509  000081                     exibir_lcd@e:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x21
   513  000081                     	ds	2
   514  000083                     exibir_lcd@f:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x23
   518  000083                     	ds	2
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           postdec1	equ	0xFE5
   526                           fsr1l	equ	0xFE1
   527                           
   528                           	psect	cstackCOMRAM
   529  000001                     __pcstackCOMRAM:
   530                           	opt stack 0
   531  000001                     ??_SerialRxPinInterrupt:
   532  000001                     
   533                           ; 2 bytes @ 0x0
   534  000001                     	ds	14
   535  00000F                     ??_Delay10KTCYx:
   536  00000F                     ??_trata_comando:
   537  00000F                     ?___awmod:
   538                           	opt stack 0
   539  00000F                     ?___lwdiv:
   540                           	opt stack 0
   541  00000F                     Delay10TCYx@unit:
   542                           	opt stack 0
   543  00000F                     Delay1KTCYx@unit:
   544                           	opt stack 0
   545  00000F                     tratar_relogio@Relogio:
   546                           	opt stack 0
   547  00000F                     controla_despertador@Despertador:
   548                           	opt stack 0
   549  00000F                     tx_data@cont:
   550                           	opt stack 0
   551  00000F                     ___awmod@dividend:
   552                           	opt stack 0
   553  00000F                     ___lwdiv@dividend:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xE
   557  00000F                     	ds	1
   558  000010                     ??_SetDDRamAddr:
   559  000010                     WriteCmdXLCD@cmd:
   560                           	opt stack 0
   561  000010                     WriteDataXLCD@data:
   562                           	opt stack 0
   563  000010                     Delay10KTCYx@unit:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0xF
   567  000010                     	ds	1
   568  000011                     ??_maquina_estado:
   569  000011                     tratar_relogio@Calendario:
   570                           	opt stack 0
   571  000011                     putrsXLCD@buffer:
   572                           	opt stack 0
   573  000011                     ___awmod@divisor:
   574                           	opt stack 0
   575  000011                     ___lwdiv@divisor:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x10
   579  000011                     	ds	2
   580  000013                     ??_tratar_relogio:
   581  000013                     SetDDRamAddr@DDaddr:
   582                           	opt stack 0
   583  000013                     ___awmod@counter:
   584                           	opt stack 0
   585  000013                     ___lwdiv@counter:
   586                           	opt stack 0
   587  000013                     incrementa_variavel@Relogio:
   588                           	opt stack 0
   589  000013                     decrementa_variavel@Relogio:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x12
   593  000013                     	ds	1
   594  000014                     OpenXLCD@lcdtype:
   595                           	opt stack 0
   596  000014                     ___awmod@sign:
   597                           	opt stack 0
   598  000014                     ___lwdiv@quotient:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x13
   602  000014                     	ds	1
   603  000015                     ?___awdiv:
   604                           	opt stack 0
   605  000015                     incrementa_variavel@Despertador:
   606                           	opt stack 0
   607  000015                     decrementa_variavel@Despertador:
   608                           	opt stack 0
   609  000015                     ___awdiv@dividend:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x14
   613  000015                     	ds	1
   614  000016                     ?___lwmod:
   615                           	opt stack 0
   616  000016                     ___lwmod@dividend:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x15
   620  000016                     	ds	1
   621  000017                     incrementa_variavel@Calendario:
   622                           	opt stack 0
   623  000017                     decrementa_variavel@Calendario:
   624                           	opt stack 0
   625  000017                     ___awdiv@divisor:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x16
   629  000017                     	ds	1
   630  000018                     ___lwmod@divisor:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x17
   634  000018                     	ds	1
   635  000019                     ??_incrementa_variavel:
   636  000019                     ??_decrementa_variavel:
   637  000019                     ___awdiv@counter:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  000019                     	ds	1
   642  00001A                     ___awdiv@sign:
   643                           	opt stack 0
   644  00001A                     ___lwmod@counter:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x19
   648  00001A                     	ds	1
   649  00001B                     ?_sprintf:
   650                           	opt stack 0
   651  00001B                     sprintf@sp:
   652                           	opt stack 0
   653  00001B                     ___awdiv@quotient:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x1A
   657  00001B                     	ds	2
   658  00001D                     checa_botao@Relogio:
   659                           	opt stack 0
   660  00001D                     sprintf@f:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x1C
   664  00001D                     	ds	2
   665  00001F                     checa_botao@Despertador:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x1E
   669  00001F                     	ds	2
   670  000021                     checa_botao@Calendario:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x20
   674  000021                     	ds	2
   675  000023                     ??_checa_botao:
   676                           
   677                           ; 1 bytes @ 0x22
   678  000023                     	ds	8
   679  00002B                     ??_sprintf:
   680                           
   681                           ; 1 bytes @ 0x2A
   682  00002B                     	ds	1
   683  00002C                     ??_exibir_lcd:
   684  00002C                     
   685                           ; 1 bytes @ 0x2B
   686  00002C                     	ds	2
   687  00002E                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x2D
   690  00002E                     	ds	2
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 30 in file "exercicio_PIC_9_UART.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   719 ;;      Params:         0       0       0       0       0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0
   721 ;;      Temps:          2       0       0       0       0       0       0       0       0
   722 ;;      Totals:         2       0       0       0       0       0       0       0       0
   723 ;;Total ram usage:        2 bytes
   724 ;; Hardware stack levels required when called:    8
   725 ;; This function calls:
   726 ;;		_WriteCmdXLCD
   727 ;;		_checa_botao
   728 ;;		_exibir_lcd
   729 ;;		_init_XLCD
   730 ;;		_maquina_estado
   731 ;;		_pisca_cursor
   732 ;;		_tratar_relogio
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  0018B8                     __ptext0:
   740                           	opt stack 0
   741  0018B8                     _main:
   742                           	opt stack 23
   743                           
   744                           ;exercicio_PIC_9_UART.c: 33: SPBRG = (((20000000/64)/9600)-1);
   745                           
   746                           ;incstack = 0
   747  0018B8  0E1F               	movlw	31
   748  0018BA  6EAF               	movwf	4015,c	;volatile
   749                           
   750                           ;exercicio_PIC_9_UART.c: 35: ADCON1 = 15;
   751  0018BC  0E0F               	movlw	15
   752  0018BE  6EC1               	movwf	4033,c	;volatile
   753                           
   754                           ;exercicio_PIC_9_UART.c: 36: TRISAbits.RA1 = 1;
   755  0018C0  8292               	bsf	3986,1,c	;volatile
   756                           
   757                           ;exercicio_PIC_9_UART.c: 37: TRISA = 1;
   758  0018C2  0E01               	movlw	1
   759  0018C4  6E92               	movwf	3986,c	;volatile
   760                           
   761                           ;exercicio_PIC_9_UART.c: 38: PORTAbits.AN1 = 0;
   762  0018C6  9280               	bcf	3968,1,c	;volatile
   763                           
   764                           ;exercicio_PIC_9_UART.c: 43: Relogio.segundo=0;
   765  0018C8  0E00               	movlw	0
   766  0018CA  6E4E               	movwf	_Relogio+3,c
   767  0018CC  0E00               	movlw	0
   768  0018CE  6E4D               	movwf	_Relogio+2,c
   769                           
   770                           ;exercicio_PIC_9_UART.c: 44: Relogio.minuto=0;
   771  0018D0  0E00               	movlw	0
   772  0018D2  6E4C               	movwf	_Relogio+1,c
   773  0018D4  0E00               	movlw	0
   774  0018D6  6E4B               	movwf	_Relogio,c
   775                           
   776                           ;exercicio_PIC_9_UART.c: 45: Relogio.hora=0;
   777  0018D8  0E00               	movlw	0
   778  0018DA  6E50               	movwf	_Relogio+5,c
   779  0018DC  0E00               	movlw	0
   780  0018DE  6E4F               	movwf	_Relogio+4,c
   781                           
   782                           ;exercicio_PIC_9_UART.c: 47: Despertador.segundo=5;
   783  0018E0  0E00               	movlw	0
   784  0018E2  6E48               	movwf	_Despertador+3,c
   785  0018E4  0E05               	movlw	5
   786  0018E6  6E47               	movwf	_Despertador+2,c
   787                           
   788                           ;exercicio_PIC_9_UART.c: 48: Despertador.minuto=0;
   789  0018E8  0E00               	movlw	0
   790  0018EA  6E46               	movwf	_Despertador+1,c
   791  0018EC  0E00               	movlw	0
   792  0018EE  6E45               	movwf	_Despertador,c
   793                           
   794                           ;exercicio_PIC_9_UART.c: 49: Despertador.hora=0;
   795  0018F0  0E00               	movlw	0
   796  0018F2  6E4A               	movwf	_Despertador+5,c
   797  0018F4  0E00               	movlw	0
   798  0018F6  6E49               	movwf	_Despertador+4,c
   799                           
   800                           ;exercicio_PIC_9_UART.c: 51: Calendario.dia=1;
   801  0018F8  0E00               	movlw	0
   802  0018FA  6E40               	movwf	_Calendario+1,c
   803  0018FC  0E01               	movlw	1
   804  0018FE  6E3F               	movwf	_Calendario,c
   805                           
   806                           ;exercicio_PIC_9_UART.c: 52: Calendario.mes=1;
   807  001900  0E00               	movlw	0
   808  001902  6E42               	movwf	_Calendario+3,c
   809  001904  0E01               	movlw	1
   810  001906  6E41               	movwf	_Calendario+2,c
   811                           
   812                           ;exercicio_PIC_9_UART.c: 53: Calendario.ano=19;
   813  001908  0E00               	movlw	0
   814  00190A  6E44               	movwf	_Calendario+5,c
   815  00190C  0E13               	movlw	19
   816  00190E  6E43               	movwf	_Calendario+4,c
   817                           
   818                           ;exercicio_PIC_9_UART.c: 55: T0CONbits.TMR0ON=1;
   819  001910  8ED5               	bsf	4053,7,c	;volatile
   820                           
   821                           ;exercicio_PIC_9_UART.c: 57: INTCONbits.TMR0IE=1;
   822  001912  8AF2               	bsf	intcon,5,c	;volatile
   823                           
   824                           ;exercicio_PIC_9_UART.c: 58: INTCONbits.TMR0IF=0;
   825  001914  94F2               	bcf	intcon,2,c	;volatile
   826                           
   827                           ;exercicio_PIC_9_UART.c: 61: T0CONbits.T08BIT=0;
   828  001916  9CD5               	bcf	4053,6,c	;volatile
   829                           
   830                           ;exercicio_PIC_9_UART.c: 62: T0CONbits.PSA=0;
   831  001918  96D5               	bcf	4053,3,c	;volatile
   832                           
   833                           ;exercicio_PIC_9_UART.c: 63: T0CONbits.T0PS0=1;
   834  00191A  80D5               	bsf	4053,0,c	;volatile
   835                           
   836                           ;exercicio_PIC_9_UART.c: 64: T0CONbits.T0PS1=0;
   837  00191C  92D5               	bcf	4053,1,c	;volatile
   838                           
   839                           ;exercicio_PIC_9_UART.c: 65: T0CONbits.T0PS2=1;
   840  00191E  84D5               	bsf	4053,2,c	;volatile
   841                           
   842                           ;exercicio_PIC_9_UART.c: 66: T0CONbits.T0CS=0;
   843  001920  9AD5               	bcf	4053,5,c	;volatile
   844                           
   845                           ;exercicio_PIC_9_UART.c: 68: TMR0=2535;
   846  001922  0E09               	movlw	9
   847  001924  6ED7               	movwf	4055,c	;volatile
   848  001926  0EE7               	movlw	231
   849  001928  6ED6               	movwf	4054,c	;volatile
   850                           
   851                           ;exercicio_PIC_9_UART.c: 70: T0CONbits.TMR0ON=1;
   852  00192A  8ED5               	bsf	4053,7,c	;volatile
   853                           
   854                           ;exercicio_PIC_9_UART.c: 73: INTCONbits.GIEH=1;
   855  00192C  8EF2               	bsf	intcon,7,c	;volatile
   856                           
   857                           ;exercicio_PIC_9_UART.c: 74: INTCONbits.GIEL=1;
   858  00192E  8CF2               	bsf	intcon,6,c	;volatile
   859                           
   860                           ;exercicio_PIC_9_UART.c: 76: init_XLCD();
   861  001930  EC94  F012         	call	_init_XLCD	;wreg free
   862                           
   863                           ;exercicio_PIC_9_UART.c: 81: TRISAbits.TRISA0=0;
   864  001934  9092               	bcf	3986,0,c	;volatile
   865                           
   866                           ;exercicio_PIC_9_UART.c: 82: TRISAbits.TRISA1=0;
   867  001936  9292               	bcf	3986,1,c	;volatile
   868                           
   869                           ;exercicio_PIC_9_UART.c: 83: TRISCbits.TRISC0=0;
   870  001938  9094               	bcf	3988,0,c	;volatile
   871                           
   872                           ;exercicio_PIC_9_UART.c: 86: TRISB=0x00;
   873  00193A  0E00               	movlw	0
   874  00193C  6E93               	movwf	3987,c	;volatile
   875                           
   876                           ;exercicio_PIC_9_UART.c: 89: TRISDbits.TRISD0=1;
   877  00193E  8095               	bsf	3989,0,c	;volatile
   878                           
   879                           ;exercicio_PIC_9_UART.c: 90: TRISDbits.TRISD1=1;
   880  001940  8295               	bsf	3989,1,c	;volatile
   881                           
   882                           ;exercicio_PIC_9_UART.c: 91: TRISDbits.TRISD2=1;
   883  001942  8495               	bsf	3989,2,c	;volatile
   884                           
   885                           ;exercicio_PIC_9_UART.c: 92: TRISDbits.TRISD3=1;
   886  001944  8695               	bsf	3989,3,c	;volatile
   887                           
   888                           ;exercicio_PIC_9_UART.c: 95: TRISCbits.RC6=0;
   889  001946  9C94               	bcf	3988,6,c	;volatile
   890                           
   891                           ;exercicio_PIC_9_UART.c: 96: TRISCbits.RC7=1;
   892  001948  8E94               	bsf	3988,7,c	;volatile
   893                           
   894                           ;exercicio_PIC_9_UART.c: 99: RCSTA = 0b10010000;
   895  00194A  0E90               	movlw	144
   896  00194C  6EAB               	movwf	4011,c	;volatile
   897                           
   898                           ;exercicio_PIC_9_UART.c: 100: TXSTA = 0b00100000;
   899  00194E  0E20               	movlw	32
   900  001950  6EAC               	movwf	4012,c	;volatile
   901                           
   902                           ;exercicio_PIC_9_UART.c: 103: RCIF = 0;
   903  001952  9A9E               	bcf	3998,5,c	;volatile
   904                           
   905                           ;exercicio_PIC_9_UART.c: 104: RCIP = 0;
   906  001954  9A9F               	bcf	3999,5,c	;volatile
   907                           
   908                           ;exercicio_PIC_9_UART.c: 105: RCIE = 1;
   909  001956  8A9D               	bsf	3997,5,c	;volatile
   910                           
   911                           ;exercicio_PIC_9_UART.c: 106: PEIE = 1;
   912  001958  8CF2               	bsf	intcon,6,c	;volatile
   913                           
   914                           ;exercicio_PIC_9_UART.c: 108: ESTADO_COMUNICACAO = '0';
   915  00195A  0E00               	movlw	0
   916  00195C  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
   917  00195E  0E30               	movlw	48
   918  001960  6E30               	movwf	_ESTADO_COMUNICACAO,c
   919  001962                     l3244:
   920                           
   921                           ;exercicio_PIC_9_UART.c: 114: maquina_estado();
   922  001962  EC25  F012         	call	_maquina_estado	;wreg free
   923                           
   924                           ;exercicio_PIC_9_UART.c: 116: checa_botao(&Relogio, &Despertador, &Calendario);
   925  001966  0E4B               	movlw	low _Relogio
   926  001968  6E1D               	movwf	checa_botao@Relogio,c
   927  00196A  0E00               	movlw	high _Relogio
   928  00196C  6E1E               	movwf	checa_botao@Relogio+1,c
   929  00196E  0E45               	movlw	low _Despertador
   930  001970  6E1F               	movwf	checa_botao@Despertador,c
   931  001972  0E00               	movlw	high _Despertador
   932  001974  6E20               	movwf	checa_botao@Despertador+1,c
   933  001976  0E3F               	movlw	low _Calendario
   934  001978  6E21               	movwf	checa_botao@Calendario,c
   935  00197A  0E00               	movlw	high _Calendario
   936  00197C  6E22               	movwf	checa_botao@Calendario+1,c
   937  00197E  EC8C  F00F         	call	_checa_botao	;wreg free
   938                           
   939                           ;exercicio_PIC_9_UART.c: 119: if(flag_time==1){
   940  001982  043E               	decf	_flag_time,w,c
   941  001984  A4D8               	btfss	status,2,c
   942  001986  D039               	goto	l3270
   943                           
   944                           ;exercicio_PIC_9_UART.c: 120: tratar_relogio(&Relogio, &Calendario);
   945  001988  0E4B               	movlw	low _Relogio
   946  00198A  6E0F               	movwf	tratar_relogio@Relogio,c
   947  00198C  0E00               	movlw	high _Relogio
   948  00198E  6E10               	movwf	tratar_relogio@Relogio+1,c
   949  001990  0E3F               	movlw	low _Calendario
   950  001992  6E11               	movwf	tratar_relogio@Calendario,c
   951  001994  0E00               	movlw	high _Calendario
   952  001996  6E12               	movwf	tratar_relogio@Calendario+1,c
   953  001998  EC99  F007         	call	_tratar_relogio	;wreg free
   954                           
   955                           ;exercicio_PIC_9_UART.c: 123: WriteCmdXLCD(0x0C);
   956  00199C  0E0C               	movlw	12
   957  00199E  EC06  F012         	call	_WriteCmdXLCD
   958                           
   959                           ;exercicio_PIC_9_UART.c: 124: exibir_lcd(&Relogio, &Despertador, &Calendario);
   960  0019A2  0E4B               	movlw	low _Relogio
   961  0019A4  0100               	movlb	0	; () banked
   962  0019A6  6F67               	movwf	exibir_lcd@Relogio& (0+255),b
   963  0019A8  0E00               	movlw	high _Relogio
   964  0019AA  0100               	movlb	0	; () banked
   965  0019AC  6F68               	movwf	(exibir_lcd@Relogio+1)& (0+255),b
   966  0019AE  0E45               	movlw	low _Despertador
   967  0019B0  0100               	movlb	0	; () banked
   968  0019B2  6F69               	movwf	exibir_lcd@Despertador& (0+255),b
   969  0019B4  0E00               	movlw	high _Despertador
   970  0019B6  0100               	movlb	0	; () banked
   971  0019B8  6F6A               	movwf	(exibir_lcd@Despertador+1)& (0+255),b
   972  0019BA  0E3F               	movlw	low _Calendario
   973  0019BC  0100               	movlb	0	; () banked
   974  0019BE  6F6B               	movwf	exibir_lcd@Calendario& (0+255),b
   975  0019C0  0E00               	movlw	high _Calendario
   976  0019C2  0100               	movlb	0	; () banked
   977  0019C4  6F6C               	movwf	(exibir_lcd@Calendario+1)& (0+255),b
   978  0019C6  EC41  F004         	call	_exibir_lcd	;wreg free
   979                           
   980                           ;exercicio_PIC_9_UART.c: 126: WriteCmdXLCD(0x0F);
   981  0019CA  0E0F               	movlw	15
   982  0019CC  EC06  F012         	call	_WriteCmdXLCD
   983                           
   984                           ;exercicio_PIC_9_UART.c: 128: pisca_cursor();
   985  0019D0  EC86  F00E         	call	_pisca_cursor	;wreg free
   986                           
   987                           ;exercicio_PIC_9_UART.c: 131: PORTAbits.RA0=1;
   988  0019D4  8080               	bsf	3968,0,c	;volatile
   989                           
   990                           ;exercicio_PIC_9_UART.c: 132: _delay((unsigned long)((70)*(20000000/4000.0)));
   991  0019D6  0E02               	movlw	2
   992  0019D8  6E2F               	movwf	(??_main+1)& (0+255),c
   993  0019DA  0EC7               	movlw	199
   994  0019DC  6E2E               	movwf	??_main& (0+255),c
   995  0019DE  0E88               	movlw	136
   996  0019E0                     u3257:
   997  0019E0  2EE8               	decfsz	wreg,f,c
   998  0019E2  D7FE               	bra	u3257
   999  0019E4  2E2E               	decfsz	??_main& (0+255),f,c
  1000  0019E6  D7FC               	bra	u3257
  1001  0019E8  2E2F               	decfsz	(??_main+1)& (0+255),f,c
  1002  0019EA  D7FA               	bra	u3257
  1003  0019EC  D000               	nop2	
  1004                           
  1005                           ;exercicio_PIC_9_UART.c: 133: PORTAbits.RA0=0;
  1006  0019EE  9080               	bcf	3968,0,c	;volatile
  1007                           
  1008                           ;exercicio_PIC_9_UART.c: 134: if(despertar) controle_tempo_despertar++;
  1009  0019F0  503D               	movf	_despertar,w,c
  1010  0019F2  B4D8               	btfsc	status,2,c
  1011  0019F4  D002               	goto	l3270
  1012  0019F6  4A34               	infsnz	_controle_tempo_despertar,f,c
  1013  0019F8  2A35               	incf	_controle_tempo_despertar+1,f,c
  1014  0019FA                     l3270:
  1015                           
  1016                           ;exercicio_PIC_9_UART.c: 135: }
  1017                           ;exercicio_PIC_9_UART.c: 138: if(Relogio.segundo==Despertador.segundo
  1018                           ;exercicio_PIC_9_UART.c: 139: && Relogio.minuto==Despertador.minuto
  1019                           ;exercicio_PIC_9_UART.c: 140: && Relogio.hora==Despertador.hora) despertar=1;
  1020  0019FA  5047               	movf	_Despertador+2,w,c
  1021  0019FC  184D               	xorwf	_Relogio+2,w,c
  1022  0019FE  E114               	bnz	l3278
  1023  001A00  5048               	movf	_Despertador+3,w,c
  1024  001A02  184E               	xorwf	_Relogio+3,w,c
  1025  001A04  A4D8               	btfss	status,2,c
  1026  001A06  D010               	goto	l3278
  1027  001A08  5045               	movf	_Despertador,w,c
  1028  001A0A  184B               	xorwf	_Relogio,w,c
  1029  001A0C  E10D               	bnz	l3278
  1030  001A0E  5046               	movf	_Despertador+1,w,c
  1031  001A10  184C               	xorwf	_Relogio+1,w,c
  1032  001A12  A4D8               	btfss	status,2,c
  1033  001A14  D009               	goto	l3278
  1034  001A16  5049               	movf	_Despertador+4,w,c
  1035  001A18  184F               	xorwf	_Relogio+4,w,c
  1036  001A1A  E106               	bnz	l3278
  1037  001A1C  504A               	movf	_Despertador+5,w,c
  1038  001A1E  1850               	xorwf	_Relogio+5,w,c
  1039  001A20  A4D8               	btfss	status,2,c
  1040  001A22  D002               	goto	l3278
  1041  001A24  0E01               	movlw	1
  1042  001A26  6E3D               	movwf	_despertar,c
  1043  001A28                     l3278:
  1044                           
  1045                           ;exercicio_PIC_9_UART.c: 142: if(despertar==1 && controle_tempo_despertar<10) PORTAbits.
      +                          RA1=1;
  1046  001A28  043D               	decf	_despertar,w,c
  1047  001A2A  A4D8               	btfss	status,2,c
  1048  001A2C  D00A               	goto	l325
  1049  001A2E  BE35               	btfsc	_controle_tempo_despertar+1,7,c
  1050  001A30  D006               	goto	l3282
  1051  001A32  5035               	movf	_controle_tempo_despertar+1,w,c
  1052  001A34  E106               	bnz	l325
  1053  001A36  0E0A               	movlw	10
  1054  001A38  5C34               	subwf	_controle_tempo_despertar,w,c
  1055  001A3A  B0D8               	btfsc	status,0,c
  1056  001A3C  D002               	goto	l325
  1057  001A3E                     l3282:
  1058  001A3E  8280               	bsf	3968,1,c	;volatile
  1059  001A40  D001               	goto	l3284
  1060  001A42                     l325:
  1061                           
  1062                           ;exercicio_PIC_9_UART.c: 143: else PORTAbits.RA1=0;
  1063  001A42  9280               	bcf	3968,1,c	;volatile
  1064  001A44                     l3284:
  1065                           
  1066                           ;exercicio_PIC_9_UART.c: 145: if(controle_tempo_despertar==10){
  1067  001A44  0E0A               	movlw	10
  1068  001A46  1834               	xorwf	_controle_tempo_despertar,w,c
  1069  001A48  1035               	iorwf	_controle_tempo_despertar+1,w,c
  1070  001A4A  A4D8               	btfss	status,2,c
  1071  001A4C  D78A               	goto	l3244
  1072                           
  1073                           ;exercicio_PIC_9_UART.c: 146: controle_tempo_despertar=0;
  1074  001A4E  0E00               	movlw	0
  1075  001A50  6E35               	movwf	_controle_tempo_despertar+1,c
  1076  001A52  0E00               	movlw	0
  1077  001A54  6E34               	movwf	_controle_tempo_despertar,c
  1078                           
  1079                           ;exercicio_PIC_9_UART.c: 147: despertar=0;
  1080  001A56  0E00               	movlw	0
  1081  001A58  6E3D               	movwf	_despertar,c
  1082  001A5A  D783               	goto	l3244
  1083  001A5C                     __end_of_main:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           intcon	equ	0xFF2
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postdec1	equ	0xFE5
  1093                           fsr1l	equ	0xFE1
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _tratar_relogio *****************
  1097 ;; Defined at:
  1098 ;;		line 3 in file "relogio.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  Relogio         2   14[COMRAM] PTR struct .
  1101 ;;		 -> Relogio(6), 
  1102 ;;  Calendario      2   16[COMRAM] PTR struct .
  1103 ;;		 -> Calendario(6), 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1115 ;;      Params:         4       0       0       0       0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1117 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1118 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1119 ;;Total ram usage:       11 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text1
  1130  000F32                     __ptext1:
  1131                           	opt stack 0
  1132  000F32                     _tratar_relogio:
  1133                           	opt stack 29
  1134                           
  1135                           ;relogio.c: 5: Relogio->segundo++;
  1136                           
  1137                           ;incstack = 0
  1138  000F32  EE20 F002          	lfsr	2,2
  1139  000F36  500F               	movf	tratar_relogio@Relogio,w,c
  1140  000F38  26D9               	addwf	fsr2l,f,c
  1141  000F3A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1142  000F3C  22DA               	addwfc	fsr2h,f,c
  1143  000F3E  2ADE               	incf	postinc2,f,c
  1144  000F40  0E00               	movlw	0
  1145  000F42  22DD               	addwfc	postdec2,f,c
  1146                           
  1147                           ;relogio.c: 7: if(Relogio->segundo>59){
  1148  000F44  EE20 F002          	lfsr	2,2
  1149  000F48  500F               	movf	tratar_relogio@Relogio,w,c
  1150  000F4A  26D9               	addwf	fsr2l,f,c
  1151  000F4C  5010               	movf	tratar_relogio@Relogio+1,w,c
  1152  000F4E  22DA               	addwfc	fsr2h,f,c
  1153  000F50  0E01               	movlw	1
  1154  000F52  BEDB               	btfsc	plusw2,7,c
  1155  000F54  D018               	goto	l168
  1156  000F56  0E01               	movlw	1
  1157  000F58  50DB               	movf	plusw2,w,c
  1158  000F5A  E104               	bnz	u2750
  1159  000F5C  0E3C               	movlw	60
  1160  000F5E  5CDE               	subwf	postinc2,w,c
  1161  000F60  A0D8               	btfss	status,0,c
  1162  000F62  D011               	goto	l168
  1163  000F64                     u2750:
  1164                           
  1165                           ;relogio.c: 8: Relogio->minuto++;
  1166  000F64  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1167  000F68  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1168  000F6C  2ADE               	incf	postinc2,f,c
  1169  000F6E  0E00               	movlw	0
  1170  000F70  22DD               	addwfc	postdec2,f,c
  1171                           
  1172                           ;relogio.c: 9: Relogio->segundo=0;
  1173  000F72  EE20 F002          	lfsr	2,2
  1174  000F76  500F               	movf	tratar_relogio@Relogio,w,c
  1175  000F78  26D9               	addwf	fsr2l,f,c
  1176  000F7A  5010               	movf	tratar_relogio@Relogio+1,w,c
  1177  000F7C  22DA               	addwfc	fsr2h,f,c
  1178  000F7E  0E00               	movlw	0
  1179  000F80  6EDE               	movwf	postinc2,c
  1180  000F82  0E00               	movlw	0
  1181  000F84  6EDD               	movwf	postdec2,c
  1182  000F86                     l168:
  1183                           
  1184                           ;relogio.c: 10: }
  1185                           ;relogio.c: 11: if(Relogio->segundo<0){
  1186  000F86  EE20 F002          	lfsr	2,2
  1187  000F8A  500F               	movf	tratar_relogio@Relogio,w,c
  1188  000F8C  26D9               	addwf	fsr2l,f,c
  1189  000F8E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1190  000F90  22DA               	addwfc	fsr2h,f,c
  1191  000F92  0E01               	movlw	1
  1192  000F94  AEDB               	btfss	plusw2,7,c
  1193  000F96  D011               	goto	l169
  1194                           
  1195                           ;relogio.c: 12: Relogio->segundo=59;
  1196  000F98  EE20 F002          	lfsr	2,2
  1197  000F9C  500F               	movf	tratar_relogio@Relogio,w,c
  1198  000F9E  26D9               	addwf	fsr2l,f,c
  1199  000FA0  5010               	movf	tratar_relogio@Relogio+1,w,c
  1200  000FA2  22DA               	addwfc	fsr2h,f,c
  1201  000FA4  0E3B               	movlw	59
  1202  000FA6  6EDE               	movwf	postinc2,c
  1203  000FA8  0E00               	movlw	0
  1204  000FAA  6EDD               	movwf	postdec2,c
  1205                           
  1206                           ;relogio.c: 13: Relogio->minuto--;
  1207  000FAC  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1208  000FB0  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1209  000FB4  06DE               	decf	postinc2,f,c
  1210  000FB6  0E00               	movlw	0
  1211  000FB8  5ADD               	subwfb	postdec2,f,c
  1212  000FBA                     l169:
  1213                           
  1214                           ;relogio.c: 14: }
  1215                           ;relogio.c: 16: if(Relogio->minuto>59){
  1216  000FBA  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1217  000FBE  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1218  000FC2  0E01               	movlw	1
  1219  000FC4  BEDB               	btfsc	plusw2,7,c
  1220  000FC6  D018               	goto	l2810
  1221  000FC8  0E01               	movlw	1
  1222  000FCA  50DB               	movf	plusw2,w,c
  1223  000FCC  E104               	bnz	u2770
  1224  000FCE  0E3C               	movlw	60
  1225  000FD0  5CDE               	subwf	postinc2,w,c
  1226  000FD2  A0D8               	btfss	status,0,c
  1227  000FD4  D011               	goto	l2810
  1228  000FD6                     u2770:
  1229                           
  1230                           ;relogio.c: 17: Relogio->hora++;
  1231  000FD6  EE20 F004          	lfsr	2,4
  1232  000FDA  500F               	movf	tratar_relogio@Relogio,w,c
  1233  000FDC  26D9               	addwf	fsr2l,f,c
  1234  000FDE  5010               	movf	tratar_relogio@Relogio+1,w,c
  1235  000FE0  22DA               	addwfc	fsr2h,f,c
  1236  000FE2  2ADE               	incf	postinc2,f,c
  1237  000FE4  0E00               	movlw	0
  1238  000FE6  22DD               	addwfc	postdec2,f,c
  1239                           
  1240                           ;relogio.c: 18: Relogio->minuto=0;
  1241  000FE8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1242  000FEC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1243  000FF0  0E00               	movlw	0
  1244  000FF2  6EDE               	movwf	postinc2,c
  1245  000FF4  0E00               	movlw	0
  1246  000FF6  6EDD               	movwf	postdec2,c
  1247  000FF8                     l2810:
  1248                           
  1249                           ;relogio.c: 19: }
  1250                           ;relogio.c: 20: if(Relogio->minuto<0){
  1251  000FF8  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1252  000FFC  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1253  001000  0E01               	movlw	1
  1254  001002  AEDB               	btfss	plusw2,7,c
  1255  001004  D011               	goto	l2816
  1256                           
  1257                           ;relogio.c: 21: Relogio->minuto=59;
  1258  001006  C00F  FFD9         	movff	tratar_relogio@Relogio,fsr2l
  1259  00100A  C010  FFDA         	movff	tratar_relogio@Relogio+1,fsr2h
  1260  00100E  0E3B               	movlw	59
  1261  001010  6EDE               	movwf	postinc2,c
  1262  001012  0E00               	movlw	0
  1263  001014  6EDD               	movwf	postdec2,c
  1264                           
  1265                           ;relogio.c: 22: Relogio->hora--;
  1266  001016  EE20 F004          	lfsr	2,4
  1267  00101A  500F               	movf	tratar_relogio@Relogio,w,c
  1268  00101C  26D9               	addwf	fsr2l,f,c
  1269  00101E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1270  001020  22DA               	addwfc	fsr2h,f,c
  1271  001022  06DE               	decf	postinc2,f,c
  1272  001024  0E00               	movlw	0
  1273  001026  5ADD               	subwfb	postdec2,f,c
  1274  001028                     l2816:
  1275                           
  1276                           ;relogio.c: 23: }
  1277                           ;relogio.c: 25: if(Relogio->hora>23){
  1278  001028  EE20 F004          	lfsr	2,4
  1279  00102C  500F               	movf	tratar_relogio@Relogio,w,c
  1280  00102E  26D9               	addwf	fsr2l,f,c
  1281  001030  5010               	movf	tratar_relogio@Relogio+1,w,c
  1282  001032  22DA               	addwfc	fsr2h,f,c
  1283  001034  0E01               	movlw	1
  1284  001036  BEDB               	btfsc	plusw2,7,c
  1285  001038  D018               	goto	l172
  1286  00103A  0E01               	movlw	1
  1287  00103C  50DB               	movf	plusw2,w,c
  1288  00103E  E104               	bnz	u2790
  1289  001040  0E18               	movlw	24
  1290  001042  5CDE               	subwf	postinc2,w,c
  1291  001044  A0D8               	btfss	status,0,c
  1292  001046  D011               	goto	l172
  1293  001048                     u2790:
  1294                           
  1295                           ;relogio.c: 26: Calendario->dia++;
  1296  001048  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1297  00104C  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1298  001050  2ADE               	incf	postinc2,f,c
  1299  001052  0E00               	movlw	0
  1300  001054  22DD               	addwfc	postdec2,f,c
  1301                           
  1302                           ;relogio.c: 27: Relogio->hora=0;
  1303  001056  EE20 F004          	lfsr	2,4
  1304  00105A  500F               	movf	tratar_relogio@Relogio,w,c
  1305  00105C  26D9               	addwf	fsr2l,f,c
  1306  00105E  5010               	movf	tratar_relogio@Relogio+1,w,c
  1307  001060  22DA               	addwfc	fsr2h,f,c
  1308  001062  0E00               	movlw	0
  1309  001064  6EDE               	movwf	postinc2,c
  1310  001066  0E00               	movlw	0
  1311  001068  6EDD               	movwf	postdec2,c
  1312  00106A                     l172:
  1313                           
  1314                           ;relogio.c: 28: }
  1315                           ;relogio.c: 29: if(Relogio->hora<0){
  1316  00106A  EE20 F004          	lfsr	2,4
  1317  00106E  500F               	movf	tratar_relogio@Relogio,w,c
  1318  001070  26D9               	addwf	fsr2l,f,c
  1319  001072  5010               	movf	tratar_relogio@Relogio+1,w,c
  1320  001074  22DA               	addwfc	fsr2h,f,c
  1321  001076  0E01               	movlw	1
  1322  001078  AEDB               	btfss	plusw2,7,c
  1323  00107A  D011               	goto	l2822
  1324                           
  1325                           ;relogio.c: 30: Relogio->hora=23;
  1326  00107C  EE20 F004          	lfsr	2,4
  1327  001080  500F               	movf	tratar_relogio@Relogio,w,c
  1328  001082  26D9               	addwf	fsr2l,f,c
  1329  001084  5010               	movf	tratar_relogio@Relogio+1,w,c
  1330  001086  22DA               	addwfc	fsr2h,f,c
  1331  001088  0E17               	movlw	23
  1332  00108A  6EDE               	movwf	postinc2,c
  1333  00108C  0E00               	movlw	0
  1334  00108E  6EDD               	movwf	postdec2,c
  1335                           
  1336                           ;relogio.c: 31: Calendario->dia--;
  1337  001090  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1338  001094  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1339  001098  06DE               	decf	postinc2,f,c
  1340  00109A  0E00               	movlw	0
  1341  00109C  5ADD               	subwfb	postdec2,f,c
  1342  00109E                     l2822:
  1343                           
  1344                           ;relogio.c: 32: }
  1345                           ;relogio.c: 34: if(Calendario->dia>qtdDias_mes[Calendario->mes]){
  1346  00109E  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1347  0010A2  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1348  0010A6  EE10 F002          	lfsr	1,2
  1349  0010AA  5011               	movf	tratar_relogio@Calendario,w,c
  1350  0010AC  26E1               	addwf	fsr1l,f,c
  1351  0010AE  5012               	movf	tratar_relogio@Calendario+1,w,c
  1352  0010B0  22E2               	addwfc	fsr1h,f,c
  1353  0010B2  CFE6 F015          	movff	postinc1,??_tratar_relogio+2
  1354  0010B6  CFE5 F016          	movff	postdec1,??_tratar_relogio+3
  1355  0010BA  90D8               	bcf	status,0,c
  1356  0010BC  3615               	rlcf	??_tratar_relogio+2,f,c
  1357  0010BE  3616               	rlcf	??_tratar_relogio+3,f,c
  1358  0010C0  0EA3               	movlw	low _qtdDias_mes
  1359  0010C2  2415               	addwf	??_tratar_relogio+2,w,c
  1360  0010C4  6EE1               	movwf	fsr1l,c
  1361  0010C6  0E00               	movlw	high _qtdDias_mes
  1362  0010C8  2016               	addwfc	??_tratar_relogio+3,w,c
  1363  0010CA  6EE2               	movwf	fsr1h,c
  1364  0010CC  50DE               	movf	postinc2,w,c
  1365  0010CE  5CE6               	subwf	postinc1,w,c
  1366  0010D0  50E6               	movf	postinc1,w,c
  1367  0010D2  0A80               	xorlw	128
  1368  0010D4  6E19               	movwf	(??_tratar_relogio+6)& (0+255),c
  1369  0010D6  50DE               	movf	postinc2,w,c
  1370  0010D8  0A80               	xorlw	128
  1371  0010DA  5819               	subwfb	(??_tratar_relogio+6)& (0+255),w,c
  1372  0010DC  B0D8               	btfsc	status,0,c
  1373  0010DE  D011               	goto	l2828
  1374                           
  1375                           ;relogio.c: 35: Calendario->mes++;
  1376  0010E0  EE20 F002          	lfsr	2,2
  1377  0010E4  5011               	movf	tratar_relogio@Calendario,w,c
  1378  0010E6  26D9               	addwf	fsr2l,f,c
  1379  0010E8  5012               	movf	tratar_relogio@Calendario+1,w,c
  1380  0010EA  22DA               	addwfc	fsr2h,f,c
  1381  0010EC  2ADE               	incf	postinc2,f,c
  1382  0010EE  0E00               	movlw	0
  1383  0010F0  22DD               	addwfc	postdec2,f,c
  1384                           
  1385                           ;relogio.c: 36: Calendario->dia=1;
  1386  0010F2  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1387  0010F6  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1388  0010FA  0E01               	movlw	1
  1389  0010FC  6EDE               	movwf	postinc2,c
  1390  0010FE  0E00               	movlw	0
  1391  001100  6EDD               	movwf	postdec2,c
  1392  001102                     l2828:
  1393                           
  1394                           ;relogio.c: 37: }
  1395                           ;relogio.c: 38: if(Calendario->dia<1){
  1396  001102  C011  FFD9         	movff	tratar_relogio@Calendario,fsr2l
  1397  001106  C012  FFDA         	movff	tratar_relogio@Calendario+1,fsr2h
  1398  00110A  0E01               	movlw	1
  1399  00110C  BEDB               	btfsc	plusw2,7,c
  1400  00110E  D006               	goto	l2830
  1401  001110  0E01               	movlw	1
  1402  001112  50DB               	movf	plusw2,w,c
  1403  001114  E127               	bnz	l2834
  1404  001116  04DE               	decf	postinc2,w,c
  1405  001118  B0D8               	btfsc	status,0,c
  1406  00111A  D024               	goto	l2834
  1407  00111C                     l2830:
  1408                           
  1409                           ;relogio.c: 39: Calendario->mes--;
  1410  00111C  EE20 F002          	lfsr	2,2
  1411  001120  5011               	movf	tratar_relogio@Calendario,w,c
  1412  001122  26D9               	addwf	fsr2l,f,c
  1413  001124  5012               	movf	tratar_relogio@Calendario+1,w,c
  1414  001126  22DA               	addwfc	fsr2h,f,c
  1415  001128  06DE               	decf	postinc2,f,c
  1416  00112A  0E00               	movlw	0
  1417  00112C  5ADD               	subwfb	postdec2,f,c
  1418                           
  1419                           ;relogio.c: 40: Calendario->dia=qtdDias_mes[Calendario->mes];
  1420  00112E  EE20 F002          	lfsr	2,2
  1421  001132  5011               	movf	tratar_relogio@Calendario,w,c
  1422  001134  26D9               	addwf	fsr2l,f,c
  1423  001136  5012               	movf	tratar_relogio@Calendario+1,w,c
  1424  001138  22DA               	addwfc	fsr2h,f,c
  1425  00113A  CFDE F013          	movff	postinc2,??_tratar_relogio
  1426  00113E  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1427  001142  90D8               	bcf	status,0,c
  1428  001144  3613               	rlcf	??_tratar_relogio,f,c
  1429  001146  3614               	rlcf	??_tratar_relogio+1,f,c
  1430  001148  0EA3               	movlw	low _qtdDias_mes
  1431  00114A  2413               	addwf	??_tratar_relogio,w,c
  1432  00114C  6ED9               	movwf	fsr2l,c
  1433  00114E  0E00               	movlw	high _qtdDias_mes
  1434  001150  2014               	addwfc	??_tratar_relogio+1,w,c
  1435  001152  6EDA               	movwf	fsr2h,c
  1436  001154  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1437  001158  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1438  00115C  CFDE FFE6          	movff	postinc2,postinc1
  1439  001160  CFDD FFE5          	movff	postdec2,postdec1
  1440  001164                     l2834:
  1441                           
  1442                           ;relogio.c: 41: }
  1443                           ;relogio.c: 43: if(Calendario->mes>12){
  1444  001164  EE20 F002          	lfsr	2,2
  1445  001168  5011               	movf	tratar_relogio@Calendario,w,c
  1446  00116A  26D9               	addwf	fsr2l,f,c
  1447  00116C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1448  00116E  22DA               	addwfc	fsr2h,f,c
  1449  001170  0E01               	movlw	1
  1450  001172  BEDB               	btfsc	plusw2,7,c
  1451  001174  D01A               	goto	l176
  1452  001176  0E01               	movlw	1
  1453  001178  50DB               	movf	plusw2,w,c
  1454  00117A  E104               	bnz	u2830
  1455  00117C  0E0D               	movlw	13
  1456  00117E  5CDE               	subwf	postinc2,w,c
  1457  001180  A0D8               	btfss	status,0,c
  1458  001182  D013               	goto	l176
  1459  001184                     u2830:
  1460                           
  1461                           ;relogio.c: 44: Calendario->ano++;
  1462  001184  EE20 F004          	lfsr	2,4
  1463  001188  5011               	movf	tratar_relogio@Calendario,w,c
  1464  00118A  26D9               	addwf	fsr2l,f,c
  1465  00118C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1466  00118E  22DA               	addwfc	fsr2h,f,c
  1467  001190  2ADE               	incf	postinc2,f,c
  1468  001192  0E00               	movlw	0
  1469  001194  22DD               	addwfc	postdec2,f,c
  1470                           
  1471                           ;relogio.c: 45: Calendario->mes=1;
  1472  001196  EE20 F002          	lfsr	2,2
  1473  00119A  5011               	movf	tratar_relogio@Calendario,w,c
  1474  00119C  26D9               	addwf	fsr2l,f,c
  1475  00119E  5012               	movf	tratar_relogio@Calendario+1,w,c
  1476  0011A0  22DA               	addwfc	fsr2h,f,c
  1477  0011A2  0E01               	movlw	1
  1478  0011A4  6EDE               	movwf	postinc2,c
  1479  0011A6  0E00               	movlw	0
  1480  0011A8  6EDD               	movwf	postdec2,c
  1481  0011AA                     l176:
  1482                           
  1483                           ;relogio.c: 46: }
  1484                           ;relogio.c: 47: if(Calendario->mes<1){
  1485  0011AA  EE20 F002          	lfsr	2,2
  1486  0011AE  5011               	movf	tratar_relogio@Calendario,w,c
  1487  0011B0  26D9               	addwf	fsr2l,f,c
  1488  0011B2  5012               	movf	tratar_relogio@Calendario+1,w,c
  1489  0011B4  22DA               	addwfc	fsr2h,f,c
  1490  0011B6  0E01               	movlw	1
  1491  0011B8  BEDB               	btfsc	plusw2,7,c
  1492  0011BA  D006               	goto	l2838
  1493  0011BC  0E01               	movlw	1
  1494  0011BE  50DB               	movf	plusw2,w,c
  1495  0011C0  E131               	bnz	l2844
  1496  0011C2  04DE               	decf	postinc2,w,c
  1497  0011C4  B0D8               	btfsc	status,0,c
  1498  0011C6  D02E               	goto	l2844
  1499  0011C8                     l2838:
  1500                           
  1501                           ;relogio.c: 48: Calendario->mes=12;
  1502  0011C8  EE20 F002          	lfsr	2,2
  1503  0011CC  5011               	movf	tratar_relogio@Calendario,w,c
  1504  0011CE  26D9               	addwf	fsr2l,f,c
  1505  0011D0  5012               	movf	tratar_relogio@Calendario+1,w,c
  1506  0011D2  22DA               	addwfc	fsr2h,f,c
  1507  0011D4  0E0C               	movlw	12
  1508  0011D6  6EDE               	movwf	postinc2,c
  1509  0011D8  0E00               	movlw	0
  1510  0011DA  6EDD               	movwf	postdec2,c
  1511                           
  1512                           ;relogio.c: 49: Calendario->dia=qtdDias_mes[Calendario->mes];
  1513  0011DC  EE20 F002          	lfsr	2,2
  1514  0011E0  5011               	movf	tratar_relogio@Calendario,w,c
  1515  0011E2  26D9               	addwf	fsr2l,f,c
  1516  0011E4  5012               	movf	tratar_relogio@Calendario+1,w,c
  1517  0011E6  22DA               	addwfc	fsr2h,f,c
  1518  0011E8  CFDE F013          	movff	postinc2,??_tratar_relogio
  1519  0011EC  CFDD F014          	movff	postdec2,??_tratar_relogio+1
  1520  0011F0  90D8               	bcf	status,0,c
  1521  0011F2  3613               	rlcf	??_tratar_relogio,f,c
  1522  0011F4  3614               	rlcf	??_tratar_relogio+1,f,c
  1523  0011F6  0EA3               	movlw	low _qtdDias_mes
  1524  0011F8  2413               	addwf	??_tratar_relogio,w,c
  1525  0011FA  6ED9               	movwf	fsr2l,c
  1526  0011FC  0E00               	movlw	high _qtdDias_mes
  1527  0011FE  2014               	addwfc	??_tratar_relogio+1,w,c
  1528  001200  6EDA               	movwf	fsr2h,c
  1529  001202  C011  FFE1         	movff	tratar_relogio@Calendario,fsr1l
  1530  001206  C012  FFE2         	movff	tratar_relogio@Calendario+1,fsr1h
  1531  00120A  CFDE FFE6          	movff	postinc2,postinc1
  1532  00120E  CFDD FFE5          	movff	postdec2,postdec1
  1533                           
  1534                           ;relogio.c: 50: Calendario->ano--;
  1535  001212  EE20 F004          	lfsr	2,4
  1536  001216  5011               	movf	tratar_relogio@Calendario,w,c
  1537  001218  26D9               	addwf	fsr2l,f,c
  1538  00121A  5012               	movf	tratar_relogio@Calendario+1,w,c
  1539  00121C  22DA               	addwfc	fsr2h,f,c
  1540  00121E  06DE               	decf	postinc2,f,c
  1541  001220  0E00               	movlw	0
  1542  001222  5ADD               	subwfb	postdec2,f,c
  1543  001224                     l2844:
  1544                           
  1545                           ;relogio.c: 51: }
  1546                           ;relogio.c: 53: if(Calendario->ano>=100){
  1547  001224  EE20 F004          	lfsr	2,4
  1548  001228  5011               	movf	tratar_relogio@Calendario,w,c
  1549  00122A  26D9               	addwf	fsr2l,f,c
  1550  00122C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1551  00122E  22DA               	addwfc	fsr2h,f,c
  1552  001230  0E01               	movlw	1
  1553  001232  BEDB               	btfsc	plusw2,7,c
  1554  001234  D011               	goto	l178
  1555  001236  0E01               	movlw	1
  1556  001238  50DB               	movf	plusw2,w,c
  1557  00123A  E104               	bnz	u2850
  1558  00123C  0E64               	movlw	100
  1559  00123E  5CDE               	subwf	postinc2,w,c
  1560  001240  A0D8               	btfss	status,0,c
  1561  001242  D00A               	goto	l178
  1562  001244                     u2850:
  1563                           
  1564                           ;relogio.c: 54: Calendario->ano=00;
  1565  001244  EE20 F004          	lfsr	2,4
  1566  001248  5011               	movf	tratar_relogio@Calendario,w,c
  1567  00124A  26D9               	addwf	fsr2l,f,c
  1568  00124C  5012               	movf	tratar_relogio@Calendario+1,w,c
  1569  00124E  22DA               	addwfc	fsr2h,f,c
  1570  001250  0E00               	movlw	0
  1571  001252  6EDE               	movwf	postinc2,c
  1572  001254  0E00               	movlw	0
  1573  001256  6EDD               	movwf	postdec2,c
  1574  001258                     l178:
  1575                           
  1576                           ;relogio.c: 55: }
  1577                           ;relogio.c: 56: if(Calendario->ano<0){
  1578  001258  EE20 F004          	lfsr	2,4
  1579  00125C  5011               	movf	tratar_relogio@Calendario,w,c
  1580  00125E  26D9               	addwf	fsr2l,f,c
  1581  001260  5012               	movf	tratar_relogio@Calendario+1,w,c
  1582  001262  22DA               	addwfc	fsr2h,f,c
  1583  001264  0E01               	movlw	1
  1584  001266  AEDB               	btfss	plusw2,7,c
  1585  001268  0012               	return	
  1586                           
  1587                           ;relogio.c: 57: Calendario->ano=99;
  1588  00126A  EE20 F004          	lfsr	2,4
  1589  00126E  5011               	movf	tratar_relogio@Calendario,w,c
  1590  001270  26D9               	addwf	fsr2l,f,c
  1591  001272  5012               	movf	tratar_relogio@Calendario+1,w,c
  1592  001274  22DA               	addwfc	fsr2h,f,c
  1593  001276  0E63               	movlw	99
  1594  001278  6EDE               	movwf	postinc2,c
  1595  00127A  0E00               	movlw	0
  1596  00127C  6EDD               	movwf	postdec2,c
  1597  00127E  0012               	return	
  1598  001280                     __end_of_tratar_relogio:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postinc1	equ	0xFE6
  1608                           postdec1	equ	0xFE5
  1609                           fsr1h	equ	0xFE2
  1610                           fsr1l	equ	0xFE1
  1611                           postinc2	equ	0xFDE
  1612                           postdec2	equ	0xFDD
  1613                           plusw2	equ	0xFDB
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _pisca_cursor *****************
  1619 ;; Defined at:
  1620 ;;		line 176 in file "display_LCD.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    4
  1641 ;; This function calls:
  1642 ;;		_SetDDRamAddr
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text2
  1649  001D0C                     __ptext2:
  1650                           	opt stack 0
  1651  001D0C                     _pisca_cursor:
  1652                           	opt stack 26
  1653                           
  1654                           ;display_LCD.c: 177: if(tela_exibida==0){
  1655                           
  1656                           ;incstack = 0
  1657  001D0C  503A               	movf	_tela_exibida,w,c
  1658  001D0E  103B               	iorwf	_tela_exibida+1,w,c
  1659  001D10  A4D8               	btfss	status,2,c
  1660  001D12  D05E               	goto	l2774
  1661                           
  1662                           ;display_LCD.c: 178: if(cursor==0) SetDDRamAddr(0x06);
  1663  001D14  5036               	movf	_cursor,w,c
  1664  001D16  1037               	iorwf	_cursor+1,w,c
  1665  001D18  A4D8               	btfss	status,2,c
  1666  001D1A  D003               	goto	l2730
  1667  001D1C  0E06               	movlw	6
  1668  001D1E  EC57  F011         	call	_SetDDRamAddr
  1669  001D22                     l2730:
  1670                           
  1671                           ;display_LCD.c: 179: if(cursor==1) SetDDRamAddr(0x07);
  1672  001D22  0436               	decf	_cursor,w,c
  1673  001D24  1037               	iorwf	_cursor+1,w,c
  1674  001D26  A4D8               	btfss	status,2,c
  1675  001D28  D003               	goto	l2734
  1676  001D2A  0E07               	movlw	7
  1677  001D2C  EC57  F011         	call	_SetDDRamAddr
  1678  001D30                     l2734:
  1679                           
  1680                           ;display_LCD.c: 180: if(cursor==2) SetDDRamAddr(0x09);
  1681  001D30  0E02               	movlw	2
  1682  001D32  1836               	xorwf	_cursor,w,c
  1683  001D34  1037               	iorwf	_cursor+1,w,c
  1684  001D36  A4D8               	btfss	status,2,c
  1685  001D38  D003               	goto	l2738
  1686  001D3A  0E09               	movlw	9
  1687  001D3C  EC57  F011         	call	_SetDDRamAddr
  1688  001D40                     l2738:
  1689                           
  1690                           ;display_LCD.c: 181: if(cursor==3) SetDDRamAddr(0x0A);
  1691  001D40  0E03               	movlw	3
  1692  001D42  1836               	xorwf	_cursor,w,c
  1693  001D44  1037               	iorwf	_cursor+1,w,c
  1694  001D46  A4D8               	btfss	status,2,c
  1695  001D48  D003               	goto	l2742
  1696  001D4A  0E0A               	movlw	10
  1697  001D4C  EC57  F011         	call	_SetDDRamAddr
  1698  001D50                     l2742:
  1699                           
  1700                           ;display_LCD.c: 182: if(cursor==4) SetDDRamAddr(0x0C);
  1701  001D50  0E04               	movlw	4
  1702  001D52  1836               	xorwf	_cursor,w,c
  1703  001D54  1037               	iorwf	_cursor+1,w,c
  1704  001D56  A4D8               	btfss	status,2,c
  1705  001D58  D003               	goto	l2746
  1706  001D5A  0E0C               	movlw	12
  1707  001D5C  EC57  F011         	call	_SetDDRamAddr
  1708  001D60                     l2746:
  1709                           
  1710                           ;display_LCD.c: 183: if(cursor==5) SetDDRamAddr(0x0D);
  1711  001D60  0E05               	movlw	5
  1712  001D62  1836               	xorwf	_cursor,w,c
  1713  001D64  1037               	iorwf	_cursor+1,w,c
  1714  001D66  A4D8               	btfss	status,2,c
  1715  001D68  D003               	goto	l2750
  1716  001D6A  0E0D               	movlw	13
  1717  001D6C  EC57  F011         	call	_SetDDRamAddr
  1718  001D70                     l2750:
  1719                           
  1720                           ;display_LCD.c: 184: if(cursor==6) SetDDRamAddr(0x46);
  1721  001D70  0E06               	movlw	6
  1722  001D72  1836               	xorwf	_cursor,w,c
  1723  001D74  1037               	iorwf	_cursor+1,w,c
  1724  001D76  A4D8               	btfss	status,2,c
  1725  001D78  D003               	goto	l2754
  1726  001D7A  0E46               	movlw	70
  1727  001D7C  EC57  F011         	call	_SetDDRamAddr
  1728  001D80                     l2754:
  1729                           
  1730                           ;display_LCD.c: 185: if(cursor==7) SetDDRamAddr(0x47);
  1731  001D80  0E07               	movlw	7
  1732  001D82  1836               	xorwf	_cursor,w,c
  1733  001D84  1037               	iorwf	_cursor+1,w,c
  1734  001D86  A4D8               	btfss	status,2,c
  1735  001D88  D003               	goto	l2758
  1736  001D8A  0E47               	movlw	71
  1737  001D8C  EC57  F011         	call	_SetDDRamAddr
  1738  001D90                     l2758:
  1739                           
  1740                           ;display_LCD.c: 186: if(cursor==8) SetDDRamAddr(0x49);
  1741  001D90  0E08               	movlw	8
  1742  001D92  1836               	xorwf	_cursor,w,c
  1743  001D94  1037               	iorwf	_cursor+1,w,c
  1744  001D96  A4D8               	btfss	status,2,c
  1745  001D98  D003               	goto	l2762
  1746  001D9A  0E49               	movlw	73
  1747  001D9C  EC57  F011         	call	_SetDDRamAddr
  1748  001DA0                     l2762:
  1749                           
  1750                           ;display_LCD.c: 187: if(cursor==9) SetDDRamAddr(0x4A);
  1751  001DA0  0E09               	movlw	9
  1752  001DA2  1836               	xorwf	_cursor,w,c
  1753  001DA4  1037               	iorwf	_cursor+1,w,c
  1754  001DA6  A4D8               	btfss	status,2,c
  1755  001DA8  D003               	goto	l2766
  1756  001DAA  0E4A               	movlw	74
  1757  001DAC  EC57  F011         	call	_SetDDRamAddr
  1758  001DB0                     l2766:
  1759                           
  1760                           ;display_LCD.c: 188: if(cursor==10) SetDDRamAddr(0x4C);
  1761  001DB0  0E0A               	movlw	10
  1762  001DB2  1836               	xorwf	_cursor,w,c
  1763  001DB4  1037               	iorwf	_cursor+1,w,c
  1764  001DB6  A4D8               	btfss	status,2,c
  1765  001DB8  D003               	goto	l2770
  1766  001DBA  0E4C               	movlw	76
  1767  001DBC  EC57  F011         	call	_SetDDRamAddr
  1768  001DC0                     l2770:
  1769                           
  1770                           ;display_LCD.c: 189: if(cursor==11) SetDDRamAddr(0x4D);
  1771  001DC0  0E0B               	movlw	11
  1772  001DC2  1836               	xorwf	_cursor,w,c
  1773  001DC4  1037               	iorwf	_cursor+1,w,c
  1774  001DC6  A4D8               	btfss	status,2,c
  1775  001DC8  D003               	goto	l2774
  1776  001DCA  0E4D               	movlw	77
  1777  001DCC  EC57  F011         	call	_SetDDRamAddr
  1778  001DD0                     l2774:
  1779                           
  1780                           ;display_LCD.c: 190: }
  1781                           ;display_LCD.c: 192: if(tela_exibida==1){
  1782  001DD0  043A               	decf	_tela_exibida,w,c
  1783  001DD2  103B               	iorwf	_tela_exibida+1,w,c
  1784  001DD4  A4D8               	btfss	status,2,c
  1785  001DD6  0012               	return	
  1786                           
  1787                           ;display_LCD.c: 193: if(cursor==0) SetDDRamAddr(0x40);
  1788  001DD8  5036               	movf	_cursor,w,c
  1789  001DDA  1037               	iorwf	_cursor+1,w,c
  1790  001DDC  A4D8               	btfss	status,2,c
  1791  001DDE  D003               	goto	l2780
  1792  001DE0  0E40               	movlw	64
  1793  001DE2  EC57  F011         	call	_SetDDRamAddr
  1794  001DE6                     l2780:
  1795                           
  1796                           ;display_LCD.c: 194: if(cursor==1) SetDDRamAddr(0x41);
  1797  001DE6  0436               	decf	_cursor,w,c
  1798  001DE8  1037               	iorwf	_cursor+1,w,c
  1799  001DEA  A4D8               	btfss	status,2,c
  1800  001DEC  D003               	goto	l2784
  1801  001DEE  0E41               	movlw	65
  1802  001DF0  EC57  F011         	call	_SetDDRamAddr
  1803  001DF4                     l2784:
  1804                           
  1805                           ;display_LCD.c: 195: if(cursor==2) SetDDRamAddr(0x43);
  1806  001DF4  0E02               	movlw	2
  1807  001DF6  1836               	xorwf	_cursor,w,c
  1808  001DF8  1037               	iorwf	_cursor+1,w,c
  1809  001DFA  A4D8               	btfss	status,2,c
  1810  001DFC  D003               	goto	l2788
  1811  001DFE  0E43               	movlw	67
  1812  001E00  EC57  F011         	call	_SetDDRamAddr
  1813  001E04                     l2788:
  1814                           
  1815                           ;display_LCD.c: 196: if(cursor==3) SetDDRamAddr(0x44);
  1816  001E04  0E03               	movlw	3
  1817  001E06  1836               	xorwf	_cursor,w,c
  1818  001E08  1037               	iorwf	_cursor+1,w,c
  1819  001E0A  A4D8               	btfss	status,2,c
  1820  001E0C  D003               	goto	l2792
  1821  001E0E  0E44               	movlw	68
  1822  001E10  EC57  F011         	call	_SetDDRamAddr
  1823  001E14                     l2792:
  1824                           
  1825                           ;display_LCD.c: 197: if(cursor==4) SetDDRamAddr(0x46);
  1826  001E14  0E04               	movlw	4
  1827  001E16  1836               	xorwf	_cursor,w,c
  1828  001E18  1037               	iorwf	_cursor+1,w,c
  1829  001E1A  A4D8               	btfss	status,2,c
  1830  001E1C  D003               	goto	l2796
  1831  001E1E  0E46               	movlw	70
  1832  001E20  EC57  F011         	call	_SetDDRamAddr
  1833  001E24                     l2796:
  1834                           
  1835                           ;display_LCD.c: 198: if(cursor==5) SetDDRamAddr(0x47);
  1836  001E24  0E05               	movlw	5
  1837  001E26  1836               	xorwf	_cursor,w,c
  1838  001E28  1037               	iorwf	_cursor+1,w,c
  1839  001E2A  A4D8               	btfss	status,2,c
  1840  001E2C  0012               	return	
  1841  001E2E  0E47               	movlw	71
  1842  001E30  EC57  F011         	call	_SetDDRamAddr
  1843  001E34  0012               	return	
  1844  001E36                     __end_of_pisca_cursor:
  1845                           	opt stack 0
  1846                           tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           intcon	equ	0xFF2
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postinc1	equ	0xFE6
  1854                           postdec1	equ	0xFE5
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           postinc2	equ	0xFDE
  1858                           postdec2	equ	0xFDD
  1859                           plusw2	equ	0xFDB
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _maquina_estado *****************
  1865 ;; Defined at:
  1866 ;;		line 87 in file "serial.h"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		_trata_comando
  1889 ;;		_tx_data
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text3
  1896  00244A                     __ptext3:
  1897                           	opt stack 0
  1898  00244A                     _maquina_estado:
  1899                           	opt stack 28
  1900                           
  1901                           ;serial.h: 88: switch(ESTADO_COMUNICACAO){
  1902                           
  1903                           ;incstack = 0
  1904  00244A  D00A               	goto	l2860
  1905  00244C                     l2852:
  1906                           
  1907                           ;serial.h: 90: trata_comando();
  1908  00244C  EC7C  F012         	call	_trata_comando	;wreg free
  1909                           
  1910                           ;serial.h: 91: break;
  1911  002450  0012               	return	
  1912  002452                     l2854:
  1913                           
  1914                           ;serial.h: 94: tx_data();
  1915  002452  EC60  F012         	call	_tx_data	;wreg free
  1916                           
  1917                           ;serial.h: 95: ESTADO_COMUNICACAO = '0';
  1918  002456  0E00               	movlw	0
  1919  002458  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  1920  00245A  0E30               	movlw	48
  1921  00245C  6E30               	movwf	_ESTADO_COMUNICACAO,c
  1922                           
  1923                           ;serial.h: 100: };
  1924                           
  1925                           ;serial.h: 99: break;
  1926                           
  1927                           ;serial.h: 98: case '0':
  1928                           
  1929                           ;serial.h: 96: break;
  1930  00245E  0012               	return	
  1931  002460                     l2860:
  1932  002460  C030  F011         	movff	_ESTADO_COMUNICACAO,??_maquina_estado
  1933  002464  C031  F012         	movff	_ESTADO_COMUNICACAO+1,??_maquina_estado+1
  1934                           
  1935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1936                           ; Switch size 1, requested type "space"
  1937                           ; Number of cases is 1, Range of values is 0 to 0
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte            4     3 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942  002468  5012               	movf	??_maquina_estado+1,w,c
  1943  00246A  0A00               	xorlw	0	; case 0
  1944  00246C  A4D8               	btfss	status,2,c
  1945  00246E  0012               	return	
  1946                           
  1947                           ; Switch size 1, requested type "space"
  1948                           ; Number of cases is 3, Range of values is 48 to 50
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           10     6 (average)
  1952                           ;	Chosen strategy is simple_byte
  1953  002470  5011               	movf	??_maquina_estado,w,c
  1954  002472  0A30               	xorlw	48	; case 48
  1955  002474  B4D8               	btfsc	status,2,c
  1956  002476  0012               	return	
  1957  002478  0A01               	xorlw	1	; case 49
  1958  00247A  B4D8               	btfsc	status,2,c
  1959  00247C  D7E7               	goto	l2852
  1960  00247E  0A03               	xorlw	3	; case 50
  1961  002480  A4D8               	btfss	status,2,c
  1962  002482  0012               	return	
  1963  002484  D7E6               	goto	l2854
  1964  002486                     __end_of_maquina_estado:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           intcon	equ	0xFF2
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postinc1	equ	0xFE6
  1974                           postdec1	equ	0xFE5
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           postinc2	equ	0xFDE
  1978                           postdec2	equ	0xFDD
  1979                           plusw2	equ	0xFDB
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function _tx_data *****************
  1985 ;; Defined at:
  1986 ;;		line 45 in file "serial.h"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  cont            2   14[COMRAM] int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_maquina_estado
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text4
  2015  0024C0                     __ptext4:
  2016                           	opt stack 0
  2017  0024C0                     _tx_data:
  2018                           	opt stack 28
  2019  0024C0                     l290:
  2020  0024C0  A89E               	btfss	3998,4,c	;volatile
  2021  0024C2  D7FE               	goto	l290
  2022                           
  2023                           ;serial.h: 49: for (cont=0; cont<3; cont++) {
  2024  0024C4  0E00               	movlw	0
  2025  0024C6  6E10               	movwf	tx_data@cont+1,c
  2026  0024C8  0E00               	movlw	0
  2027  0024CA  6E0F               	movwf	tx_data@cont,c
  2028  0024CC                     l2544:
  2029  0024CC  BE10               	btfsc	tx_data@cont+1,7,c
  2030  0024CE  D006               	goto	l295
  2031  0024D0  5010               	movf	tx_data@cont+1,w,c
  2032  0024D2  E111               	bnz	l298
  2033  0024D4  0E03               	movlw	3
  2034  0024D6  5C0F               	subwf	tx_data@cont,w,c
  2035  0024D8  B0D8               	btfsc	status,0,c
  2036  0024DA  0012               	return	
  2037  0024DC                     l295:
  2038  0024DC  A89E               	btfss	3998,4,c	;volatile
  2039  0024DE  D7FE               	goto	l295
  2040                           
  2041                           ;serial.h: 51: TXREG = BUFF_RESP[cont];
  2042  0024E0  0E85               	movlw	low _BUFF_RESP
  2043  0024E2  240F               	addwf	tx_data@cont,w,c
  2044  0024E4  6ED9               	movwf	fsr2l,c
  2045  0024E6  0E00               	movlw	high _BUFF_RESP
  2046  0024E8  2010               	addwfc	tx_data@cont+1,w,c
  2047  0024EA  6EDA               	movwf	fsr2h,c
  2048  0024EC  50DF               	movf	indf2,w,c
  2049  0024EE  6EAD               	movwf	4013,c	;volatile
  2050  0024F0  4A0F               	infsnz	tx_data@cont,f,c
  2051  0024F2  2A10               	incf	tx_data@cont+1,f,c
  2052  0024F4  D7EB               	goto	l2544
  2053  0024F6                     l298:
  2054  0024F6  0012               	return		;funcret
  2055  0024F8                     __end_of_tx_data:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           intcon	equ	0xFF2
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postinc1	equ	0xFE6
  2065                           postdec1	equ	0xFE5
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           indf2	equ	0xFDF
  2069                           postinc2	equ	0xFDE
  2070                           postdec2	equ	0xFDD
  2071                           plusw2	equ	0xFDB
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function _trata_comando *****************
  2077 ;; Defined at:
  2078 ;;		line 73 in file "serial.h"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2092 ;;      Params:         0       0       0       0       0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2094 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2095 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_maquina_estado
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text5
  2107  0024F8                     __ptext5:
  2108                           	opt stack 0
  2109  0024F8                     _trata_comando:
  2110                           	opt stack 28
  2111                           
  2112                           ;serial.h: 76: PORTCbits.RC0=1;
  2113                           
  2114                           ;incstack = 0
  2115  0024F8  8082               	bsf	3970,0,c	;volatile
  2116                           
  2117                           ;serial.h: 77: _delay((unsigned long)((180)*(20000000/4000.0)));
  2118  0024FA  0E05               	movlw	5
  2119  0024FC  6E10               	movwf	(??_trata_comando+1)& (0+255),c
  2120  0024FE  0E91               	movlw	145
  2121  002500  6E0F               	movwf	??_trata_comando& (0+255),c
  2122  002502  0ED0               	movlw	208
  2123  002504                     u3267:
  2124  002504  2EE8               	decfsz	wreg,f,c
  2125  002506  D7FE               	bra	u3267
  2126  002508  2E0F               	decfsz	??_trata_comando& (0+255),f,c
  2127  00250A  D7FC               	bra	u3267
  2128  00250C  2E10               	decfsz	(??_trata_comando+1)& (0+255),f,c
  2129  00250E  D7FA               	bra	u3267
  2130                           
  2131                           ;serial.h: 78: PORTCbits.RC0=0;
  2132  002510  9082               	bcf	3970,0,c	;volatile
  2133                           
  2134                           ;serial.h: 80: BUFF_RESP[0] = BUFF_COM[0];
  2135  002512  C08C  F085         	movff	_BUFF_COM,_BUFF_RESP
  2136                           
  2137                           ;serial.h: 81: BUFF_RESP[1] = BUFF_COM[1];
  2138  002516  C08D  F086         	movff	_BUFF_COM+1,_BUFF_RESP+1
  2139                           
  2140                           ;serial.h: 82: BUFF_RESP[2] = BUFF_COM[2];
  2141  00251A  C08E  F087         	movff	_BUFF_COM+2,_BUFF_RESP+2
  2142                           
  2143                           ;serial.h: 84: ESTADO_COMUNICACAO = '2';
  2144  00251E  0E00               	movlw	0
  2145  002520  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  2146  002522  0E32               	movlw	50
  2147  002524  6E30               	movwf	_ESTADO_COMUNICACAO,c
  2148  002526  0012               	return		;funcret
  2149  002528                     __end_of_trata_comando:
  2150                           	opt stack 0
  2151                           tblptru	equ	0xFF8
  2152                           tblptrh	equ	0xFF7
  2153                           tblptrl	equ	0xFF6
  2154                           tablat	equ	0xFF5
  2155                           intcon	equ	0xFF2
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           postinc1	equ	0xFE6
  2159                           postdec1	equ	0xFE5
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           indf2	equ	0xFDF
  2163                           postinc2	equ	0xFDE
  2164                           postdec2	equ	0xFDD
  2165                           plusw2	equ	0xFDB
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _init_XLCD *****************
  2171 ;; Defined at:
  2172 ;;		line 24 in file "display_LCD.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        0 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    5
  2193 ;; This function calls:
  2194 ;;		_BusyXLCD
  2195 ;;		_OpenXLCD
  2196 ;;		_WriteCmdXLCD
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text6
  2203  002528                     __ptext6:
  2204                           	opt stack 0
  2205  002528                     _init_XLCD:
  2206                           	opt stack 25
  2207                           
  2208                           ;display_LCD.c: 25: OpenXLCD(0b00101100&0b00111000);
  2209                           
  2210                           ;incstack = 0
  2211  002528  0E28               	movlw	40
  2212  00252A  ECF5  F00F         	call	_OpenXLCD
  2213  00252E                     l2650:
  2214  00252E  EC43  F012         	call	_BusyXLCD	;wreg free
  2215  002532  0900               	iorlw	0
  2216  002534  A4D8               	btfss	status,2,c
  2217  002536  D7FB               	goto	l2650
  2218                           
  2219                           ;display_LCD.c: 27: WriteCmdXLCD(0x06);
  2220  002538  0E06               	movlw	6
  2221  00253A  EC06  F012         	call	_WriteCmdXLCD
  2222                           
  2223                           ;display_LCD.c: 28: WriteCmdXLCD(0x0C);
  2224  00253E  0E0C               	movlw	12
  2225  002540  EC06  F012         	call	_WriteCmdXLCD
  2226  002544  0012               	return		;funcret
  2227  002546                     __end_of_init_XLCD:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           intcon	equ	0xFF2
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           postinc1	equ	0xFE6
  2237                           postdec1	equ	0xFE5
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           indf2	equ	0xFDF
  2241                           postinc2	equ	0xFDE
  2242                           postdec2	equ	0xFDD
  2243                           plusw2	equ	0xFDB
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _OpenXLCD *****************
  2249 ;; Defined at:
  2250 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  lcdtype         1    wreg     unsigned char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  lcdtype         1   19[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0
  2265 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2267 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:        1 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    4
  2271 ;; This function calls:
  2272 ;;		_BusyXLCD
  2273 ;;		_Delay10KTCYx
  2274 ;;		_DelayPORXLCD
  2275 ;;		_SetDDRamAddr
  2276 ;;		_WriteCmdXLCD
  2277 ;; This function is called by:
  2278 ;;		_init_XLCD
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text7
  2283  001FEA                     __ptext7:
  2284                           	opt stack 0
  2285  001FEA                     _OpenXLCD:
  2286                           	opt stack 25
  2287                           
  2288                           ;incstack = 0
  2289                           ;OpenXLCD@lcdtype stored from wreg
  2290  001FEA  6E14               	movwf	OpenXLCD@lcdtype,c
  2291  001FEC  0EF0               	movlw	240
  2292  001FEE  1681               	andwf	3969,f,c	;volatile
  2293  001FF0  0EF0               	movlw	240
  2294  001FF2  1693               	andwf	3987,f,c	;volatile
  2295  001FF4  9C93               	bcf	3987,6,c	;volatile
  2296  001FF6  9A93               	bcf	3987,5,c	;volatile
  2297  001FF8  9893               	bcf	3987,4,c	;volatile
  2298  001FFA  9C8A               	bcf	3978,6,c	;volatile
  2299  001FFC  9A8A               	bcf	3978,5,c	;volatile
  2300  001FFE  988A               	bcf	3978,4,c	;volatile
  2301  002000  ECD2  F012         	call	_DelayPORXLCD	;wreg free
  2302  002004  0E30               	movlw	48
  2303  002006  EC06  F012         	call	_WriteCmdXLCD
  2304  00200A  0E05               	movlw	5
  2305  00200C  ECB0  F012         	call	_Delay10KTCYx
  2306  002010  0E30               	movlw	48
  2307  002012  EC06  F012         	call	_WriteCmdXLCD
  2308  002016  0E01               	movlw	1
  2309  002018  ECB0  F012         	call	_Delay10KTCYx
  2310  00201C  0E32               	movlw	50
  2311  00201E  EC06  F012         	call	_WriteCmdXLCD
  2312  002022                     l2354:
  2313  002022  EC43  F012         	call	_BusyXLCD	;wreg free
  2314  002026  0900               	iorlw	0
  2315  002028  A4D8               	btfss	status,2,c
  2316  00202A  D7FB               	goto	l2354
  2317  00202C                     l2356:
  2318  00202C  EC43  F012         	call	_BusyXLCD	;wreg free
  2319  002030  0900               	iorlw	0
  2320  002032  A4D8               	btfss	status,2,c
  2321  002034  D7FB               	goto	l2356
  2322  002036  5014               	movf	OpenXLCD@lcdtype,w,c
  2323  002038  EC06  F012         	call	_WriteCmdXLCD
  2324  00203C                     l2360:
  2325  00203C  EC43  F012         	call	_BusyXLCD	;wreg free
  2326  002040  0900               	iorlw	0
  2327  002042  A4D8               	btfss	status,2,c
  2328  002044  D7FB               	goto	l2360
  2329  002046  0E08               	movlw	8
  2330  002048  EC06  F012         	call	_WriteCmdXLCD
  2331  00204C                     l2364:
  2332  00204C  EC43  F012         	call	_BusyXLCD	;wreg free
  2333  002050  0900               	iorlw	0
  2334  002052  A4D8               	btfss	status,2,c
  2335  002054  D7FB               	goto	l2364
  2336  002056  0E0F               	movlw	15
  2337  002058  EC06  F012         	call	_WriteCmdXLCD
  2338  00205C                     l2368:
  2339  00205C  EC43  F012         	call	_BusyXLCD	;wreg free
  2340  002060  0900               	iorlw	0
  2341  002062  A4D8               	btfss	status,2,c
  2342  002064  D7FB               	goto	l2368
  2343  002066  0E01               	movlw	1
  2344  002068  EC06  F012         	call	_WriteCmdXLCD
  2345  00206C                     l2372:
  2346  00206C  EC43  F012         	call	_BusyXLCD	;wreg free
  2347  002070  0900               	iorlw	0
  2348  002072  A4D8               	btfss	status,2,c
  2349  002074  D7FB               	goto	l2372
  2350  002076  0E04               	movlw	4
  2351  002078  EC06  F012         	call	_WriteCmdXLCD
  2352  00207C                     l2376:
  2353  00207C  EC43  F012         	call	_BusyXLCD	;wreg free
  2354  002080  0900               	iorlw	0
  2355  002082  A4D8               	btfss	status,2,c
  2356  002084  D7FB               	goto	l2376
  2357  002086  0E80               	movlw	128
  2358  002088  EC57  F011         	call	_SetDDRamAddr
  2359  00208C  0012               	return	
  2360  00208E                     __end_of_OpenXLCD:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           intcon	equ	0xFF2
  2367                           postinc0	equ	0xFEE
  2368                           wreg	equ	0xFE8
  2369                           postinc1	equ	0xFE6
  2370                           postdec1	equ	0xFE5
  2371                           fsr1h	equ	0xFE2
  2372                           fsr1l	equ	0xFE1
  2373                           indf2	equ	0xFDF
  2374                           postinc2	equ	0xFDE
  2375                           postdec2	equ	0xFDD
  2376                           plusw2	equ	0xFDB
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function _DelayPORXLCD *****************
  2382 ;; Defined at:
  2383 ;;		line 11 in file "display_LCD.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    2
  2404 ;; This function calls:
  2405 ;;		_Delay1KTCYx
  2406 ;; This function is called by:
  2407 ;;		_OpenXLCD
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  0025A4                     __ptext8:
  2413                           	opt stack 0
  2414  0025A4                     _DelayPORXLCD:
  2415                           	opt stack 26
  2416                           
  2417                           ;display_LCD.c: 12: Delay1KTCYx(180);
  2418                           
  2419                           ;incstack = 0
  2420  0025A4  0EB4               	movlw	180
  2421  0025A6  ECBB  F012         	call	_Delay1KTCYx
  2422  0025AA  0012               	return	
  2423  0025AC                     __end_of_DelayPORXLCD:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           intcon	equ	0xFF2
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           postinc1	equ	0xFE6
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           plusw2	equ	0xFDB
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _Delay1KTCYx *****************
  2445 ;; Defined at:
  2446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  unit            1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  unit            1   14[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2463 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_DelayPORXLCD
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text9
  2475  002576                     __ptext9:
  2476                           	opt stack 0
  2477  002576                     _Delay1KTCYx:
  2478                           	opt stack 26
  2479                           
  2480                           ;incstack = 0
  2481                           ;Delay1KTCYx@unit stored from wreg
  2482  002576  6E0F               	movwf	Delay1KTCYx@unit,c
  2483  002578  0EC8               	movlw	200
  2484  00257A                     u3277:
  2485  00257A  D000               	nop2	
  2486  00257C  2EE8               	decfsz	wreg,f,c
  2487  00257E  D7FD               	bra	u3277
  2488  002580  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  2489  002582  D7FA               	goto	l1210
  2490  002584  0012               	return	
  2491  002586                     __end_of_Delay1KTCYx:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           intcon	equ	0xFF2
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           postinc1	equ	0xFE6
  2501                           postdec1	equ	0xFE5
  2502                           fsr1h	equ	0xFE2
  2503                           fsr1l	equ	0xFE1
  2504                           indf2	equ	0xFDF
  2505                           postinc2	equ	0xFDE
  2506                           postdec2	equ	0xFDD
  2507                           plusw2	equ	0xFDB
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _Delay10KTCYx *****************
  2513 ;; Defined at:
  2514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  unit            1    wreg     unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  unit            1   15[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2528 ;;      Params:         0       0       0       0       0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2530 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2531 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_OpenXLCD
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text10
  2543  002560                     __ptext10:
  2544                           	opt stack 0
  2545  002560                     _Delay10KTCYx:
  2546                           	opt stack 27
  2547                           
  2548                           ;incstack = 0
  2549                           ;Delay10KTCYx@unit stored from wreg
  2550  002560  6E10               	movwf	Delay10KTCYx@unit,c
  2551  002562  0E0D               	movlw	13
  2552  002564  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  2553  002566  0EFC               	movlw	252
  2554  002568                     u3287:
  2555  002568  2EE8               	decfsz	wreg,f,c
  2556  00256A  D7FE               	bra	u3287
  2557  00256C  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  2558  00256E  D7FC               	bra	u3287
  2559  002570  2E10               	decfsz	Delay10KTCYx@unit,f,c
  2560  002572  D7F7               	goto	l1368
  2561  002574  0012               	return	
  2562  002576                     __end_of_Delay10KTCYx:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           intcon	equ	0xFF2
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           postinc1	equ	0xFE6
  2572                           postdec1	equ	0xFE5
  2573                           fsr1h	equ	0xFE2
  2574                           fsr1l	equ	0xFE1
  2575                           indf2	equ	0xFDF
  2576                           postinc2	equ	0xFDE
  2577                           postdec2	equ	0xFDD
  2578                           plusw2	equ	0xFDB
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _exibir_lcd *****************
  2584 ;; Defined at:
  2585 ;;		line 31 in file "display_LCD.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  Relogio         2    7[BANK0 ] PTR struct .
  2588 ;;		 -> Relogio(6), 
  2589 ;;  Despertador     2    9[BANK0 ] PTR struct .
  2590 ;;		 -> Despertador(6), 
  2591 ;;  Calendario      2   11[BANK0 ] PTR struct .
  2592 ;;		 -> Calendario(6), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  f               2   35[BANK0 ] int 
  2595 ;;  e               2   33[BANK0 ] int 
  2596 ;;  d               2   31[BANK0 ] int 
  2597 ;;  c               2   29[BANK0 ] int 
  2598 ;;  b               2   27[BANK0 ] int 
  2599 ;;  a               2   25[BANK0 ] int 
  2600 ;;  l               2   23[BANK0 ] int 
  2601 ;;  k               2   21[BANK0 ] int 
  2602 ;;  j               2   19[BANK0 ] int 
  2603 ;;  i               2   17[BANK0 ] int 
  2604 ;;  h               2   15[BANK0 ] int 
  2605 ;;  g               2   13[BANK0 ] int 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:         0       6       0       0       0       0       0       0       0
  2616 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2617 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2618 ;;      Totals:         2      30       0       0       0       0       0       0       0
  2619 ;;Total ram usage:       32 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    7
  2622 ;; This function calls:
  2623 ;;		_SetDDRamAddr
  2624 ;;		___awdiv
  2625 ;;		___awmod
  2626 ;;		_gambiarra
  2627 ;;		_putrsXLCD
  2628 ;;		_sprintf
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text11
  2635  000882                     __ptext11:
  2636                           	opt stack 0
  2637  000882                     _exibir_lcd:
  2638                           	opt stack 23
  2639                           
  2640                           ;display_LCD.c: 33: int a, b, c, d, e, f, g, h, i, j, k, l;
  2641                           ;display_LCD.c: 36: if(tela_exibida==0){
  2642                           
  2643                           ;incstack = 0
  2644  000882  503A               	movf	_tela_exibida,w,c
  2645  000884  103B               	iorwf	_tela_exibida+1,w,c
  2646  000886  A4D8               	btfss	status,2,c
  2647  000888  D22A               	goto	l3160
  2648                           
  2649                           ;display_LCD.c: 37: a=((Relogio->hora)/10)-(((Relogio->hora)%10)/10);
  2650  00088A  0100               	movlb	0	; () banked
  2651  00088C  EE20 F004          	lfsr	2,4
  2652  000890  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2653  000892  26D9               	addwf	fsr2l,f,c
  2654  000894  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2655  000896  22DA               	addwfc	fsr2h,f,c
  2656  000898  CFDE F015          	movff	postinc2,___awdiv@dividend
  2657  00089C  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2658  0008A0  0E00               	movlw	0
  2659  0008A2  6E18               	movwf	___awdiv@divisor+1,c
  2660  0008A4  0E0A               	movlw	10
  2661  0008A6  6E17               	movwf	___awdiv@divisor,c
  2662  0008A8  EC47  F010         	call	___awdiv	;wreg free
  2663  0008AC  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2664  0008B0  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2665  0008B4  0E00               	movlw	0
  2666  0008B6  6E12               	movwf	___awmod@divisor+1,c
  2667  0008B8  0E0A               	movlw	10
  2668  0008BA  6E11               	movwf	___awmod@divisor,c
  2669  0008BC  0100               	movlb	0	; () banked
  2670  0008BE  EE20 F004          	lfsr	2,4
  2671  0008C2  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2672  0008C4  26D9               	addwf	fsr2l,f,c
  2673  0008C6  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2674  0008C8  22DA               	addwfc	fsr2h,f,c
  2675  0008CA  CFDE F00F          	movff	postinc2,___awmod@dividend
  2676  0008CE  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2677  0008D2  ECC8  F010         	call	___awmod	;wreg free
  2678  0008D6  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2679  0008DA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2680  0008DE  0E00               	movlw	0
  2681  0008E0  6E18               	movwf	___awdiv@divisor+1,c
  2682  0008E2  0E0A               	movlw	10
  2683  0008E4  6E17               	movwf	___awdiv@divisor,c
  2684  0008E6  EC47  F010         	call	___awdiv	;wreg free
  2685  0008EA  1E15               	comf	?___awdiv,f,c
  2686  0008EC  1E16               	comf	?___awdiv+1,f,c
  2687  0008EE  4A15               	infsnz	?___awdiv,f,c
  2688  0008F0  2A16               	incf	?___awdiv+1,f,c
  2689  0008F2  5015               	movf	?___awdiv,w,c
  2690  0008F4  242C               	addwf	??_exibir_lcd,w,c
  2691  0008F6  0100               	movlb	0	; () banked
  2692  0008F8  6F79               	movwf	exibir_lcd@a& (0+255),b
  2693  0008FA  5016               	movf	?___awdiv+1,w,c
  2694  0008FC  202D               	addwfc	??_exibir_lcd+1,w,c
  2695  0008FE  0100               	movlb	0	; () banked
  2696  000900  6F7A               	movwf	(exibir_lcd@a+1)& (0+255),b
  2697                           
  2698                           ;display_LCD.c: 38: b=Relogio->hora%10;
  2699  000902  0100               	movlb	0	; () banked
  2700  000904  EE20 F004          	lfsr	2,4
  2701  000908  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2702  00090A  26D9               	addwf	fsr2l,f,c
  2703  00090C  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2704  00090E  22DA               	addwfc	fsr2h,f,c
  2705  000910  CFDE F00F          	movff	postinc2,___awmod@dividend
  2706  000914  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2707  000918  0E00               	movlw	0
  2708  00091A  6E12               	movwf	___awmod@divisor+1,c
  2709  00091C  0E0A               	movlw	10
  2710  00091E  6E11               	movwf	___awmod@divisor,c
  2711  000920  ECC8  F010         	call	___awmod	;wreg free
  2712  000924  C00F  F07B         	movff	?___awmod,exibir_lcd@b
  2713  000928  C010  F07C         	movff	?___awmod+1,exibir_lcd@b+1
  2714                           
  2715                           ;display_LCD.c: 39: c=((Relogio->minuto)/10)-(((Relogio->minuto)%10)/10);
  2716  00092C  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2717  000930  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2718  000934  CFDE F015          	movff	postinc2,___awdiv@dividend
  2719  000938  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2720  00093C  0E00               	movlw	0
  2721  00093E  6E18               	movwf	___awdiv@divisor+1,c
  2722  000940  0E0A               	movlw	10
  2723  000942  6E17               	movwf	___awdiv@divisor,c
  2724  000944  EC47  F010         	call	___awdiv	;wreg free
  2725  000948  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2726  00094C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2727  000950  0E00               	movlw	0
  2728  000952  6E12               	movwf	___awmod@divisor+1,c
  2729  000954  0E0A               	movlw	10
  2730  000956  6E11               	movwf	___awmod@divisor,c
  2731  000958  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2732  00095C  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2733  000960  CFDE F00F          	movff	postinc2,___awmod@dividend
  2734  000964  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2735  000968  ECC8  F010         	call	___awmod	;wreg free
  2736  00096C  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2737  000970  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2738  000974  0E00               	movlw	0
  2739  000976  6E18               	movwf	___awdiv@divisor+1,c
  2740  000978  0E0A               	movlw	10
  2741  00097A  6E17               	movwf	___awdiv@divisor,c
  2742  00097C  EC47  F010         	call	___awdiv	;wreg free
  2743  000980  1E15               	comf	?___awdiv,f,c
  2744  000982  1E16               	comf	?___awdiv+1,f,c
  2745  000984  4A15               	infsnz	?___awdiv,f,c
  2746  000986  2A16               	incf	?___awdiv+1,f,c
  2747  000988  5015               	movf	?___awdiv,w,c
  2748  00098A  242C               	addwf	??_exibir_lcd,w,c
  2749  00098C  0100               	movlb	0	; () banked
  2750  00098E  6F7D               	movwf	exibir_lcd@c& (0+255),b
  2751  000990  5016               	movf	?___awdiv+1,w,c
  2752  000992  202D               	addwfc	??_exibir_lcd+1,w,c
  2753  000994  0100               	movlb	0	; () banked
  2754  000996  6F7E               	movwf	(exibir_lcd@c+1)& (0+255),b
  2755                           
  2756                           ;display_LCD.c: 40: d=Relogio->minuto%10;
  2757  000998  C067  FFD9         	movff	exibir_lcd@Relogio,fsr2l
  2758  00099C  C068  FFDA         	movff	exibir_lcd@Relogio+1,fsr2h
  2759  0009A0  CFDE F00F          	movff	postinc2,___awmod@dividend
  2760  0009A4  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2761  0009A8  0E00               	movlw	0
  2762  0009AA  6E12               	movwf	___awmod@divisor+1,c
  2763  0009AC  0E0A               	movlw	10
  2764  0009AE  6E11               	movwf	___awmod@divisor,c
  2765  0009B0  ECC8  F010         	call	___awmod	;wreg free
  2766  0009B4  C00F  F07F         	movff	?___awmod,exibir_lcd@d
  2767  0009B8  C010  F080         	movff	?___awmod+1,exibir_lcd@d+1
  2768                           
  2769                           ;display_LCD.c: 41: e=((Relogio->segundo)/10)-(((Relogio->segundo)%10)/10);
  2770  0009BC  0100               	movlb	0	; () banked
  2771  0009BE  EE20 F002          	lfsr	2,2
  2772  0009C2  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2773  0009C4  26D9               	addwf	fsr2l,f,c
  2774  0009C6  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2775  0009C8  22DA               	addwfc	fsr2h,f,c
  2776  0009CA  CFDE F015          	movff	postinc2,___awdiv@dividend
  2777  0009CE  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2778  0009D2  0E00               	movlw	0
  2779  0009D4  6E18               	movwf	___awdiv@divisor+1,c
  2780  0009D6  0E0A               	movlw	10
  2781  0009D8  6E17               	movwf	___awdiv@divisor,c
  2782  0009DA  EC47  F010         	call	___awdiv	;wreg free
  2783  0009DE  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2784  0009E2  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2785  0009E6  0E00               	movlw	0
  2786  0009E8  6E12               	movwf	___awmod@divisor+1,c
  2787  0009EA  0E0A               	movlw	10
  2788  0009EC  6E11               	movwf	___awmod@divisor,c
  2789  0009EE  0100               	movlb	0	; () banked
  2790  0009F0  EE20 F002          	lfsr	2,2
  2791  0009F4  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2792  0009F6  26D9               	addwf	fsr2l,f,c
  2793  0009F8  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2794  0009FA  22DA               	addwfc	fsr2h,f,c
  2795  0009FC  CFDE F00F          	movff	postinc2,___awmod@dividend
  2796  000A00  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2797  000A04  ECC8  F010         	call	___awmod	;wreg free
  2798  000A08  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2799  000A0C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2800  000A10  0E00               	movlw	0
  2801  000A12  6E18               	movwf	___awdiv@divisor+1,c
  2802  000A14  0E0A               	movlw	10
  2803  000A16  6E17               	movwf	___awdiv@divisor,c
  2804  000A18  EC47  F010         	call	___awdiv	;wreg free
  2805  000A1C  1E15               	comf	?___awdiv,f,c
  2806  000A1E  1E16               	comf	?___awdiv+1,f,c
  2807  000A20  4A15               	infsnz	?___awdiv,f,c
  2808  000A22  2A16               	incf	?___awdiv+1,f,c
  2809  000A24  5015               	movf	?___awdiv,w,c
  2810  000A26  242C               	addwf	??_exibir_lcd,w,c
  2811  000A28  0100               	movlb	0	; () banked
  2812  000A2A  6F81               	movwf	exibir_lcd@e& (0+255),b
  2813  000A2C  5016               	movf	?___awdiv+1,w,c
  2814  000A2E  202D               	addwfc	??_exibir_lcd+1,w,c
  2815  000A30  0100               	movlb	0	; () banked
  2816  000A32  6F82               	movwf	(exibir_lcd@e+1)& (0+255),b
  2817                           
  2818                           ;display_LCD.c: 42: f=Relogio->segundo%10;
  2819  000A34  0100               	movlb	0	; () banked
  2820  000A36  EE20 F002          	lfsr	2,2
  2821  000A3A  5167               	movf	exibir_lcd@Relogio& (0+255),w,b
  2822  000A3C  26D9               	addwf	fsr2l,f,c
  2823  000A3E  5168               	movf	(exibir_lcd@Relogio+1)& (0+255),w,b
  2824  000A40  22DA               	addwfc	fsr2h,f,c
  2825  000A42  CFDE F00F          	movff	postinc2,___awmod@dividend
  2826  000A46  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2827  000A4A  0E00               	movlw	0
  2828  000A4C  6E12               	movwf	___awmod@divisor+1,c
  2829  000A4E  0E0A               	movlw	10
  2830  000A50  6E11               	movwf	___awmod@divisor,c
  2831  000A52  ECC8  F010         	call	___awmod	;wreg free
  2832  000A56  C00F  F083         	movff	?___awmod,exibir_lcd@f
  2833  000A5A  C010  F084         	movff	?___awmod+1,exibir_lcd@f+1
  2834                           
  2835                           ;display_LCD.c: 43: sprintf(str, "HORA: %d%d:%d%d:%d%d ", a, b, c, d, e, f);
  2836  000A5E  0E93               	movlw	low _str
  2837  000A60  6E1B               	movwf	sprintf@sp,c
  2838  000A62  0E00               	movlw	high _str
  2839  000A64  6E1C               	movwf	sprintf@sp+1,c
  2840  000A66  0E22               	movlw	low STR_1
  2841  000A68  6E1D               	movwf	sprintf@f,c
  2842  000A6A  0E08               	movlw	high STR_1
  2843  000A6C  6E1E               	movwf	sprintf@f+1,c
  2844  000A6E  C079  F01F         	movff	exibir_lcd@a,?_sprintf+4
  2845  000A72  C07A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  2846  000A76  C07B  F021         	movff	exibir_lcd@b,?_sprintf+6
  2847  000A7A  C07C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  2848  000A7E  C07D  F023         	movff	exibir_lcd@c,?_sprintf+8
  2849  000A82  C07E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  2850  000A86  C07F  F025         	movff	exibir_lcd@d,?_sprintf+10
  2851  000A8A  C080  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  2852  000A8E  C081  F027         	movff	exibir_lcd@e,?_sprintf+12
  2853  000A92  C082  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  2854  000A96  C083  F029         	movff	exibir_lcd@f,?_sprintf+14
  2855  000A9A  C084  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  2856  000A9E  EC2E  F00D         	call	_sprintf	;wreg free
  2857                           
  2858                           ;display_LCD.c: 44: SetDDRamAddr(0x00);
  2859  000AA2  0E00               	movlw	0
  2860  000AA4  EC57  F011         	call	_SetDDRamAddr
  2861                           
  2862                           ;display_LCD.c: 45: putrsXLCD(str);
  2863  000AA8  0E93               	movlw	low _str
  2864  000AAA  6E11               	movwf	putrsXLCD@buffer,c
  2865  000AAC  0E00               	movlw	high _str
  2866  000AAE  6E12               	movwf	putrsXLCD@buffer+1,c
  2867  000AB0  EC00  F011         	call	_putrsXLCD	;wreg free
  2868                           
  2869                           ;display_LCD.c: 47: g=((Calendario->dia)/10)-(((Calendario->dia)%10)/10);
  2870  000AB4  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2871  000AB8  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2872  000ABC  CFDE F015          	movff	postinc2,___awdiv@dividend
  2873  000AC0  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2874  000AC4  0E00               	movlw	0
  2875  000AC6  6E18               	movwf	___awdiv@divisor+1,c
  2876  000AC8  0E0A               	movlw	10
  2877  000ACA  6E17               	movwf	___awdiv@divisor,c
  2878  000ACC  EC47  F010         	call	___awdiv	;wreg free
  2879  000AD0  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2880  000AD4  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2881  000AD8  0E00               	movlw	0
  2882  000ADA  6E12               	movwf	___awmod@divisor+1,c
  2883  000ADC  0E0A               	movlw	10
  2884  000ADE  6E11               	movwf	___awmod@divisor,c
  2885  000AE0  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2886  000AE4  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2887  000AE8  CFDE F00F          	movff	postinc2,___awmod@dividend
  2888  000AEC  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2889  000AF0  ECC8  F010         	call	___awmod	;wreg free
  2890  000AF4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2891  000AF8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2892  000AFC  0E00               	movlw	0
  2893  000AFE  6E18               	movwf	___awdiv@divisor+1,c
  2894  000B00  0E0A               	movlw	10
  2895  000B02  6E17               	movwf	___awdiv@divisor,c
  2896  000B04  EC47  F010         	call	___awdiv	;wreg free
  2897  000B08  1E15               	comf	?___awdiv,f,c
  2898  000B0A  1E16               	comf	?___awdiv+1,f,c
  2899  000B0C  4A15               	infsnz	?___awdiv,f,c
  2900  000B0E  2A16               	incf	?___awdiv+1,f,c
  2901  000B10  5015               	movf	?___awdiv,w,c
  2902  000B12  242C               	addwf	??_exibir_lcd,w,c
  2903  000B14  0100               	movlb	0	; () banked
  2904  000B16  6F6D               	movwf	exibir_lcd@g& (0+255),b
  2905  000B18  5016               	movf	?___awdiv+1,w,c
  2906  000B1A  202D               	addwfc	??_exibir_lcd+1,w,c
  2907  000B1C  0100               	movlb	0	; () banked
  2908  000B1E  6F6E               	movwf	(exibir_lcd@g+1)& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;display_LCD.c: 48: h=Calendario->dia%10;
  2912  000B20  C06B  FFD9         	movff	exibir_lcd@Calendario,fsr2l
  2913  000B24  C06C  FFDA         	movff	exibir_lcd@Calendario+1,fsr2h
  2914  000B28  CFDE F00F          	movff	postinc2,___awmod@dividend
  2915  000B2C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2916  000B30  0E00               	movlw	0
  2917  000B32  6E12               	movwf	___awmod@divisor+1,c
  2918  000B34  0E0A               	movlw	10
  2919  000B36  6E11               	movwf	___awmod@divisor,c
  2920  000B38  ECC8  F010         	call	___awmod	;wreg free
  2921  000B3C  C00F  F06F         	movff	?___awmod,exibir_lcd@h
  2922  000B40  C010  F070         	movff	?___awmod+1,exibir_lcd@h+1
  2923                           
  2924                           ;display_LCD.c: 49: i=((Calendario->mes)/10)-(((Calendario->mes)%10)/10);
  2925  000B44  0100               	movlb	0	; () banked
  2926  000B46  EE20 F002          	lfsr	2,2
  2927  000B4A  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2928  000B4C  26D9               	addwf	fsr2l,f,c
  2929  000B4E  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2930  000B50  22DA               	addwfc	fsr2h,f,c
  2931  000B52  CFDE F015          	movff	postinc2,___awdiv@dividend
  2932  000B56  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  2933  000B5A  0E00               	movlw	0
  2934  000B5C  6E18               	movwf	___awdiv@divisor+1,c
  2935  000B5E  0E0A               	movlw	10
  2936  000B60  6E17               	movwf	___awdiv@divisor,c
  2937  000B62  EC47  F010         	call	___awdiv	;wreg free
  2938  000B66  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  2939  000B6A  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  2940  000B6E  0E00               	movlw	0
  2941  000B70  6E12               	movwf	___awmod@divisor+1,c
  2942  000B72  0E0A               	movlw	10
  2943  000B74  6E11               	movwf	___awmod@divisor,c
  2944  000B76  0100               	movlb	0	; () banked
  2945  000B78  EE20 F002          	lfsr	2,2
  2946  000B7C  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2947  000B7E  26D9               	addwf	fsr2l,f,c
  2948  000B80  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2949  000B82  22DA               	addwfc	fsr2h,f,c
  2950  000B84  CFDE F00F          	movff	postinc2,___awmod@dividend
  2951  000B88  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2952  000B8C  ECC8  F010         	call	___awmod	;wreg free
  2953  000B90  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2954  000B94  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2955  000B98  0E00               	movlw	0
  2956  000B9A  6E18               	movwf	___awdiv@divisor+1,c
  2957  000B9C  0E0A               	movlw	10
  2958  000B9E  6E17               	movwf	___awdiv@divisor,c
  2959  000BA0  EC47  F010         	call	___awdiv	;wreg free
  2960  000BA4  1E15               	comf	?___awdiv,f,c
  2961  000BA6  1E16               	comf	?___awdiv+1,f,c
  2962  000BA8  4A15               	infsnz	?___awdiv,f,c
  2963  000BAA  2A16               	incf	?___awdiv+1,f,c
  2964  000BAC  5015               	movf	?___awdiv,w,c
  2965  000BAE  242C               	addwf	??_exibir_lcd,w,c
  2966  000BB0  0100               	movlb	0	; () banked
  2967  000BB2  6F71               	movwf	exibir_lcd@i& (0+255),b
  2968  000BB4  5016               	movf	?___awdiv+1,w,c
  2969  000BB6  202D               	addwfc	??_exibir_lcd+1,w,c
  2970  000BB8  0100               	movlb	0	; () banked
  2971  000BBA  6F72               	movwf	(exibir_lcd@i+1)& (0+255),b
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;display_LCD.c: 50: j=Calendario->mes%10;
  2975  000BBC  0100               	movlb	0	; () banked
  2976  000BBE  EE20 F002          	lfsr	2,2
  2977  000BC2  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2978  000BC4  26D9               	addwf	fsr2l,f,c
  2979  000BC6  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2980  000BC8  22DA               	addwfc	fsr2h,f,c
  2981  000BCA  CFDE F00F          	movff	postinc2,___awmod@dividend
  2982  000BCE  CFDD F010          	movff	postdec2,___awmod@dividend+1
  2983  000BD2  0E00               	movlw	0
  2984  000BD4  6E12               	movwf	___awmod@divisor+1,c
  2985  000BD6  0E0A               	movlw	10
  2986  000BD8  6E11               	movwf	___awmod@divisor,c
  2987  000BDA  ECC8  F010         	call	___awmod	;wreg free
  2988  000BDE  C00F  F073         	movff	?___awmod,exibir_lcd@j
  2989  000BE2  C010  F074         	movff	?___awmod+1,exibir_lcd@j+1
  2990                           
  2991                           ;display_LCD.c: 51: k=((Calendario->ano)/10)-(((Calendario->ano)%10)/10);
  2992  000BE6  0100               	movlb	0	; () banked
  2993  000BE8  EE20 F004          	lfsr	2,4
  2994  000BEC  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  2995  000BEE  26D9               	addwf	fsr2l,f,c
  2996  000BF0  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  2997  000BF2  22DA               	addwfc	fsr2h,f,c
  2998  000BF4  CFDE F015          	movff	postinc2,___awdiv@dividend
  2999  000BF8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3000  000BFC  0E00               	movlw	0
  3001  000BFE  6E18               	movwf	___awdiv@divisor+1,c
  3002  000C00  0E0A               	movlw	10
  3003  000C02  6E17               	movwf	___awdiv@divisor,c
  3004  000C04  EC47  F010         	call	___awdiv	;wreg free
  3005  000C08  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3006  000C0C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3007  000C10  0E00               	movlw	0
  3008  000C12  6E12               	movwf	___awmod@divisor+1,c
  3009  000C14  0E0A               	movlw	10
  3010  000C16  6E11               	movwf	___awmod@divisor,c
  3011  000C18  0100               	movlb	0	; () banked
  3012  000C1A  EE20 F004          	lfsr	2,4
  3013  000C1E  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3014  000C20  26D9               	addwf	fsr2l,f,c
  3015  000C22  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3016  000C24  22DA               	addwfc	fsr2h,f,c
  3017  000C26  CFDE F00F          	movff	postinc2,___awmod@dividend
  3018  000C2A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3019  000C2E  ECC8  F010         	call	___awmod	;wreg free
  3020  000C32  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3021  000C36  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3022  000C3A  0E00               	movlw	0
  3023  000C3C  6E18               	movwf	___awdiv@divisor+1,c
  3024  000C3E  0E0A               	movlw	10
  3025  000C40  6E17               	movwf	___awdiv@divisor,c
  3026  000C42  EC47  F010         	call	___awdiv	;wreg free
  3027  000C46  1E15               	comf	?___awdiv,f,c
  3028  000C48  1E16               	comf	?___awdiv+1,f,c
  3029  000C4A  4A15               	infsnz	?___awdiv,f,c
  3030  000C4C  2A16               	incf	?___awdiv+1,f,c
  3031  000C4E  5015               	movf	?___awdiv,w,c
  3032  000C50  242C               	addwf	??_exibir_lcd,w,c
  3033  000C52  0100               	movlb	0	; () banked
  3034  000C54  6F75               	movwf	exibir_lcd@k& (0+255),b
  3035  000C56  5016               	movf	?___awdiv+1,w,c
  3036  000C58  202D               	addwfc	??_exibir_lcd+1,w,c
  3037  000C5A  0100               	movlb	0	; () banked
  3038  000C5C  6F76               	movwf	(exibir_lcd@k+1)& (0+255),b
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;display_LCD.c: 52: l=Calendario->ano%10;
  3042  000C5E  0100               	movlb	0	; () banked
  3043  000C60  EE20 F004          	lfsr	2,4
  3044  000C64  516B               	movf	exibir_lcd@Calendario& (0+255),w,b
  3045  000C66  26D9               	addwf	fsr2l,f,c
  3046  000C68  516C               	movf	(exibir_lcd@Calendario+1)& (0+255),w,b
  3047  000C6A  22DA               	addwfc	fsr2h,f,c
  3048  000C6C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3049  000C70  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3050  000C74  0E00               	movlw	0
  3051  000C76  6E12               	movwf	___awmod@divisor+1,c
  3052  000C78  0E0A               	movlw	10
  3053  000C7A  6E11               	movwf	___awmod@divisor,c
  3054  000C7C  ECC8  F010         	call	___awmod	;wreg free
  3055  000C80  C00F  F077         	movff	?___awmod,exibir_lcd@l
  3056  000C84  C010  F078         	movff	?___awmod+1,exibir_lcd@l+1
  3057                           
  3058                           ;display_LCD.c: 53: sprintf(str, "DATA: %d%d:%d%d:%d%d", g, h, i, j, k, l);
  3059  000C88  0E93               	movlw	low _str
  3060  000C8A  6E1B               	movwf	sprintf@sp,c
  3061  000C8C  0E00               	movlw	high _str
  3062  000C8E  6E1C               	movwf	sprintf@sp+1,c
  3063  000C90  0E38               	movlw	low STR_2
  3064  000C92  6E1D               	movwf	sprintf@f,c
  3065  000C94  0E08               	movlw	high STR_2
  3066  000C96  6E1E               	movwf	sprintf@f+1,c
  3067  000C98  C06D  F01F         	movff	exibir_lcd@g,?_sprintf+4
  3068  000C9C  C06E  F020         	movff	exibir_lcd@g+1,?_sprintf+5
  3069  000CA0  C06F  F021         	movff	exibir_lcd@h,?_sprintf+6
  3070  000CA4  C070  F022         	movff	exibir_lcd@h+1,?_sprintf+7
  3071  000CA8  C071  F023         	movff	exibir_lcd@i,?_sprintf+8
  3072  000CAC  C072  F024         	movff	exibir_lcd@i+1,?_sprintf+9
  3073  000CB0  C073  F025         	movff	exibir_lcd@j,?_sprintf+10
  3074  000CB4  C074  F026         	movff	exibir_lcd@j+1,?_sprintf+11
  3075  000CB8  C075  F027         	movff	exibir_lcd@k,?_sprintf+12
  3076  000CBC  C076  F028         	movff	exibir_lcd@k+1,?_sprintf+13
  3077  000CC0  C077  F029         	movff	exibir_lcd@l,?_sprintf+14
  3078  000CC4  C078  F02A         	movff	exibir_lcd@l+1,?_sprintf+15
  3079  000CC8  EC2E  F00D         	call	_sprintf	;wreg free
  3080                           
  3081                           ;display_LCD.c: 54: SetDDRamAddr(0x40);
  3082  000CCC  0E40               	movlw	64
  3083  000CCE  EC57  F011         	call	_SetDDRamAddr
  3084                           
  3085                           ;display_LCD.c: 55: putrsXLCD(str);
  3086  000CD2  0E93               	movlw	low _str
  3087  000CD4  6E11               	movwf	putrsXLCD@buffer,c
  3088  000CD6  0E00               	movlw	high _str
  3089  000CD8  6E12               	movwf	putrsXLCD@buffer+1,c
  3090  000CDA  EC00  F011         	call	_putrsXLCD	;wreg free
  3091  000CDE                     l3160:
  3092                           
  3093                           ;display_LCD.c: 56: }
  3094                           ;display_LCD.c: 59: if(tela_exibida==1){
  3095  000CDE  043A               	decf	_tela_exibida,w,c
  3096  000CE0  103B               	iorwf	_tela_exibida+1,w,c
  3097  000CE2  A4D8               	btfss	status,2,c
  3098  000CE4  D11E               	goto	l3174
  3099                           
  3100                           ;display_LCD.c: 60: a=((Despertador->hora)/10)-(((Despertador->hora)%10)/10);
  3101  000CE6  0100               	movlb	0	; () banked
  3102  000CE8  EE20 F004          	lfsr	2,4
  3103  000CEC  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3104  000CEE  26D9               	addwf	fsr2l,f,c
  3105  000CF0  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3106  000CF2  22DA               	addwfc	fsr2h,f,c
  3107  000CF4  CFDE F015          	movff	postinc2,___awdiv@dividend
  3108  000CF8  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3109  000CFC  0E00               	movlw	0
  3110  000CFE  6E18               	movwf	___awdiv@divisor+1,c
  3111  000D00  0E0A               	movlw	10
  3112  000D02  6E17               	movwf	___awdiv@divisor,c
  3113  000D04  EC47  F010         	call	___awdiv	;wreg free
  3114  000D08  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3115  000D0C  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3116  000D10  0E00               	movlw	0
  3117  000D12  6E12               	movwf	___awmod@divisor+1,c
  3118  000D14  0E0A               	movlw	10
  3119  000D16  6E11               	movwf	___awmod@divisor,c
  3120  000D18  0100               	movlb	0	; () banked
  3121  000D1A  EE20 F004          	lfsr	2,4
  3122  000D1E  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3123  000D20  26D9               	addwf	fsr2l,f,c
  3124  000D22  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3125  000D24  22DA               	addwfc	fsr2h,f,c
  3126  000D26  CFDE F00F          	movff	postinc2,___awmod@dividend
  3127  000D2A  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3128  000D2E  ECC8  F010         	call	___awmod	;wreg free
  3129  000D32  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3130  000D36  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3131  000D3A  0E00               	movlw	0
  3132  000D3C  6E18               	movwf	___awdiv@divisor+1,c
  3133  000D3E  0E0A               	movlw	10
  3134  000D40  6E17               	movwf	___awdiv@divisor,c
  3135  000D42  EC47  F010         	call	___awdiv	;wreg free
  3136  000D46  1E15               	comf	?___awdiv,f,c
  3137  000D48  1E16               	comf	?___awdiv+1,f,c
  3138  000D4A  4A15               	infsnz	?___awdiv,f,c
  3139  000D4C  2A16               	incf	?___awdiv+1,f,c
  3140  000D4E  5015               	movf	?___awdiv,w,c
  3141  000D50  242C               	addwf	??_exibir_lcd,w,c
  3142  000D52  0100               	movlb	0	; () banked
  3143  000D54  6F79               	movwf	exibir_lcd@a& (0+255),b
  3144  000D56  5016               	movf	?___awdiv+1,w,c
  3145  000D58  202D               	addwfc	??_exibir_lcd+1,w,c
  3146  000D5A  0100               	movlb	0	; () banked
  3147  000D5C  6F7A               	movwf	(exibir_lcd@a+1)& (0+255),b
  3148                           
  3149                           ;display_LCD.c: 61: b=Despertador->hora%10;
  3150  000D5E  0100               	movlb	0	; () banked
  3151  000D60  EE20 F004          	lfsr	2,4
  3152  000D64  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3153  000D66  26D9               	addwf	fsr2l,f,c
  3154  000D68  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3155  000D6A  22DA               	addwfc	fsr2h,f,c
  3156  000D6C  CFDE F00F          	movff	postinc2,___awmod@dividend
  3157  000D70  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3158  000D74  0E00               	movlw	0
  3159  000D76  6E12               	movwf	___awmod@divisor+1,c
  3160  000D78  0E0A               	movlw	10
  3161  000D7A  6E11               	movwf	___awmod@divisor,c
  3162  000D7C  ECC8  F010         	call	___awmod	;wreg free
  3163  000D80  C00F  F07B         	movff	?___awmod,exibir_lcd@b
  3164  000D84  C010  F07C         	movff	?___awmod+1,exibir_lcd@b+1
  3165                           
  3166                           ;display_LCD.c: 62: c=((Despertador->minuto)/10)-(((Despertador->minuto)%10)/10);
  3167  000D88  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3168  000D8C  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3169  000D90  CFDE F015          	movff	postinc2,___awdiv@dividend
  3170  000D94  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3171  000D98  0E00               	movlw	0
  3172  000D9A  6E18               	movwf	___awdiv@divisor+1,c
  3173  000D9C  0E0A               	movlw	10
  3174  000D9E  6E17               	movwf	___awdiv@divisor,c
  3175  000DA0  EC47  F010         	call	___awdiv	;wreg free
  3176  000DA4  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3177  000DA8  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3178  000DAC  0E00               	movlw	0
  3179  000DAE  6E12               	movwf	___awmod@divisor+1,c
  3180  000DB0  0E0A               	movlw	10
  3181  000DB2  6E11               	movwf	___awmod@divisor,c
  3182  000DB4  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3183  000DB8  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3184  000DBC  CFDE F00F          	movff	postinc2,___awmod@dividend
  3185  000DC0  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3186  000DC4  ECC8  F010         	call	___awmod	;wreg free
  3187  000DC8  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3188  000DCC  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3189  000DD0  0E00               	movlw	0
  3190  000DD2  6E18               	movwf	___awdiv@divisor+1,c
  3191  000DD4  0E0A               	movlw	10
  3192  000DD6  6E17               	movwf	___awdiv@divisor,c
  3193  000DD8  EC47  F010         	call	___awdiv	;wreg free
  3194  000DDC  1E15               	comf	?___awdiv,f,c
  3195  000DDE  1E16               	comf	?___awdiv+1,f,c
  3196  000DE0  4A15               	infsnz	?___awdiv,f,c
  3197  000DE2  2A16               	incf	?___awdiv+1,f,c
  3198  000DE4  5015               	movf	?___awdiv,w,c
  3199  000DE6  242C               	addwf	??_exibir_lcd,w,c
  3200  000DE8  0100               	movlb	0	; () banked
  3201  000DEA  6F7D               	movwf	exibir_lcd@c& (0+255),b
  3202  000DEC  5016               	movf	?___awdiv+1,w,c
  3203  000DEE  202D               	addwfc	??_exibir_lcd+1,w,c
  3204  000DF0  0100               	movlb	0	; () banked
  3205  000DF2  6F7E               	movwf	(exibir_lcd@c+1)& (0+255),b
  3206                           
  3207                           ;display_LCD.c: 63: d=Despertador->minuto%10;
  3208  000DF4  C069  FFD9         	movff	exibir_lcd@Despertador,fsr2l
  3209  000DF8  C06A  FFDA         	movff	exibir_lcd@Despertador+1,fsr2h
  3210  000DFC  CFDE F00F          	movff	postinc2,___awmod@dividend
  3211  000E00  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3212  000E04  0E00               	movlw	0
  3213  000E06  6E12               	movwf	___awmod@divisor+1,c
  3214  000E08  0E0A               	movlw	10
  3215  000E0A  6E11               	movwf	___awmod@divisor,c
  3216  000E0C  ECC8  F010         	call	___awmod	;wreg free
  3217  000E10  C00F  F07F         	movff	?___awmod,exibir_lcd@d
  3218  000E14  C010  F080         	movff	?___awmod+1,exibir_lcd@d+1
  3219                           
  3220                           ;display_LCD.c: 64: e=((Despertador->segundo)/10)-(((Despertador->segundo)%10)/10);
  3221  000E18  0100               	movlb	0	; () banked
  3222  000E1A  EE20 F002          	lfsr	2,2
  3223  000E1E  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3224  000E20  26D9               	addwf	fsr2l,f,c
  3225  000E22  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3226  000E24  22DA               	addwfc	fsr2h,f,c
  3227  000E26  CFDE F015          	movff	postinc2,___awdiv@dividend
  3228  000E2A  CFDD F016          	movff	postdec2,___awdiv@dividend+1
  3229  000E2E  0E00               	movlw	0
  3230  000E30  6E18               	movwf	___awdiv@divisor+1,c
  3231  000E32  0E0A               	movlw	10
  3232  000E34  6E17               	movwf	___awdiv@divisor,c
  3233  000E36  EC47  F010         	call	___awdiv	;wreg free
  3234  000E3A  C015  F02C         	movff	?___awdiv,??_exibir_lcd
  3235  000E3E  C016  F02D         	movff	?___awdiv+1,??_exibir_lcd+1
  3236  000E42  0E00               	movlw	0
  3237  000E44  6E12               	movwf	___awmod@divisor+1,c
  3238  000E46  0E0A               	movlw	10
  3239  000E48  6E11               	movwf	___awmod@divisor,c
  3240  000E4A  0100               	movlb	0	; () banked
  3241  000E4C  EE20 F002          	lfsr	2,2
  3242  000E50  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3243  000E52  26D9               	addwf	fsr2l,f,c
  3244  000E54  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3245  000E56  22DA               	addwfc	fsr2h,f,c
  3246  000E58  CFDE F00F          	movff	postinc2,___awmod@dividend
  3247  000E5C  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3248  000E60  ECC8  F010         	call	___awmod	;wreg free
  3249  000E64  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3250  000E68  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3251  000E6C  0E00               	movlw	0
  3252  000E6E  6E18               	movwf	___awdiv@divisor+1,c
  3253  000E70  0E0A               	movlw	10
  3254  000E72  6E17               	movwf	___awdiv@divisor,c
  3255  000E74  EC47  F010         	call	___awdiv	;wreg free
  3256  000E78  1E15               	comf	?___awdiv,f,c
  3257  000E7A  1E16               	comf	?___awdiv+1,f,c
  3258  000E7C  4A15               	infsnz	?___awdiv,f,c
  3259  000E7E  2A16               	incf	?___awdiv+1,f,c
  3260  000E80  5015               	movf	?___awdiv,w,c
  3261  000E82  242C               	addwf	??_exibir_lcd,w,c
  3262  000E84  0100               	movlb	0	; () banked
  3263  000E86  6F81               	movwf	exibir_lcd@e& (0+255),b
  3264  000E88  5016               	movf	?___awdiv+1,w,c
  3265  000E8A  202D               	addwfc	??_exibir_lcd+1,w,c
  3266  000E8C  0100               	movlb	0	; () banked
  3267  000E8E  6F82               	movwf	(exibir_lcd@e+1)& (0+255),b
  3268                           
  3269                           ;display_LCD.c: 65: f=Despertador->segundo%10;
  3270  000E90  0100               	movlb	0	; () banked
  3271  000E92  EE20 F002          	lfsr	2,2
  3272  000E96  5169               	movf	exibir_lcd@Despertador& (0+255),w,b
  3273  000E98  26D9               	addwf	fsr2l,f,c
  3274  000E9A  516A               	movf	(exibir_lcd@Despertador+1)& (0+255),w,b
  3275  000E9C  22DA               	addwfc	fsr2h,f,c
  3276  000E9E  CFDE F00F          	movff	postinc2,___awmod@dividend
  3277  000EA2  CFDD F010          	movff	postdec2,___awmod@dividend+1
  3278  000EA6  0E00               	movlw	0
  3279  000EA8  6E12               	movwf	___awmod@divisor+1,c
  3280  000EAA  0E0A               	movlw	10
  3281  000EAC  6E11               	movwf	___awmod@divisor,c
  3282  000EAE  ECC8  F010         	call	___awmod	;wreg free
  3283  000EB2  C00F  F083         	movff	?___awmod,exibir_lcd@f
  3284  000EB6  C010  F084         	movff	?___awmod+1,exibir_lcd@f+1
  3285                           
  3286                           ;display_LCD.c: 67: sprintf(str, "%d%d:%d%d:%d%d        ", a, b, c, d, e, f);
  3287  000EBA  0E93               	movlw	low _str
  3288  000EBC  6E1B               	movwf	sprintf@sp,c
  3289  000EBE  0E00               	movlw	high _str
  3290  000EC0  6E1C               	movwf	sprintf@sp+1,c
  3291  000EC2  0E0B               	movlw	low STR_3
  3292  000EC4  6E1D               	movwf	sprintf@f,c
  3293  000EC6  0E08               	movlw	high STR_3
  3294  000EC8  6E1E               	movwf	sprintf@f+1,c
  3295  000ECA  C079  F01F         	movff	exibir_lcd@a,?_sprintf+4
  3296  000ECE  C07A  F020         	movff	exibir_lcd@a+1,?_sprintf+5
  3297  000ED2  C07B  F021         	movff	exibir_lcd@b,?_sprintf+6
  3298  000ED6  C07C  F022         	movff	exibir_lcd@b+1,?_sprintf+7
  3299  000EDA  C07D  F023         	movff	exibir_lcd@c,?_sprintf+8
  3300  000EDE  C07E  F024         	movff	exibir_lcd@c+1,?_sprintf+9
  3301  000EE2  C07F  F025         	movff	exibir_lcd@d,?_sprintf+10
  3302  000EE6  C080  F026         	movff	exibir_lcd@d+1,?_sprintf+11
  3303  000EEA  C081  F027         	movff	exibir_lcd@e,?_sprintf+12
  3304  000EEE  C082  F028         	movff	exibir_lcd@e+1,?_sprintf+13
  3305  000EF2  C083  F029         	movff	exibir_lcd@f,?_sprintf+14
  3306  000EF6  C084  F02A         	movff	exibir_lcd@f+1,?_sprintf+15
  3307  000EFA  EC2E  F00D         	call	_sprintf	;wreg free
  3308                           
  3309                           ;display_LCD.c: 68: SetDDRamAddr(0x00);
  3310  000EFE  0E00               	movlw	0
  3311  000F00  EC57  F011         	call	_SetDDRamAddr
  3312                           
  3313                           ;display_LCD.c: 69: putrsXLCD("DESPERTADOR.  ");
  3314  000F04  0E72               	movlw	low STR_4
  3315  000F06  6E11               	movwf	putrsXLCD@buffer,c
  3316  000F08  0E08               	movlw	high STR_4
  3317  000F0A  6E12               	movwf	putrsXLCD@buffer+1,c
  3318  000F0C  EC00  F011         	call	_putrsXLCD	;wreg free
  3319                           
  3320                           ;display_LCD.c: 70: SetDDRamAddr(0x40);
  3321  000F10  0E40               	movlw	64
  3322  000F12  EC57  F011         	call	_SetDDRamAddr
  3323                           
  3324                           ;display_LCD.c: 71: putrsXLCD(str);
  3325  000F16  0E93               	movlw	low _str
  3326  000F18  6E11               	movwf	putrsXLCD@buffer,c
  3327  000F1A  0E00               	movlw	high _str
  3328  000F1C  6E12               	movwf	putrsXLCD@buffer+1,c
  3329  000F1E  EC00  F011         	call	_putrsXLCD	;wreg free
  3330  000F22                     l3174:
  3331                           
  3332                           ;display_LCD.c: 72: }
  3333                           ;display_LCD.c: 74: if(tela_exibida==2){
  3334  000F22  0E02               	movlw	2
  3335  000F24  183A               	xorwf	_tela_exibida,w,c
  3336  000F26  103B               	iorwf	_tela_exibida+1,w,c
  3337  000F28  A4D8               	btfss	status,2,c
  3338  000F2A  0012               	return	
  3339                           
  3340                           ;display_LCD.c: 75: gambiarra();
  3341  000F2C  ECDA  F012         	call	_gambiarra	;wreg free
  3342  000F30  0012               	return	
  3343  000F32                     __end_of_exibir_lcd:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           intcon	equ	0xFF2
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           postinc1	equ	0xFE6
  3353                           postdec1	equ	0xFE5
  3354                           fsr1h	equ	0xFE2
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           postdec2	equ	0xFDD
  3359                           plusw2	equ	0xFDB
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8
  3363                           
  3364 ;; *************** function _gambiarra *****************
  3365 ;; Defined at:
  3366 ;;		line 182 in file "exercicio_PIC_9_UART.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2   18[None  ] int 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3383 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    6
  3387 ;; This function calls:
  3388 ;;		_gambiarra_pro_serial
  3389 ;; This function is called by:
  3390 ;;		_exibir_lcd
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text12
  3395  0025B4                     __ptext12:
  3396                           	opt stack 0
  3397  0025B4                     _gambiarra:
  3398                           	opt stack 23
  3399                           
  3400                           ;exercicio_PIC_9_UART.c: 183: gambiarra_pro_serial();
  3401                           
  3402                           ;incstack = 0
  3403  0025B4  EC89  F010         	call	_gambiarra_pro_serial	;wreg free
  3404  0025B8  0012               	return		;funcret
  3405  0025BA                     __end_of_gambiarra:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           intcon	equ	0xFF2
  3412                           postinc0	equ	0xFEE
  3413                           wreg	equ	0xFE8
  3414                           postinc1	equ	0xFE6
  3415                           postdec1	equ	0xFE5
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           indf2	equ	0xFDF
  3419                           postinc2	equ	0xFDE
  3420                           postdec2	equ	0xFDD
  3421                           plusw2	equ	0xFDB
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _gambiarra_pro_serial *****************
  3427 ;; Defined at:
  3428 ;;		line 61 in file "serial.h"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		_SetDDRamAddr
  3451 ;;		_WriteCmdXLCD
  3452 ;;		_putrsXLCD
  3453 ;;		_sprintf
  3454 ;; This function is called by:
  3455 ;;		_gambiarra
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text13
  3460  002112                     __ptext13:
  3461                           	opt stack 0
  3462  002112                     _gambiarra_pro_serial:
  3463                           	opt stack 23
  3464                           
  3465                           ;serial.h: 64: WriteCmdXLCD(0x0C);
  3466                           
  3467                           ;incstack = 0
  3468  002112  0E0C               	movlw	12
  3469  002114  EC06  F012         	call	_WriteCmdXLCD
  3470                           
  3471                           ;serial.h: 65: SetDDRamAddr(0x00);
  3472  002118  0E00               	movlw	0
  3473  00211A  EC57  F011         	call	_SetDDRamAddr
  3474                           
  3475                           ;serial.h: 66: sprintf(str, "SERIAL:         ");
  3476  00211E  0E93               	movlw	low _str
  3477  002120  6E1B               	movwf	sprintf@sp,c
  3478  002122  0E00               	movlw	high _str
  3479  002124  6E1C               	movwf	sprintf@sp+1,c
  3480  002126  0E61               	movlw	low STR_5
  3481  002128  6E1D               	movwf	sprintf@f,c
  3482  00212A  0E08               	movlw	high STR_5
  3483  00212C  6E1E               	movwf	sprintf@f+1,c
  3484  00212E  EC2E  F00D         	call	_sprintf	;wreg free
  3485                           
  3486                           ;serial.h: 67: putrsXLCD(str);
  3487  002132  0E93               	movlw	low _str
  3488  002134  6E11               	movwf	putrsXLCD@buffer,c
  3489  002136  0E00               	movlw	high _str
  3490  002138  6E12               	movwf	putrsXLCD@buffer+1,c
  3491  00213A  EC00  F011         	call	_putrsXLCD	;wreg free
  3492                           
  3493                           ;serial.h: 68: SetDDRamAddr(0x40);
  3494  00213E  0E40               	movlw	64
  3495  002140  EC57  F011         	call	_SetDDRamAddr
  3496                           
  3497                           ;serial.h: 69: sprintf(str, "%d %d %d           ", BUFF_RESP[1]-48, BUFF_RESP[2]-48, BUF
      +                          F_RESP[0]-48);
  3498  002144  0E93               	movlw	low _str
  3499  002146  6E1B               	movwf	sprintf@sp,c
  3500  002148  0E00               	movlw	high _str
  3501  00214A  6E1C               	movwf	sprintf@sp+1,c
  3502  00214C  0E4D               	movlw	low STR_6
  3503  00214E  6E1D               	movwf	sprintf@f,c
  3504  002150  0E08               	movlw	high STR_6
  3505  002152  6E1E               	movwf	sprintf@f+1,c
  3506  002154  0ED0               	movlw	208
  3507  002156  0100               	movlb	0	; () banked
  3508  002158  2586               	addwf	(_BUFF_RESP+1)& (0+255),w,b
  3509  00215A  6E1F               	movwf	?_sprintf+4,c
  3510  00215C  6A20               	clrf	?_sprintf+5,c
  3511  00215E  0EFF               	movlw	255
  3512  002160  2220               	addwfc	?_sprintf+5,f,c
  3513  002162  0ED0               	movlw	208
  3514  002164  0100               	movlb	0	; () banked
  3515  002166  2587               	addwf	(_BUFF_RESP+2)& (0+255),w,b
  3516  002168  6E21               	movwf	?_sprintf+6,c
  3517  00216A  6A22               	clrf	?_sprintf+7,c
  3518  00216C  0EFF               	movlw	255
  3519  00216E  2222               	addwfc	?_sprintf+7,f,c
  3520  002170  0ED0               	movlw	208
  3521  002172  0100               	movlb	0	; () banked
  3522  002174  2585               	addwf	_BUFF_RESP& (0+255),w,b
  3523  002176  6E23               	movwf	?_sprintf+8,c
  3524  002178  6A24               	clrf	?_sprintf+9,c
  3525  00217A  0EFF               	movlw	255
  3526  00217C  2224               	addwfc	?_sprintf+9,f,c
  3527  00217E  EC2E  F00D         	call	_sprintf	;wreg free
  3528                           
  3529                           ;serial.h: 70: putrsXLCD(str);
  3530  002182  0E93               	movlw	low _str
  3531  002184  6E11               	movwf	putrsXLCD@buffer,c
  3532  002186  0E00               	movlw	high _str
  3533  002188  6E12               	movwf	putrsXLCD@buffer+1,c
  3534  00218A  EC00  F011         	call	_putrsXLCD	;wreg free
  3535  00218E  0012               	return		;funcret
  3536  002190                     __end_of_gambiarra_pro_serial:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           intcon	equ	0xFF2
  3543                           postinc0	equ	0xFEE
  3544                           wreg	equ	0xFE8
  3545                           postinc1	equ	0xFE6
  3546                           postdec1	equ	0xFE5
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           plusw2	equ	0xFDB
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _sprintf *****************
  3558 ;; Defined at:
  3559 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  sp              2   26[COMRAM] PTR unsigned char 
  3562 ;;		 -> str(16), 
  3563 ;;  f               2   28[COMRAM] PTR const unsigned char 
  3564 ;;		 -> STR_6(20), STR_5(17), STR_3(23), STR_2(21), 
  3565 ;;		 -> STR_1(22), 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  tmpval          4    0        struct .
  3568 ;;  cp              3    0        PTR const unsigned char 
  3569 ;;  val             2    4[BANK0 ] unsigned int 
  3570 ;;  ap              2    0[BANK0 ] PTR void [1]
  3571 ;;		 -> ?_sprintf(2), 
  3572 ;;  len             2    0        unsigned int 
  3573 ;;  c               1    6[BANK0 ] char 
  3574 ;;  prec            1    3[BANK0 ] char 
  3575 ;;  flag            1    2[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2   26[COMRAM] int 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3585 ;;      Params:        16       0       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       7       0       0       0       0       0       0       0
  3587 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3588 ;;      Totals:        17       7       0       0       0       0       0       0       0
  3589 ;;Total ram usage:       24 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		___lwdiv
  3594 ;;		___lwmod
  3595 ;; This function is called by:
  3596 ;;		_exibir_lcd
  3597 ;;		_gambiarra_pro_serial
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text14
  3602  001A5C                     __ptext14:
  3603                           	opt stack 0
  3604  001A5C                     _sprintf:
  3605                           	opt stack 27
  3606                           
  3607                           ;doprnt.c: 494: va_list ap;
  3608                           ;doprnt.c: 499: signed char c;
  3609                           ;doprnt.c: 506: signed char prec;
  3610                           ;doprnt.c: 508: unsigned char flag;
  3611                           ;doprnt.c: 523: union {
  3612                           ;doprnt.c: 524: unsigned long vd;
  3613                           ;doprnt.c: 525: double integ;
  3614                           ;doprnt.c: 526: } tmpval;
  3615                           ;doprnt.c: 528: unsigned int val;
  3616                           ;doprnt.c: 529: unsigned len;
  3617                           ;doprnt.c: 530: const char * cp;
  3618                           ;doprnt.c: 533: *ap = __va_start();
  3619                           
  3620                           ;incstack = 0
  3621  001A5C  0E1F               	movlw	low (?_sprintf+4)
  3622  001A5E  0100               	movlb	0	; () banked
  3623  001A60  6F60               	movwf	sprintf@ap& (0+255),b
  3624  001A62  0E00               	movlw	high (?_sprintf+4)
  3625  001A64  0100               	movlb	0	; () banked
  3626  001A66  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  3627                           
  3628                           ;doprnt.c: 536: while(c = *f++) {
  3629  001A68  D09D               	goto	l3114
  3630  001A6A                     l3062:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;doprnt.c: 538: if(c != '%')
  3634  001A6A  0E25               	movlw	37
  3635  001A6C  0100               	movlb	0	; () banked
  3636  001A6E  1966               	xorwf	sprintf@c& (0+255),w,b
  3637  001A70  B4D8               	btfsc	status,2,c
  3638  001A72  D009               	goto	l3068
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;doprnt.c: 540: {
  3642                           ;doprnt.c: 541: ((*sp++ = (c)));
  3643  001A74  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3644  001A78  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3645  001A7C  C066  FFDF         	movff	sprintf@c,indf2
  3646                           
  3647                           ; BSR set to: 0
  3648  001A80  4A1B               	infsnz	sprintf@sp,f,c
  3649  001A82  2A1C               	incf	sprintf@sp+1,f,c
  3650                           
  3651                           ;doprnt.c: 542: continue;
  3652  001A84  D08F               	goto	l3114
  3653  001A86                     l3068:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;doprnt.c: 543: }
  3657                           ;doprnt.c: 548: flag = 0;
  3658  001A86  0E00               	movlw	0
  3659  001A88  0100               	movlb	0	; () banked
  3660  001A8A  6F62               	movwf	sprintf@flag& (0+255),b
  3661                           
  3662                           ; BSR set to: 0
  3663                           
  3664                           ; BSR set to: 0
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;doprnt.c: 822: }
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;doprnt.c: 813: continue;
  3671                           
  3672                           ;doprnt.c: 802: default:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;doprnt.c: 698: case 'i':
  3676                           ;doprnt.c: 699: break;
  3677                           
  3678                           ; BSR set to: 0
  3679                           
  3680                           ;doprnt.c: 697: case 'd':
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;doprnt.c: 638: goto alldone;
  3684                           
  3685                           ;doprnt.c: 637: case 0:
  3686                           
  3687                           ;doprnt.c: 635: switch(c = *f++) {
  3688  001A8C  C01D  FFF6         	movff	sprintf@f,tblptrl
  3689  001A90  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3690  001A94  4A1D               	infsnz	sprintf@f,f,c
  3691  001A96  2A1E               	incf	sprintf@f+1,f,c
  3692  001A98                     	if	0	;tblptru may be non-zero
  3693  001A98                     	endif
  3694  001A98                     	if	0	;tblptru may be non-zero
  3695  001A98                     	endif
  3696  001A98  0008               	tblrd		*
  3697  001A9A  CFF5 F066          	movff	tablat,sprintf@c
  3698  001A9E  0100               	movlb	0	; () banked
  3699  001AA0  5166               	movf	sprintf@c& (0+255),w,b
  3700                           
  3701                           ; Switch size 1, requested type "space"
  3702                           ; Number of cases is 3, Range of values is 0 to 105
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; simple_byte           10     6 (average)
  3706                           ;	Chosen strategy is simple_byte
  3707  001AA2  0A00               	xorlw	0	; case 0
  3708  001AA4  B4D8               	btfsc	status,2,c
  3709  001AA6  D08B               	goto	l3116
  3710  001AA8  0A64               	xorlw	100	; case 100
  3711  001AAA  B4D8               	btfsc	status,2,c
  3712  001AAC  D003               	goto	l3074
  3713  001AAE  0A0D               	xorlw	13	; case 105
  3714  001AB0  A4D8               	btfss	status,2,c
  3715  001AB2  D078               	goto	l3114
  3716  001AB4                     l3074:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;doprnt.c: 1253: {
  3720                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3721  001AB4  C060  FFD9         	movff	sprintf@ap,fsr2l
  3722  001AB8  C061  FFDA         	movff	sprintf@ap+1,fsr2h
  3723  001ABC  CFDE F064          	movff	postinc2,sprintf@val
  3724  001AC0  CFDD F065          	movff	postdec2,sprintf@val+1
  3725                           
  3726                           ; BSR set to: 0
  3727  001AC4  0E02               	movlw	2
  3728  001AC6  0100               	movlb	0	; () banked
  3729  001AC8  2760               	addwf	sprintf@ap& (0+255),f,b
  3730  001ACA  0E00               	movlw	0
  3731  001ACC  2361               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;doprnt.c: 1261: if((int)val < 0) {
  3735  001ACE  0100               	movlb	0	; () banked
  3736  001AD0  AF65               	btfss	(sprintf@val+1)& (0+255),7,b
  3737  001AD2  D008               	goto	l3084
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;doprnt.c: 1262: flag |= 0x03;
  3741  001AD4  0E03               	movlw	3
  3742  001AD6  0100               	movlb	0	; () banked
  3743  001AD8  1362               	iorwf	sprintf@flag& (0+255),f,b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;doprnt.c: 1263: val = -val;
  3747  001ADA  0100               	movlb	0	; () banked
  3748  001ADC  6D64               	negf	sprintf@val& (0+255),b
  3749  001ADE  1F65               	comf	(sprintf@val+1)& (0+255),f,b
  3750  001AE0  B0D8               	btfsc	status,0,c
  3751  001AE2  2B65               	incf	(sprintf@val+1)& (0+255),f,b
  3752  001AE4                     l3084:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;doprnt.c: 1264: }
  3756                           ;doprnt.c: 1266: }
  3757                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3758  001AE4  0E01               	movlw	1
  3759  001AE6  0100               	movlb	0	; () banked
  3760  001AE8  6F66               	movwf	sprintf@c& (0+255),b
  3761  001AEA                     l3086:
  3762                           
  3763                           ; BSR set to: 0
  3764  001AEA  0E05               	movlw	5
  3765  001AEC  0100               	movlb	0	; () banked
  3766  001AEE  1966               	xorwf	sprintf@c& (0+255),w,b
  3767  001AF0  B4D8               	btfsc	status,2,c
  3768  001AF2  D016               	goto	l3098
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;doprnt.c: 1306: if(val < dpowers[c])
  3772                           
  3773                           ; BSR set to: 0
  3774                           
  3775                           ; BSR set to: 0
  3776  001AF4  0100               	movlb	0	; () banked
  3777  001AF6  5166               	movf	sprintf@c& (0+255),w,b
  3778  001AF8  0D02               	mullw	2
  3779  001AFA  0E01               	movlw	low _dpowers
  3780  001AFC  24F3               	addwf	prodl,w,c
  3781  001AFE  6EF6               	movwf	tblptrl,c
  3782  001B00  0E08               	movlw	high _dpowers
  3783  001B02  20F4               	addwfc	prodh,w,c
  3784  001B04  6EF7               	movwf	tblptrh,c
  3785  001B06                     	if	0	;There are less than 3 active tblptr bytes
  3786  001B06                     	endif
  3787  001B06  0009               	tblrd		*+
  3788  001B08  50F5               	movf	tablat,w,c
  3789  001B0A  0100               	movlb	0	; () banked
  3790  001B0C  5D64               	subwf	sprintf@val& (0+255),w,b
  3791  001B0E  0009               	tblrd		*+
  3792  001B10  50F5               	movf	tablat,w,c
  3793  001B12  0100               	movlb	0	; () banked
  3794  001B14  5965               	subwfb	(sprintf@val+1)& (0+255),w,b
  3795  001B16  A0D8               	btfss	status,0,c
  3796  001B18  D003               	goto	l3098
  3797                           
  3798                           ; BSR set to: 0
  3799                           
  3800                           ; BSR set to: 0
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;doprnt.c: 1307: break;
  3804  001B1A  0100               	movlb	0	; () banked
  3805  001B1C  2B66               	incf	sprintf@c& (0+255),f,b
  3806  001B1E  D7E5               	goto	l3086
  3807  001B20                     l3098:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;doprnt.c: 1422: {
  3811                           ;doprnt.c: 1438: if(flag & 0x03)
  3812  001B20  C062  F02B         	movff	sprintf@flag,??_sprintf
  3813  001B24  0E03               	movlw	3
  3814  001B26  162B               	andwf	??_sprintf,f,c
  3815  001B28  B4D8               	btfsc	status,2,c
  3816  001B2A  D008               	goto	l3104
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3820  001B2C  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3821  001B30  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3822  001B34  0E2D               	movlw	45
  3823  001B36  6EDF               	movwf	indf2,c
  3824                           
  3825                           ; BSR set to: 0
  3826  001B38  4A1B               	infsnz	sprintf@sp,f,c
  3827  001B3A  2A1C               	incf	sprintf@sp+1,f,c
  3828  001B3C                     l3104:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;doprnt.c: 1469: }
  3832                           ;doprnt.c: 1472: prec = c;
  3833  001B3C  C066  F063         	movff	sprintf@c,sprintf@prec
  3834                           
  3835                           ;doprnt.c: 1474: while(prec--) {
  3836  001B40  D02B               	goto	l3112
  3837  001B42                     l3106:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;doprnt.c: 1478: {
  3841                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3842  001B42  0100               	movlb	0	; () banked
  3843  001B44  5163               	movf	sprintf@prec& (0+255),w,b
  3844  001B46  0D02               	mullw	2
  3845  001B48  0E01               	movlw	low _dpowers
  3846  001B4A  24F3               	addwf	prodl,w,c
  3847  001B4C  6EF6               	movwf	tblptrl,c
  3848  001B4E  0E08               	movlw	high _dpowers
  3849  001B50  20F4               	addwfc	prodh,w,c
  3850  001B52  6EF7               	movwf	tblptrh,c
  3851  001B54                     	if	0	;There are less than 3 active tblptr bytes
  3852  001B54                     	endif
  3853  001B54  0009               	tblrd		*+
  3854  001B56  CFF5 F011          	movff	tablat,___lwdiv@divisor
  3855  001B5A  000A               	tblrd		*-
  3856  001B5C  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  3857  001B60  C064  F00F         	movff	sprintf@val,___lwdiv@dividend
  3858  001B64  C065  F010         	movff	sprintf@val+1,___lwdiv@dividend+1
  3859  001B68  EC2E  F011         	call	___lwdiv	;wreg free
  3860  001B6C  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  3861  001B70  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  3862  001B74  0E00               	movlw	0
  3863  001B76  6E19               	movwf	___lwmod@divisor+1,c
  3864  001B78  0E0A               	movlw	10
  3865  001B7A  6E18               	movwf	___lwmod@divisor,c
  3866  001B7C  ECC6  F011         	call	___lwmod	;wreg free
  3867  001B80  5016               	movf	?___lwmod,w,c
  3868  001B82  0F30               	addlw	48
  3869  001B84  0100               	movlb	0	; () banked
  3870  001B86  6F66               	movwf	sprintf@c& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;doprnt.c: 1523: }
  3874                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3875  001B88  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3876  001B8C  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3877  001B90  C066  FFDF         	movff	sprintf@c,indf2
  3878                           
  3879                           ; BSR set to: 0
  3880  001B94  4A1B               	infsnz	sprintf@sp,f,c
  3881  001B96  2A1C               	incf	sprintf@sp+1,f,c
  3882  001B98                     l3112:
  3883                           
  3884                           ; BSR set to: 0
  3885  001B98  0100               	movlb	0	; () banked
  3886  001B9A  0763               	decf	sprintf@prec& (0+255),f,b
  3887  001B9C  0100               	movlb	0	; () banked
  3888  001B9E  2963               	incf	sprintf@prec& (0+255),w,b
  3889  001BA0  A4D8               	btfss	status,2,c
  3890  001BA2  D7CF               	goto	l3106
  3891  001BA4                     l3114:
  3892                           
  3893                           ; BSR set to: 0
  3894  001BA4  C01D  FFF6         	movff	sprintf@f,tblptrl
  3895  001BA8  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  3896  001BAC  4A1D               	infsnz	sprintf@f,f,c
  3897  001BAE  2A1E               	incf	sprintf@f+1,f,c
  3898  001BB0                     	if	0	;tblptru may be non-zero
  3899  001BB0                     	endif
  3900  001BB0                     	if	0	;tblptru may be non-zero
  3901  001BB0                     	endif
  3902  001BB0  0008               	tblrd		*
  3903  001BB2  CFF5 F066          	movff	tablat,sprintf@c
  3904  001BB6  0100               	movlb	0	; () banked
  3905  001BB8  5166               	movf	sprintf@c& (0+255),w,b
  3906  001BBA  A4D8               	btfss	status,2,c
  3907  001BBC  D756               	goto	l3062
  3908  001BBE                     l3116:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;doprnt.c: 1538: *sp = 0;
  3912  001BBE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  3913  001BC2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  3914  001BC6  0E00               	movlw	0
  3915  001BC8  6EDF               	movwf	indf2,c
  3916  001BCA  0012               	return	
  3917  001BCC                     __end_of_sprintf:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           intcon	equ	0xFF2
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           postinc1	equ	0xFE6
  3929                           postdec1	equ	0xFE5
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           postinc2	equ	0xFDE
  3934                           postdec2	equ	0xFDD
  3935                           plusw2	equ	0xFDB
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function ___lwmod *****************
  3941 ;; Defined at:
  3942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  dividend        2   21[COMRAM] unsigned int 
  3945 ;;  divisor         2   23[COMRAM] unsigned int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  counter         1   25[COMRAM] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2   21[COMRAM] unsigned int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3957 ;;      Params:         4       0       0       0       0       0       0       0       0
  3958 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3960 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        5 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_sprintf
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text15
  3972  00238C                     __ptext15:
  3973                           	opt stack 0
  3974  00238C                     ___lwmod:
  3975                           	opt stack 27
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;incstack = 0
  3979  00238C  5018               	movf	___lwmod@divisor,w,c
  3980  00238E  1019               	iorwf	___lwmod@divisor+1,w,c
  3981  002390  B4D8               	btfsc	status,2,c
  3982  002392  D018               	goto	l905
  3983  002394  0E01               	movlw	1
  3984  002396  6E1A               	movwf	___lwmod@counter,c
  3985  002398  D004               	goto	l3050
  3986  00239A                     l3048:
  3987  00239A  90D8               	bcf	status,0,c
  3988  00239C  3618               	rlcf	___lwmod@divisor,f,c
  3989  00239E  3619               	rlcf	___lwmod@divisor+1,f,c
  3990  0023A0  2A1A               	incf	___lwmod@counter,f,c
  3991  0023A2                     l3050:
  3992  0023A2  AE19               	btfss	___lwmod@divisor+1,7,c
  3993  0023A4  D7FA               	goto	l3048
  3994  0023A6                     l3052:
  3995  0023A6  5018               	movf	___lwmod@divisor,w,c
  3996  0023A8  5C16               	subwf	___lwmod@dividend,w,c
  3997  0023AA  5019               	movf	___lwmod@divisor+1,w,c
  3998  0023AC  5817               	subwfb	___lwmod@dividend+1,w,c
  3999  0023AE  A0D8               	btfss	status,0,c
  4000  0023B0  D004               	goto	l3056
  4001  0023B2  5018               	movf	___lwmod@divisor,w,c
  4002  0023B4  5E16               	subwf	___lwmod@dividend,f,c
  4003  0023B6  5019               	movf	___lwmod@divisor+1,w,c
  4004  0023B8  5A17               	subwfb	___lwmod@dividend+1,f,c
  4005  0023BA                     l3056:
  4006  0023BA  90D8               	bcf	status,0,c
  4007  0023BC  3219               	rrcf	___lwmod@divisor+1,f,c
  4008  0023BE  3218               	rrcf	___lwmod@divisor,f,c
  4009  0023C0  2E1A               	decfsz	___lwmod@counter,f,c
  4010  0023C2  D7F1               	goto	l3052
  4011  0023C4                     l905:
  4012  0023C4  C016  F016         	movff	___lwmod@dividend,?___lwmod
  4013  0023C8  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  4014  0023CC  0012               	return		;funcret
  4015  0023CE                     __end_of___lwmod:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           postinc1	equ	0xFE6
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           indf2	equ	0xFDF
  4031                           postinc2	equ	0xFDE
  4032                           postdec2	equ	0xFDD
  4033                           plusw2	equ	0xFDB
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function ___lwdiv *****************
  4039 ;; Defined at:
  4040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  dividend        2   14[COMRAM] unsigned int 
  4043 ;;  divisor         2   16[COMRAM] unsigned int 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  quotient        2   19[COMRAM] unsigned int 
  4046 ;;  counter         1   18[COMRAM] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2   14[COMRAM] unsigned int 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         4       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        7 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_sprintf
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text16
  4071  00225C                     __ptext16:
  4072                           	opt stack 0
  4073  00225C                     ___lwdiv:
  4074                           	opt stack 27
  4075                           
  4076                           ;incstack = 0
  4077  00225C  0E00               	movlw	0
  4078  00225E  6E15               	movwf	___lwdiv@quotient+1,c
  4079  002260  0E00               	movlw	0
  4080  002262  6E14               	movwf	___lwdiv@quotient,c
  4081  002264  5011               	movf	___lwdiv@divisor,w,c
  4082  002266  1012               	iorwf	___lwdiv@divisor+1,w,c
  4083  002268  B4D8               	btfsc	status,2,c
  4084  00226A  D01C               	goto	l895
  4085  00226C  0E01               	movlw	1
  4086  00226E  6E13               	movwf	___lwdiv@counter,c
  4087  002270  D004               	goto	l3030
  4088  002272                     l3028:
  4089  002272  90D8               	bcf	status,0,c
  4090  002274  3611               	rlcf	___lwdiv@divisor,f,c
  4091  002276  3612               	rlcf	___lwdiv@divisor+1,f,c
  4092  002278  2A13               	incf	___lwdiv@counter,f,c
  4093  00227A                     l3030:
  4094  00227A  AE12               	btfss	___lwdiv@divisor+1,7,c
  4095  00227C  D7FA               	goto	l3028
  4096  00227E                     l3032:
  4097  00227E  90D8               	bcf	status,0,c
  4098  002280  3614               	rlcf	___lwdiv@quotient,f,c
  4099  002282  3615               	rlcf	___lwdiv@quotient+1,f,c
  4100  002284  5011               	movf	___lwdiv@divisor,w,c
  4101  002286  5C0F               	subwf	___lwdiv@dividend,w,c
  4102  002288  5012               	movf	___lwdiv@divisor+1,w,c
  4103  00228A  5810               	subwfb	___lwdiv@dividend+1,w,c
  4104  00228C  A0D8               	btfss	status,0,c
  4105  00228E  D005               	goto	l3040
  4106  002290  5011               	movf	___lwdiv@divisor,w,c
  4107  002292  5E0F               	subwf	___lwdiv@dividend,f,c
  4108  002294  5012               	movf	___lwdiv@divisor+1,w,c
  4109  002296  5A10               	subwfb	___lwdiv@dividend+1,f,c
  4110  002298  8014               	bsf	___lwdiv@quotient,0,c
  4111  00229A                     l3040:
  4112  00229A  90D8               	bcf	status,0,c
  4113  00229C  3212               	rrcf	___lwdiv@divisor+1,f,c
  4114  00229E  3211               	rrcf	___lwdiv@divisor,f,c
  4115  0022A0  2E13               	decfsz	___lwdiv@counter,f,c
  4116  0022A2  D7ED               	goto	l3032
  4117  0022A4                     l895:
  4118  0022A4  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4119  0022A8  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4120  0022AC  0012               	return		;funcret
  4121  0022AE                     __end_of___lwdiv:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postinc1	equ	0xFE6
  4133                           postdec1	equ	0xFE5
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           plusw2	equ	0xFDB
  4140                           fsr2h	equ	0xFDA
  4141                           fsr2l	equ	0xFD9
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function _putrsXLCD *****************
  4145 ;; Defined at:
  4146 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  4149 ;;		 -> STR_4(15), str(16), 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         2       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4164 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    4
  4168 ;; This function calls:
  4169 ;;		_BusyXLCD
  4170 ;;		_WriteDataXLCD
  4171 ;; This function is called by:
  4172 ;;		_exibir_lcd
  4173 ;;		_gambiarra_pro_serial
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text17
  4178  002200                     __ptext17:
  4179                           	opt stack 0
  4180  002200                     _putrsXLCD:
  4181                           	opt stack 25
  4182                           
  4183                           ;incstack = 0
  4184  002200  D019               	goto	l2294
  4185  002202                     l2288:
  4186  002202  EC43  F012         	call	_BusyXLCD	;wreg free
  4187  002206  0900               	iorlw	0
  4188  002208  A4D8               	btfss	status,2,c
  4189  00220A  D7FB               	goto	l2288
  4190  00220C  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4191  002210  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4192  002214  6AF8               	clrf	tblptru,c
  4193  002216  0E07               	movlw	(high __ramtop+-1)
  4194  002218  64F7               	cpfsgt	tblptrh,c
  4195  00221A  D003               	bra	u1707
  4196  00221C  0008               	tblrd		*
  4197  00221E  50F5               	movf	tablat,w,c
  4198  002220  D005               	bra	u1700
  4199  002222                     u1707:
  4200  002222  CFF6 FFE1          	movff	tblptrl,fsr1l
  4201  002226  CFF7 FFE2          	movff	tblptrh,fsr1h
  4202  00222A  50E7               	movf	indf1,w,c
  4203  00222C                     u1700:
  4204  00222C  ECE7  F011         	call	_WriteDataXLCD
  4205  002230  4A11               	infsnz	putrsXLCD@buffer,f,c
  4206  002232  2A12               	incf	putrsXLCD@buffer+1,f,c
  4207  002234                     l2294:
  4208  002234  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  4209  002238  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  4210  00223C  6AF8               	clrf	tblptru,c
  4211  00223E  0E07               	movlw	(high __ramtop+-1)
  4212  002240  64F7               	cpfsgt	tblptrh,c
  4213  002242  D003               	bra	u1717
  4214  002244  0008               	tblrd		*
  4215  002246  50F5               	movf	tablat,w,c
  4216  002248  D005               	bra	u1710
  4217  00224A                     u1717:
  4218  00224A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4219  00224E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4220  002252  50E7               	movf	indf1,w,c
  4221  002254                     u1710:
  4222  002254  0900               	iorlw	0
  4223  002256  B4D8               	btfsc	status,2,c
  4224  002258  0012               	return	
  4225  00225A  D7D3               	goto	l2288
  4226  00225C                     __end_of_putrsXLCD:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postinc1	equ	0xFE6
  4239                           postdec1	equ	0xFE5
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           indf2	equ	0xFDF
  4243                           postinc2	equ	0xFDE
  4244                           postdec2	equ	0xFDD
  4245                           plusw2	equ	0xFDB
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _WriteDataXLCD *****************
  4251 ;; Defined at:
  4252 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  data            1    wreg     unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  data            1   15[COMRAM] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4269 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        1 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    3
  4273 ;; This function calls:
  4274 ;;		_DelayFor18TCY
  4275 ;; This function is called by:
  4276 ;;		_putrsXLCD
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text18
  4281  0023CE                     __ptext18:
  4282                           	opt stack 0
  4283  0023CE                     _WriteDataXLCD:
  4284                           	opt stack 25
  4285                           
  4286                           ;incstack = 0
  4287                           ;WriteDataXLCD@data stored from wreg
  4288  0023CE  6E10               	movwf	WriteDataXLCD@data,c
  4289  0023D0  0EF0               	movlw	240
  4290  0023D2  1693               	andwf	3987,f,c	;volatile
  4291  0023D4  0EF0               	movlw	240
  4292  0023D6  1681               	andwf	3969,f,c	;volatile
  4293  0023D8  3810               	swapf	WriteDataXLCD@data,w,c
  4294  0023DA  0B0F               	andlw	15
  4295  0023DC  0B0F               	andlw	15
  4296  0023DE  1281               	iorwf	3969,f,c	;volatile
  4297  0023E0  8A8A               	bsf	3978,5,c	;volatile
  4298  0023E2  9C8A               	bcf	3978,6,c	;volatile
  4299  0023E4  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4300  0023E8  888A               	bsf	3978,4,c	;volatile
  4301  0023EA  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4302  0023EE  988A               	bcf	3978,4,c	;volatile
  4303  0023F0  0EF0               	movlw	240
  4304  0023F2  1681               	andwf	3969,f,c	;volatile
  4305  0023F4  5010               	movf	WriteDataXLCD@data,w,c
  4306  0023F6  0B0F               	andlw	15
  4307  0023F8  1281               	iorwf	3969,f,c	;volatile
  4308  0023FA  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4309  0023FE  888A               	bsf	3978,4,c	;volatile
  4310  002400  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4311  002404  988A               	bcf	3978,4,c	;volatile
  4312  002406  0E0F               	movlw	15
  4313  002408  1293               	iorwf	3987,f,c	;volatile
  4314  00240A  0012               	return	
  4315  00240C                     __end_of_WriteDataXLCD:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           indf1	equ	0xFE7
  4327                           postinc1	equ	0xFE6
  4328                           postdec1	equ	0xFE5
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           indf2	equ	0xFDF
  4332                           postinc2	equ	0xFDE
  4333                           postdec2	equ	0xFDD
  4334                           plusw2	equ	0xFDB
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function _BusyXLCD *****************
  4340 ;; Defined at:
  4341 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      unsigned char 
  4348 ;; Registers used:
  4349 ;;		wreg, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		_DelayFor18TCY
  4364 ;; This function is called by:
  4365 ;;		_init_XLCD
  4366 ;;		_OpenXLCD
  4367 ;;		_putrsXLCD
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text19
  4372  002486                     __ptext19:
  4373                           	opt stack 0
  4374  002486                     _BusyXLCD:
  4375                           	opt stack 25
  4376                           
  4377                           ;incstack = 0
  4378  002486  8C8A               	bsf	3978,6,c	;volatile
  4379  002488  9A8A               	bcf	3978,5,c	;volatile
  4380  00248A  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4381  00248E  888A               	bsf	3978,4,c	;volatile
  4382  002490  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4383  002494  A681               	btfss	3969,3,c	;volatile
  4384  002496  D00A               	goto	l381
  4385  002498  988A               	bcf	3978,4,c	;volatile
  4386  00249A  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4387  00249E  888A               	bsf	3978,4,c	;volatile
  4388  0024A0  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4389  0024A4  988A               	bcf	3978,4,c	;volatile
  4390  0024A6  9C8A               	bcf	3978,6,c	;volatile
  4391  0024A8  0E01               	movlw	1
  4392  0024AA  0012               	return	
  4393  0024AC                     l381:
  4394  0024AC  988A               	bcf	3978,4,c	;volatile
  4395  0024AE  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4396  0024B2  888A               	bsf	3978,4,c	;volatile
  4397  0024B4  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4398  0024B8  988A               	bcf	3978,4,c	;volatile
  4399  0024BA  9C8A               	bcf	3978,6,c	;volatile
  4400  0024BC  0E00               	movlw	0
  4401  0024BE  0012               	return	
  4402  0024C0                     __end_of_BusyXLCD:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           intcon	equ	0xFF2
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postinc1	equ	0xFE6
  4415                           postdec1	equ	0xFE5
  4416                           fsr1h	equ	0xFE2
  4417                           fsr1l	equ	0xFE1
  4418                           indf2	equ	0xFDF
  4419                           postinc2	equ	0xFDE
  4420                           postdec2	equ	0xFDD
  4421                           plusw2	equ	0xFDB
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _WriteCmdXLCD *****************
  4427 ;; Defined at:
  4428 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  cmd             1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  cmd             1   15[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0
  4443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4445 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    3
  4449 ;; This function calls:
  4450 ;;		_DelayFor18TCY
  4451 ;; This function is called by:
  4452 ;;		_init_XLCD
  4453 ;;		_gambiarra_pro_serial
  4454 ;;		_main
  4455 ;;		_OpenXLCD
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text20
  4460  00240C                     __ptext20:
  4461                           	opt stack 0
  4462  00240C                     _WriteCmdXLCD:
  4463                           	opt stack 26
  4464                           
  4465                           ;incstack = 0
  4466                           ;WriteCmdXLCD@cmd stored from wreg
  4467  00240C  6E10               	movwf	WriteCmdXLCD@cmd,c
  4468  00240E  0EF0               	movlw	240
  4469  002410  1693               	andwf	3987,f,c	;volatile
  4470  002412  0EF0               	movlw	240
  4471  002414  1681               	andwf	3969,f,c	;volatile
  4472  002416  3810               	swapf	WriteCmdXLCD@cmd,w,c
  4473  002418  0B0F               	andlw	15
  4474  00241A  0B0F               	andlw	15
  4475  00241C  1281               	iorwf	3969,f,c	;volatile
  4476  00241E  9C8A               	bcf	3978,6,c	;volatile
  4477  002420  9A8A               	bcf	3978,5,c	;volatile
  4478  002422  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4479  002426  888A               	bsf	3978,4,c	;volatile
  4480  002428  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4481  00242C  988A               	bcf	3978,4,c	;volatile
  4482  00242E  0EF0               	movlw	240
  4483  002430  1681               	andwf	3969,f,c	;volatile
  4484  002432  5010               	movf	WriteCmdXLCD@cmd,w,c
  4485  002434  0B0F               	andlw	15
  4486  002436  1281               	iorwf	3969,f,c	;volatile
  4487  002438  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4488  00243C  888A               	bsf	3978,4,c	;volatile
  4489  00243E  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4490  002442  988A               	bcf	3978,4,c	;volatile
  4491  002444  0E0F               	movlw	15
  4492  002446  1293               	iorwf	3987,f,c	;volatile
  4493  002448  0012               	return	
  4494  00244A                     __end_of_WriteCmdXLCD:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           prodh	equ	0xFF4
  4501                           prodl	equ	0xFF3
  4502                           intcon	equ	0xFF2
  4503                           postinc0	equ	0xFEE
  4504                           wreg	equ	0xFE8
  4505                           indf1	equ	0xFE7
  4506                           postinc1	equ	0xFE6
  4507                           postdec1	equ	0xFE5
  4508                           fsr1h	equ	0xFE2
  4509                           fsr1l	equ	0xFE1
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           postdec2	equ	0xFDD
  4513                           plusw2	equ	0xFDB
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function _SetDDRamAddr *****************
  4519 ;; Defined at:
  4520 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  DDaddr          1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  DDaddr          1   18[COMRAM] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0
  4535 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4536 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4537 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        4 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    3
  4541 ;; This function calls:
  4542 ;;		_DelayFor18TCY
  4543 ;; This function is called by:
  4544 ;;		_exibir_lcd
  4545 ;;		_pisca_cursor
  4546 ;;		_gambiarra_pro_serial
  4547 ;;		_OpenXLCD
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text21
  4552  0022AE                     __ptext21:
  4553                           	opt stack 0
  4554  0022AE                     _SetDDRamAddr:
  4555                           	opt stack 26
  4556                           
  4557                           ;incstack = 0
  4558                           ;SetDDRamAddr@DDaddr stored from wreg
  4559  0022AE  6E13               	movwf	SetDDRamAddr@DDaddr,c
  4560  0022B0  0EF0               	movlw	240
  4561  0022B2  1693               	andwf	3987,f,c	;volatile
  4562  0022B4  0EF0               	movlw	240
  4563  0022B6  1681               	andwf	3969,f,c	;volatile
  4564  0022B8  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4565  0022BA  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  4566  0022BC  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4567  0022BE  8E10               	bsf	??_SetDDRamAddr,7,c
  4568  0022C0  0E04               	movlw	4
  4569  0022C2  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4570  0022C4                     u1685:
  4571  0022C4  3411               	rlcf	??_SetDDRamAddr+1,w,c
  4572  0022C6  3211               	rrcf	??_SetDDRamAddr+1,f,c
  4573  0022C8  3210               	rrcf	??_SetDDRamAddr,f,c
  4574  0022CA  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4575  0022CC  D7FB               	goto	u1685
  4576  0022CE  5010               	movf	??_SetDDRamAddr,w,c
  4577  0022D0  0B0F               	andlw	15
  4578  0022D2  1281               	iorwf	3969,f,c	;volatile
  4579  0022D4  9C8A               	bcf	3978,6,c	;volatile
  4580  0022D6  9A8A               	bcf	3978,5,c	;volatile
  4581  0022D8  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4582  0022DC  888A               	bsf	3978,4,c	;volatile
  4583  0022DE  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4584  0022E2  988A               	bcf	3978,4,c	;volatile
  4585  0022E4  0EF0               	movlw	240
  4586  0022E6  1681               	andwf	3969,f,c	;volatile
  4587  0022E8  5013               	movf	SetDDRamAddr@DDaddr,w,c
  4588  0022EA  0B0F               	andlw	15
  4589  0022EC  1281               	iorwf	3969,f,c	;volatile
  4590  0022EE  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4591  0022F2  888A               	bsf	3978,4,c	;volatile
  4592  0022F4  ECD6  F012         	call	_DelayFor18TCY	;wreg free
  4593  0022F8  988A               	bcf	3978,4,c	;volatile
  4594  0022FA  0E0F               	movlw	15
  4595  0022FC  1293               	iorwf	3987,f,c	;volatile
  4596  0022FE  0012               	return	
  4597  002300                     __end_of_SetDDRamAddr:
  4598                           	opt stack 0
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           postinc1	equ	0xFE6
  4610                           postdec1	equ	0xFE5
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           plusw2	equ	0xFDB
  4617                           fsr2h	equ	0xFDA
  4618                           fsr2l	equ	0xFD9
  4619                           status	equ	0xFD8
  4620                           
  4621 ;; *************** function _DelayFor18TCY *****************
  4622 ;; Defined at:
  4623 ;;		line 7 in file "display_LCD.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    2
  4644 ;; This function calls:
  4645 ;;		_Delay10TCYx
  4646 ;; This function is called by:
  4647 ;;		_BusyXLCD
  4648 ;;		_SetDDRamAddr
  4649 ;;		_WriteCmdXLCD
  4650 ;;		_WriteDataXLCD
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text22
  4655  0025AC                     __ptext22:
  4656                           	opt stack 0
  4657  0025AC                     _DelayFor18TCY:
  4658                           	opt stack 26
  4659                           
  4660                           ;display_LCD.c: 8: Delay10TCYx(120);
  4661                           
  4662                           ;incstack = 0
  4663  0025AC  0E78               	movlw	120
  4664  0025AE  ECC3  F012         	call	_Delay10TCYx
  4665  0025B2  0012               	return		;funcret
  4666  0025B4                     __end_of_DelayFor18TCY:
  4667                           	opt stack 0
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodh	equ	0xFF4
  4673                           prodl	equ	0xFF3
  4674                           intcon	equ	0xFF2
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           indf1	equ	0xFE7
  4678                           postinc1	equ	0xFE6
  4679                           postdec1	equ	0xFE5
  4680                           fsr1h	equ	0xFE2
  4681                           fsr1l	equ	0xFE1
  4682                           indf2	equ	0xFDF
  4683                           postinc2	equ	0xFDE
  4684                           postdec2	equ	0xFDD
  4685                           plusw2	equ	0xFDB
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _Delay10TCYx *****************
  4691 ;; Defined at:
  4692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  unit            1    wreg     unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  unit            1   14[COMRAM] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0
  4707 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4709 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4710 ;;Total ram usage:        1 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_DelayFor18TCY
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text23
  4721  002586                     __ptext23:
  4722                           	opt stack 0
  4723  002586                     _Delay10TCYx:
  4724                           	opt stack 26
  4725                           
  4726                           ;incstack = 0
  4727                           ;Delay10TCYx@unit stored from wreg
  4728  002586  6E0F               	movwf	Delay10TCYx@unit,c
  4729  002588  0E03               	movlw	3
  4730  00258A                     u3297:
  4731  00258A  2EE8               	decfsz	wreg,f,c
  4732  00258C  D7FE               	bra	u3297
  4733  00258E  F000               	nop	
  4734  002590  2E0F               	decfsz	Delay10TCYx@unit,f,c
  4735  002592  D7FA               	goto	l2074
  4736  002594  0012               	return	
  4737  002596                     __end_of_Delay10TCYx:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodh	equ	0xFF4
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           indf1	equ	0xFE7
  4749                           postinc1	equ	0xFE6
  4750                           postdec1	equ	0xFE5
  4751                           fsr1h	equ	0xFE2
  4752                           fsr1l	equ	0xFE1
  4753                           indf2	equ	0xFDF
  4754                           postinc2	equ	0xFDE
  4755                           postdec2	equ	0xFDD
  4756                           plusw2	equ	0xFDB
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8
  4760                           
  4761 ;; *************** function ___awmod *****************
  4762 ;; Defined at:
  4763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  dividend        2   14[COMRAM] int 
  4766 ;;  divisor         2   16[COMRAM] int 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  sign            1   19[COMRAM] unsigned char 
  4769 ;;  counter         1   18[COMRAM] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2   14[COMRAM] int 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4779 ;;      Params:         4       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4782 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4783 ;;Total ram usage:        6 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_exibir_lcd
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text24
  4794  002190                     __ptext24:
  4795                           	opt stack 0
  4796  002190                     ___awmod:
  4797                           	opt stack 28
  4798                           
  4799                           ;incstack = 0
  4800  002190  0E00               	movlw	0
  4801  002192  6E14               	movwf	___awmod@sign,c
  4802  002194  AE10               	btfss	___awmod@dividend+1,7,c
  4803  002196  D006               	goto	l2620
  4804  002198  6C0F               	negf	___awmod@dividend,c
  4805  00219A  1E10               	comf	___awmod@dividend+1,f,c
  4806  00219C  B0D8               	btfsc	status,0,c
  4807  00219E  2A10               	incf	___awmod@dividend+1,f,c
  4808  0021A0  0E01               	movlw	1
  4809  0021A2  6E14               	movwf	___awmod@sign,c
  4810  0021A4                     l2620:
  4811  0021A4  AE12               	btfss	___awmod@divisor+1,7,c
  4812  0021A6  D004               	goto	l2624
  4813  0021A8  6C11               	negf	___awmod@divisor,c
  4814  0021AA  1E12               	comf	___awmod@divisor+1,f,c
  4815  0021AC  B0D8               	btfsc	status,0,c
  4816  0021AE  2A12               	incf	___awmod@divisor+1,f,c
  4817  0021B0                     l2624:
  4818  0021B0  5011               	movf	___awmod@divisor,w,c
  4819  0021B2  1012               	iorwf	___awmod@divisor+1,w,c
  4820  0021B4  B4D8               	btfsc	status,2,c
  4821  0021B6  D018               	goto	l2640
  4822  0021B8  0E01               	movlw	1
  4823  0021BA  6E13               	movwf	___awmod@counter,c
  4824  0021BC  D004               	goto	l2630
  4825  0021BE                     l2628:
  4826  0021BE  90D8               	bcf	status,0,c
  4827  0021C0  3611               	rlcf	___awmod@divisor,f,c
  4828  0021C2  3612               	rlcf	___awmod@divisor+1,f,c
  4829  0021C4  2A13               	incf	___awmod@counter,f,c
  4830  0021C6                     l2630:
  4831  0021C6  AE12               	btfss	___awmod@divisor+1,7,c
  4832  0021C8  D7FA               	goto	l2628
  4833  0021CA                     l2632:
  4834  0021CA  5011               	movf	___awmod@divisor,w,c
  4835  0021CC  5C0F               	subwf	___awmod@dividend,w,c
  4836  0021CE  5012               	movf	___awmod@divisor+1,w,c
  4837  0021D0  5810               	subwfb	___awmod@dividend+1,w,c
  4838  0021D2  A0D8               	btfss	status,0,c
  4839  0021D4  D004               	goto	l2636
  4840  0021D6  5011               	movf	___awmod@divisor,w,c
  4841  0021D8  5E0F               	subwf	___awmod@dividend,f,c
  4842  0021DA  5012               	movf	___awmod@divisor+1,w,c
  4843  0021DC  5A10               	subwfb	___awmod@dividend+1,f,c
  4844  0021DE                     l2636:
  4845  0021DE  90D8               	bcf	status,0,c
  4846  0021E0  3212               	rrcf	___awmod@divisor+1,f,c
  4847  0021E2  3211               	rrcf	___awmod@divisor,f,c
  4848  0021E4  2E13               	decfsz	___awmod@counter,f,c
  4849  0021E6  D7F1               	goto	l2632
  4850  0021E8                     l2640:
  4851  0021E8  5014               	movf	___awmod@sign,w,c
  4852  0021EA  B4D8               	btfsc	status,2,c
  4853  0021EC  D004               	goto	l2644
  4854  0021EE  6C0F               	negf	___awmod@dividend,c
  4855  0021F0  1E10               	comf	___awmod@dividend+1,f,c
  4856  0021F2  B0D8               	btfsc	status,0,c
  4857  0021F4  2A10               	incf	___awmod@dividend+1,f,c
  4858  0021F6                     l2644:
  4859  0021F6  C00F  F00F         	movff	___awmod@dividend,?___awmod
  4860  0021FA  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  4861  0021FE  0012               	return	
  4862  002200                     __end_of___awmod:
  4863                           	opt stack 0
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           prodh	equ	0xFF4
  4869                           prodl	equ	0xFF3
  4870                           intcon	equ	0xFF2
  4871                           postinc0	equ	0xFEE
  4872                           wreg	equ	0xFE8
  4873                           indf1	equ	0xFE7
  4874                           postinc1	equ	0xFE6
  4875                           postdec1	equ	0xFE5
  4876                           fsr1h	equ	0xFE2
  4877                           fsr1l	equ	0xFE1
  4878                           indf2	equ	0xFDF
  4879                           postinc2	equ	0xFDE
  4880                           postdec2	equ	0xFDD
  4881                           plusw2	equ	0xFDB
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886 ;; *************** function ___awdiv *****************
  4887 ;; Defined at:
  4888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  dividend        2   20[COMRAM] int 
  4891 ;;  divisor         2   22[COMRAM] int 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  quotient        2   26[COMRAM] int 
  4894 ;;  sign            1   25[COMRAM] unsigned char 
  4895 ;;  counter         1   24[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2   20[COMRAM] int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4905 ;;      Params:         4       0       0       0       0       0       0       0       0
  4906 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4908 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4909 ;;Total ram usage:        8 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_exibir_lcd
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text25
  4920  00208E                     __ptext25:
  4921                           	opt stack 0
  4922  00208E                     ___awdiv:
  4923                           	opt stack 28
  4924                           
  4925                           ;incstack = 0
  4926  00208E  0E00               	movlw	0
  4927  002090  6E1A               	movwf	___awdiv@sign,c
  4928  002092  AE18               	btfss	___awdiv@divisor+1,7,c
  4929  002094  D006               	goto	l2576
  4930  002096  6C17               	negf	___awdiv@divisor,c
  4931  002098  1E18               	comf	___awdiv@divisor+1,f,c
  4932  00209A  B0D8               	btfsc	status,0,c
  4933  00209C  2A18               	incf	___awdiv@divisor+1,f,c
  4934  00209E  0E01               	movlw	1
  4935  0020A0  6E1A               	movwf	___awdiv@sign,c
  4936  0020A2                     l2576:
  4937  0020A2  AE16               	btfss	___awdiv@dividend+1,7,c
  4938  0020A4  D006               	goto	l2582
  4939  0020A6  6C15               	negf	___awdiv@dividend,c
  4940  0020A8  1E16               	comf	___awdiv@dividend+1,f,c
  4941  0020AA  B0D8               	btfsc	status,0,c
  4942  0020AC  2A16               	incf	___awdiv@dividend+1,f,c
  4943  0020AE  0E01               	movlw	1
  4944  0020B0  1A1A               	xorwf	___awdiv@sign,f,c
  4945  0020B2                     l2582:
  4946  0020B2  0E00               	movlw	0
  4947  0020B4  6E1C               	movwf	___awdiv@quotient+1,c
  4948  0020B6  0E00               	movlw	0
  4949  0020B8  6E1B               	movwf	___awdiv@quotient,c
  4950  0020BA  5017               	movf	___awdiv@divisor,w,c
  4951  0020BC  1018               	iorwf	___awdiv@divisor+1,w,c
  4952  0020BE  B4D8               	btfsc	status,2,c
  4953  0020C0  D01C               	goto	l2604
  4954  0020C2  0E01               	movlw	1
  4955  0020C4  6E19               	movwf	___awdiv@counter,c
  4956  0020C6  D004               	goto	l2590
  4957  0020C8                     l2588:
  4958  0020C8  90D8               	bcf	status,0,c
  4959  0020CA  3617               	rlcf	___awdiv@divisor,f,c
  4960  0020CC  3618               	rlcf	___awdiv@divisor+1,f,c
  4961  0020CE  2A19               	incf	___awdiv@counter,f,c
  4962  0020D0                     l2590:
  4963  0020D0  AE18               	btfss	___awdiv@divisor+1,7,c
  4964  0020D2  D7FA               	goto	l2588
  4965  0020D4                     l2592:
  4966  0020D4  90D8               	bcf	status,0,c
  4967  0020D6  361B               	rlcf	___awdiv@quotient,f,c
  4968  0020D8  361C               	rlcf	___awdiv@quotient+1,f,c
  4969  0020DA  5017               	movf	___awdiv@divisor,w,c
  4970  0020DC  5C15               	subwf	___awdiv@dividend,w,c
  4971  0020DE  5018               	movf	___awdiv@divisor+1,w,c
  4972  0020E0  5816               	subwfb	___awdiv@dividend+1,w,c
  4973  0020E2  A0D8               	btfss	status,0,c
  4974  0020E4  D005               	goto	l2600
  4975  0020E6  5017               	movf	___awdiv@divisor,w,c
  4976  0020E8  5E15               	subwf	___awdiv@dividend,f,c
  4977  0020EA  5018               	movf	___awdiv@divisor+1,w,c
  4978  0020EC  5A16               	subwfb	___awdiv@dividend+1,f,c
  4979  0020EE  801B               	bsf	___awdiv@quotient,0,c
  4980  0020F0                     l2600:
  4981  0020F0  90D8               	bcf	status,0,c
  4982  0020F2  3218               	rrcf	___awdiv@divisor+1,f,c
  4983  0020F4  3217               	rrcf	___awdiv@divisor,f,c
  4984  0020F6  2E19               	decfsz	___awdiv@counter,f,c
  4985  0020F8  D7ED               	goto	l2592
  4986  0020FA                     l2604:
  4987  0020FA  501A               	movf	___awdiv@sign,w,c
  4988  0020FC  B4D8               	btfsc	status,2,c
  4989  0020FE  D004               	goto	l2608
  4990  002100  6C1B               	negf	___awdiv@quotient,c
  4991  002102  1E1C               	comf	___awdiv@quotient+1,f,c
  4992  002104  B0D8               	btfsc	status,0,c
  4993  002106  2A1C               	incf	___awdiv@quotient+1,f,c
  4994  002108                     l2608:
  4995  002108  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  4996  00210C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  4997  002110  0012               	return	
  4998  002112                     __end_of___awdiv:
  4999                           	opt stack 0
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           intcon	equ	0xFF2
  5007                           postinc0	equ	0xFEE
  5008                           wreg	equ	0xFE8
  5009                           indf1	equ	0xFE7
  5010                           postinc1	equ	0xFE6
  5011                           postdec1	equ	0xFE5
  5012                           fsr1h	equ	0xFE2
  5013                           fsr1l	equ	0xFE1
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           plusw2	equ	0xFDB
  5018                           fsr2h	equ	0xFDA
  5019                           fsr2l	equ	0xFD9
  5020                           status	equ	0xFD8
  5021                           
  5022 ;; *************** function _checa_botao *****************
  5023 ;; Defined at:
  5024 ;;		line 144 in file "display_LCD.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  Relogio         2   28[COMRAM] PTR struct .
  5027 ;;		 -> Relogio(6), 
  5028 ;;  Despertador     2   30[COMRAM] PTR struct .
  5029 ;;		 -> Despertador(6), 
  5030 ;;  Calendario      2   32[COMRAM] PTR struct .
  5031 ;;		 -> Calendario(6), 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5043 ;;      Params:         6       0       0       0       0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5045 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5046 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5047 ;;Total ram usage:        8 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    3
  5050 ;; This function calls:
  5051 ;;		_decrementa_variavel
  5052 ;;		_incrementa_variavel
  5053 ;;		_posiciona_cursor
  5054 ;;		_trocar_tela
  5055 ;; This function is called by:
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text26
  5061  001F18                     __ptext26:
  5062                           	opt stack 0
  5063  001F18                     _checa_botao:
  5064                           	opt stack 27
  5065                           
  5066                           ;display_LCD.c: 147: if(PORTDbits.RD0==1){
  5067                           
  5068                           ;incstack = 0
  5069  001F18  A083               	btfss	3971,0,c	;volatile
  5070  001F1A  D00F               	goto	l2706
  5071                           
  5072                           ;display_LCD.c: 148: _delay((unsigned long)((180)*(20000000/4000.0)));
  5073  001F1C  0E05               	movlw	5
  5074  001F1E  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5075  001F20  0E91               	movlw	145
  5076  001F22  6E23               	movwf	??_checa_botao& (0+255),c
  5077  001F24  0ED0               	movlw	208
  5078  001F26                     u3307:
  5079  001F26  2EE8               	decfsz	wreg,f,c
  5080  001F28  D7FE               	bra	u3307
  5081  001F2A  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5082  001F2C  D7FC               	bra	u3307
  5083  001F2E  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5084  001F30  D7FA               	bra	u3307
  5085                           
  5086                           ;display_LCD.c: 149: trocar_tela();
  5087  001F32  ECCB  F012         	call	_trocar_tela	;wreg free
  5088  001F36                     l124:
  5089  001F36  B083               	btfsc	3971,0,c	;volatile
  5090  001F38  D7FE               	goto	l124
  5091  001F3A                     l2706:
  5092                           
  5093                           ;display_LCD.c: 151: }
  5094                           ;display_LCD.c: 152: if(tela_exibida>2) tela_exibida=0;
  5095  001F3A  BE3B               	btfsc	_tela_exibida+1,7,c
  5096  001F3C  D00A               	goto	l2710
  5097  001F3E  503B               	movf	_tela_exibida+1,w,c
  5098  001F40  E104               	bnz	u2480
  5099  001F42  0E03               	movlw	3
  5100  001F44  5C3A               	subwf	_tela_exibida,w,c
  5101  001F46  A0D8               	btfss	status,0,c
  5102  001F48  D004               	goto	l2710
  5103  001F4A                     u2480:
  5104  001F4A  0E00               	movlw	0
  5105  001F4C  6E3B               	movwf	_tela_exibida+1,c
  5106  001F4E  0E00               	movlw	0
  5107  001F50  6E3A               	movwf	_tela_exibida,c
  5108  001F52                     l2710:
  5109                           
  5110                           ;display_LCD.c: 155: if(PORTDbits.RD1==1){
  5111  001F52  A283               	btfss	3971,1,c	;volatile
  5112  001F54  D01B               	goto	l128
  5113                           
  5114                           ;display_LCD.c: 156: _delay((unsigned long)((180)*(20000000/4000.0)));
  5115  001F56  0E05               	movlw	5
  5116  001F58  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5117  001F5A  0E91               	movlw	145
  5118  001F5C  6E23               	movwf	??_checa_botao& (0+255),c
  5119  001F5E  0ED0               	movlw	208
  5120  001F60                     u3317:
  5121  001F60  2EE8               	decfsz	wreg,f,c
  5122  001F62  D7FE               	bra	u3317
  5123  001F64  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5124  001F66  D7FC               	bra	u3317
  5125  001F68  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5126  001F6A  D7FA               	bra	u3317
  5127                           
  5128                           ;display_LCD.c: 157: incrementa_variavel(&Relogio, &Despertador, &Calendario);
  5129  001F6C  0E1D               	movlw	low checa_botao@Relogio
  5130  001F6E  6E13               	movwf	incrementa_variavel@Relogio,c
  5131  001F70  0E00               	movlw	high checa_botao@Relogio
  5132  001F72  6E14               	movwf	incrementa_variavel@Relogio+1,c
  5133  001F74  0E1F               	movlw	low checa_botao@Despertador
  5134  001F76  6E15               	movwf	incrementa_variavel@Despertador,c
  5135  001F78  0E00               	movlw	high checa_botao@Despertador
  5136  001F7A  6E16               	movwf	incrementa_variavel@Despertador+1,c
  5137  001F7C  0E21               	movlw	low checa_botao@Calendario
  5138  001F7E  6E17               	movwf	incrementa_variavel@Calendario,c
  5139  001F80  0E00               	movlw	high checa_botao@Calendario
  5140  001F82  6E18               	movwf	incrementa_variavel@Calendario+1,c
  5141  001F84  ECE0  F00A         	call	_incrementa_variavel	;wreg free
  5142  001F88                     l129:
  5143  001F88  B283               	btfsc	3971,1,c	;volatile
  5144  001F8A  D7FE               	goto	l129
  5145  001F8C                     l128:
  5146                           
  5147                           ;display_LCD.c: 159: }
  5148                           ;display_LCD.c: 162: if(PORTDbits.RD2==1){
  5149  001F8C  A483               	btfss	3971,2,c	;volatile
  5150  001F8E  D01B               	goto	l132
  5151                           
  5152                           ;display_LCD.c: 163: _delay((unsigned long)((180)*(20000000/4000.0)));
  5153  001F90  0E05               	movlw	5
  5154  001F92  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5155  001F94  0E91               	movlw	145
  5156  001F96  6E23               	movwf	??_checa_botao& (0+255),c
  5157  001F98  0ED0               	movlw	208
  5158  001F9A                     u3327:
  5159  001F9A  2EE8               	decfsz	wreg,f,c
  5160  001F9C  D7FE               	bra	u3327
  5161  001F9E  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5162  001FA0  D7FC               	bra	u3327
  5163  001FA2  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5164  001FA4  D7FA               	bra	u3327
  5165                           
  5166                           ;display_LCD.c: 164: decrementa_variavel(&Relogio, &Despertador, &Calendario);
  5167  001FA6  0E1D               	movlw	low checa_botao@Relogio
  5168  001FA8  6E13               	movwf	decrementa_variavel@Relogio,c
  5169  001FAA  0E00               	movlw	high checa_botao@Relogio
  5170  001FAC  6E14               	movwf	decrementa_variavel@Relogio+1,c
  5171  001FAE  0E1F               	movlw	low checa_botao@Despertador
  5172  001FB0  6E15               	movwf	decrementa_variavel@Despertador,c
  5173  001FB2  0E00               	movlw	high checa_botao@Despertador
  5174  001FB4  6E16               	movwf	decrementa_variavel@Despertador+1,c
  5175  001FB6  0E21               	movlw	low checa_botao@Calendario
  5176  001FB8  6E17               	movwf	decrementa_variavel@Calendario,c
  5177  001FBA  0E00               	movlw	high checa_botao@Calendario
  5178  001FBC  6E18               	movwf	decrementa_variavel@Calendario+1,c
  5179  001FBE  EC40  F009         	call	_decrementa_variavel	;wreg free
  5180  001FC2                     l133:
  5181  001FC2  B483               	btfsc	3971,2,c	;volatile
  5182  001FC4  D7FE               	goto	l133
  5183  001FC6                     l132:
  5184                           
  5185                           ;display_LCD.c: 166: }
  5186                           ;display_LCD.c: 169: if(PORTDbits.RD3==1){
  5187  001FC6  A683               	btfss	3971,3,c	;volatile
  5188  001FC8  0012               	return	
  5189                           
  5190                           ;display_LCD.c: 170: _delay((unsigned long)((180)*(20000000/4000.0)));
  5191  001FCA  0E05               	movlw	5
  5192  001FCC  6E24               	movwf	(??_checa_botao+1)& (0+255),c
  5193  001FCE  0E91               	movlw	145
  5194  001FD0  6E23               	movwf	??_checa_botao& (0+255),c
  5195  001FD2  0ED0               	movlw	208
  5196  001FD4                     u3337:
  5197  001FD4  2EE8               	decfsz	wreg,f,c
  5198  001FD6  D7FE               	bra	u3337
  5199  001FD8  2E23               	decfsz	??_checa_botao& (0+255),f,c
  5200  001FDA  D7FC               	bra	u3337
  5201  001FDC  2E24               	decfsz	(??_checa_botao+1)& (0+255),f,c
  5202  001FDE  D7FA               	bra	u3337
  5203                           
  5204                           ;display_LCD.c: 171: posiciona_cursor();
  5205  001FE0  ECA3  F011         	call	_posiciona_cursor	;wreg free
  5206  001FE4                     l137:
  5207  001FE4  A683               	btfss	3971,3,c	;volatile
  5208  001FE6  0012               	return	
  5209  001FE8  D7FD               	goto	l137
  5210  001FEA                     __end_of_checa_botao:
  5211                           	opt stack 0
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postinc1	equ	0xFE6
  5223                           postdec1	equ	0xFE5
  5224                           fsr1h	equ	0xFE2
  5225                           fsr1l	equ	0xFE1
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           postdec2	equ	0xFDD
  5229                           plusw2	equ	0xFDB
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function _trocar_tela *****************
  5235 ;; Defined at:
  5236 ;;		line 79 in file "display_LCD.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_checa_botao
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text27
  5265  002596                     __ptext27:
  5266                           	opt stack 0
  5267  002596                     _trocar_tela:
  5268                           	opt stack 28
  5269                           
  5270                           ;display_LCD.c: 80: tela_exibida++;
  5271                           
  5272                           ;incstack = 0
  5273  002596  4A3A               	infsnz	_tela_exibida,f,c
  5274  002598  2A3B               	incf	_tela_exibida+1,f,c
  5275                           
  5276                           ;display_LCD.c: 81: cursor=0;
  5277  00259A  0E00               	movlw	0
  5278  00259C  6E37               	movwf	_cursor+1,c
  5279  00259E  0E00               	movlw	0
  5280  0025A0  6E36               	movwf	_cursor,c
  5281  0025A2  0012               	return		;funcret
  5282  0025A4                     __end_of_trocar_tela:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           postinc0	equ	0xFEE
  5292                           wreg	equ	0xFE8
  5293                           indf1	equ	0xFE7
  5294                           postinc1	equ	0xFE6
  5295                           postdec1	equ	0xFE5
  5296                           fsr1h	equ	0xFE2
  5297                           fsr1l	equ	0xFE1
  5298                           indf2	equ	0xFDF
  5299                           postinc2	equ	0xFDE
  5300                           postdec2	equ	0xFDD
  5301                           plusw2	equ	0xFDB
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _posiciona_cursor *****************
  5307 ;; Defined at:
  5308 ;;		line 138 in file "display_LCD.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_checa_botao
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text28
  5337  002346                     __ptext28:
  5338                           	opt stack 0
  5339  002346                     _posiciona_cursor:
  5340                           	opt stack 28
  5341                           
  5342                           ;display_LCD.c: 139: cursor++;
  5343                           
  5344                           ;incstack = 0
  5345  002346  4A36               	infsnz	_cursor,f,c
  5346  002348  2A37               	incf	_cursor+1,f,c
  5347                           
  5348                           ;display_LCD.c: 140: if(cursor>11 && tela_exibida==0) cursor=0;
  5349  00234A  BE37               	btfsc	_cursor+1,7,c
  5350  00234C  D00E               	goto	l1596
  5351  00234E  5037               	movf	_cursor+1,w,c
  5352  002350  E104               	bnz	u740
  5353  002352  0E0C               	movlw	12
  5354  002354  5C36               	subwf	_cursor,w,c
  5355  002356  A0D8               	btfss	status,0,c
  5356  002358  D008               	goto	l1596
  5357  00235A                     u740:
  5358  00235A  503A               	movf	_tela_exibida,w,c
  5359  00235C  103B               	iorwf	_tela_exibida+1,w,c
  5360  00235E  A4D8               	btfss	status,2,c
  5361  002360  D004               	goto	l1596
  5362  002362  0E00               	movlw	0
  5363  002364  6E37               	movwf	_cursor+1,c
  5364  002366  0E00               	movlw	0
  5365  002368  6E36               	movwf	_cursor,c
  5366  00236A                     l1596:
  5367                           
  5368                           ;display_LCD.c: 141: if(cursor>5 && tela_exibida==1) cursor=0;
  5369  00236A  BE37               	btfsc	_cursor+1,7,c
  5370  00236C  0012               	return	
  5371  00236E  5037               	movf	_cursor+1,w,c
  5372  002370  E104               	bnz	u760
  5373  002372  0E06               	movlw	6
  5374  002374  5C36               	subwf	_cursor,w,c
  5375  002376  A0D8               	btfss	status,0,c
  5376  002378  0012               	return	
  5377  00237A                     u760:
  5378  00237A  043A               	decf	_tela_exibida,w,c
  5379  00237C  103B               	iorwf	_tela_exibida+1,w,c
  5380  00237E  A4D8               	btfss	status,2,c
  5381  002380  0012               	return	
  5382  002382  0E00               	movlw	0
  5383  002384  6E37               	movwf	_cursor+1,c
  5384  002386  0E00               	movlw	0
  5385  002388  6E36               	movwf	_cursor,c
  5386  00238A  0012               	return	
  5387  00238C                     __end_of_posiciona_cursor:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           postinc0	equ	0xFEE
  5397                           wreg	equ	0xFE8
  5398                           indf1	equ	0xFE7
  5399                           postinc1	equ	0xFE6
  5400                           postdec1	equ	0xFE5
  5401                           fsr1h	equ	0xFE2
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           plusw2	equ	0xFDB
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function _incrementa_variavel *****************
  5412 ;; Defined at:
  5413 ;;		line 84 in file "display_LCD.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  Relogio         2   18[COMRAM] PTR struct .
  5416 ;;		 -> checa_botao@Relogio(2), 
  5417 ;;  Despertador     2   20[COMRAM] PTR struct .
  5418 ;;		 -> checa_botao@Despertador(2), 
  5419 ;;  Calendario      2   22[COMRAM] PTR struct .
  5420 ;;		 -> checa_botao@Calendario(2), 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5432 ;;      Params:         6       0       0       0       0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5434 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5435 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5436 ;;Total ram usage:        8 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    2
  5439 ;; This function calls:
  5440 ;;		_controla_despertador
  5441 ;; This function is called by:
  5442 ;;		_checa_botao
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text29
  5447  0015C0                     __ptext29:
  5448                           	opt stack 0
  5449  0015C0                     _incrementa_variavel:
  5450                           	opt stack 27
  5451                           
  5452                           ;display_LCD.c: 85: if(tela_exibida==0){
  5453                           
  5454                           ;incstack = 0
  5455  0015C0  503A               	movf	_tela_exibida,w,c
  5456  0015C2  103B               	iorwf	_tela_exibida+1,w,c
  5457  0015C4  A4D8               	btfss	status,2,c
  5458  0015C6  D0F4               	goto	l2434
  5459                           
  5460                           ;display_LCD.c: 86: if(cursor==0) Relogio->hora=Relogio->hora+10;
  5461  0015C8  5036               	movf	_cursor,w,c
  5462  0015CA  1037               	iorwf	_cursor+1,w,c
  5463  0015CC  A4D8               	btfss	status,2,c
  5464  0015CE  D018               	goto	l2390
  5465  0015D0  EE20 F004          	lfsr	2,4
  5466  0015D4  5013               	movf	incrementa_variavel@Relogio,w,c
  5467  0015D6  26D9               	addwf	fsr2l,f,c
  5468  0015D8  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5469  0015DA  22DA               	addwfc	fsr2h,f,c
  5470  0015DC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5471  0015E0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5472  0015E4  0E0A               	movlw	10
  5473  0015E6  2619               	addwf	??_incrementa_variavel,f,c
  5474  0015E8  0E00               	movlw	0
  5475  0015EA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5476  0015EC  EE20 F004          	lfsr	2,4
  5477  0015F0  5013               	movf	incrementa_variavel@Relogio,w,c
  5478  0015F2  26D9               	addwf	fsr2l,f,c
  5479  0015F4  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5480  0015F6  22DA               	addwfc	fsr2h,f,c
  5481  0015F8  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5482  0015FC  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5483  001600                     l2390:
  5484                           
  5485                           ;display_LCD.c: 87: if(cursor==1) Relogio->hora++;
  5486  001600  0436               	decf	_cursor,w,c
  5487  001602  1037               	iorwf	_cursor+1,w,c
  5488  001604  A4D8               	btfss	status,2,c
  5489  001606  D009               	goto	l2394
  5490  001608  EE20 F004          	lfsr	2,4
  5491  00160C  5013               	movf	incrementa_variavel@Relogio,w,c
  5492  00160E  26D9               	addwf	fsr2l,f,c
  5493  001610  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5494  001612  22DA               	addwfc	fsr2h,f,c
  5495  001614  2ADE               	incf	postinc2,f,c
  5496  001616  0E00               	movlw	0
  5497  001618  22DD               	addwfc	postdec2,f,c
  5498  00161A                     l2394:
  5499                           
  5500                           ;display_LCD.c: 88: if(cursor==2) Relogio->minuto=Relogio->minuto+10;
  5501  00161A  0E02               	movlw	2
  5502  00161C  1836               	xorwf	_cursor,w,c
  5503  00161E  1037               	iorwf	_cursor+1,w,c
  5504  001620  A4D8               	btfss	status,2,c
  5505  001622  D014               	goto	l2398
  5506  001624  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5507  001628  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5508  00162C  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5509  001630  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5510  001634  0E0A               	movlw	10
  5511  001636  2619               	addwf	??_incrementa_variavel,f,c
  5512  001638  0E00               	movlw	0
  5513  00163A  221A               	addwfc	??_incrementa_variavel+1,f,c
  5514  00163C  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5515  001640  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5516  001644  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5517  001648  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5518  00164C                     l2398:
  5519                           
  5520                           ;display_LCD.c: 89: if(cursor==3) Relogio->minuto++;
  5521  00164C  0E03               	movlw	3
  5522  00164E  1836               	xorwf	_cursor,w,c
  5523  001650  1037               	iorwf	_cursor+1,w,c
  5524  001652  A4D8               	btfss	status,2,c
  5525  001654  D007               	goto	l2402
  5526  001656  C013  FFD9         	movff	incrementa_variavel@Relogio,fsr2l
  5527  00165A  C014  FFDA         	movff	incrementa_variavel@Relogio+1,fsr2h
  5528  00165E  2ADE               	incf	postinc2,f,c
  5529  001660  0E00               	movlw	0
  5530  001662  22DD               	addwfc	postdec2,f,c
  5531  001664                     l2402:
  5532                           
  5533                           ;display_LCD.c: 90: if(cursor==4) Relogio->segundo=Relogio->segundo+10;
  5534  001664  0E04               	movlw	4
  5535  001666  1836               	xorwf	_cursor,w,c
  5536  001668  1037               	iorwf	_cursor+1,w,c
  5537  00166A  A4D8               	btfss	status,2,c
  5538  00166C  D018               	goto	l2406
  5539  00166E  EE20 F002          	lfsr	2,2
  5540  001672  5013               	movf	incrementa_variavel@Relogio,w,c
  5541  001674  26D9               	addwf	fsr2l,f,c
  5542  001676  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5543  001678  22DA               	addwfc	fsr2h,f,c
  5544  00167A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5545  00167E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5546  001682  0E0A               	movlw	10
  5547  001684  2619               	addwf	??_incrementa_variavel,f,c
  5548  001686  0E00               	movlw	0
  5549  001688  221A               	addwfc	??_incrementa_variavel+1,f,c
  5550  00168A  EE20 F002          	lfsr	2,2
  5551  00168E  5013               	movf	incrementa_variavel@Relogio,w,c
  5552  001690  26D9               	addwf	fsr2l,f,c
  5553  001692  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5554  001694  22DA               	addwfc	fsr2h,f,c
  5555  001696  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5556  00169A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5557  00169E                     l2406:
  5558                           
  5559                           ;display_LCD.c: 91: if(cursor==5) Relogio->segundo++;
  5560  00169E  0E05               	movlw	5
  5561  0016A0  1836               	xorwf	_cursor,w,c
  5562  0016A2  1037               	iorwf	_cursor+1,w,c
  5563  0016A4  A4D8               	btfss	status,2,c
  5564  0016A6  D009               	goto	l2410
  5565  0016A8  EE20 F002          	lfsr	2,2
  5566  0016AC  5013               	movf	incrementa_variavel@Relogio,w,c
  5567  0016AE  26D9               	addwf	fsr2l,f,c
  5568  0016B0  5014               	movf	incrementa_variavel@Relogio+1,w,c
  5569  0016B2  22DA               	addwfc	fsr2h,f,c
  5570  0016B4  2ADE               	incf	postinc2,f,c
  5571  0016B6  0E00               	movlw	0
  5572  0016B8  22DD               	addwfc	postdec2,f,c
  5573  0016BA                     l2410:
  5574                           
  5575                           ;display_LCD.c: 92: if(cursor==6) Calendario->dia=Calendario->dia+10;
  5576  0016BA  0E06               	movlw	6
  5577  0016BC  1836               	xorwf	_cursor,w,c
  5578  0016BE  1037               	iorwf	_cursor+1,w,c
  5579  0016C0  A4D8               	btfss	status,2,c
  5580  0016C2  D014               	goto	l2414
  5581  0016C4  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5582  0016C8  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5583  0016CC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5584  0016D0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5585  0016D4  0E0A               	movlw	10
  5586  0016D6  2619               	addwf	??_incrementa_variavel,f,c
  5587  0016D8  0E00               	movlw	0
  5588  0016DA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5589  0016DC  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5590  0016E0  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5591  0016E4  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5592  0016E8  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5593  0016EC                     l2414:
  5594                           
  5595                           ;display_LCD.c: 93: if(cursor==7) Calendario->dia++;
  5596  0016EC  0E07               	movlw	7
  5597  0016EE  1836               	xorwf	_cursor,w,c
  5598  0016F0  1037               	iorwf	_cursor+1,w,c
  5599  0016F2  A4D8               	btfss	status,2,c
  5600  0016F4  D007               	goto	l2418
  5601  0016F6  C017  FFD9         	movff	incrementa_variavel@Calendario,fsr2l
  5602  0016FA  C018  FFDA         	movff	incrementa_variavel@Calendario+1,fsr2h
  5603  0016FE  2ADE               	incf	postinc2,f,c
  5604  001700  0E00               	movlw	0
  5605  001702  22DD               	addwfc	postdec2,f,c
  5606  001704                     l2418:
  5607                           
  5608                           ;display_LCD.c: 94: if(cursor==8) Calendario->mes=Calendario->mes+10;
  5609  001704  0E08               	movlw	8
  5610  001706  1836               	xorwf	_cursor,w,c
  5611  001708  1037               	iorwf	_cursor+1,w,c
  5612  00170A  A4D8               	btfss	status,2,c
  5613  00170C  D018               	goto	l2422
  5614  00170E  EE20 F002          	lfsr	2,2
  5615  001712  5017               	movf	incrementa_variavel@Calendario,w,c
  5616  001714  26D9               	addwf	fsr2l,f,c
  5617  001716  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5618  001718  22DA               	addwfc	fsr2h,f,c
  5619  00171A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5620  00171E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5621  001722  0E0A               	movlw	10
  5622  001724  2619               	addwf	??_incrementa_variavel,f,c
  5623  001726  0E00               	movlw	0
  5624  001728  221A               	addwfc	??_incrementa_variavel+1,f,c
  5625  00172A  EE20 F002          	lfsr	2,2
  5626  00172E  5017               	movf	incrementa_variavel@Calendario,w,c
  5627  001730  26D9               	addwf	fsr2l,f,c
  5628  001732  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5629  001734  22DA               	addwfc	fsr2h,f,c
  5630  001736  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5631  00173A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5632  00173E                     l2422:
  5633                           
  5634                           ;display_LCD.c: 95: if(cursor==9) Calendario->mes++;
  5635  00173E  0E09               	movlw	9
  5636  001740  1836               	xorwf	_cursor,w,c
  5637  001742  1037               	iorwf	_cursor+1,w,c
  5638  001744  A4D8               	btfss	status,2,c
  5639  001746  D009               	goto	l2426
  5640  001748  EE20 F002          	lfsr	2,2
  5641  00174C  5017               	movf	incrementa_variavel@Calendario,w,c
  5642  00174E  26D9               	addwf	fsr2l,f,c
  5643  001750  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5644  001752  22DA               	addwfc	fsr2h,f,c
  5645  001754  2ADE               	incf	postinc2,f,c
  5646  001756  0E00               	movlw	0
  5647  001758  22DD               	addwfc	postdec2,f,c
  5648  00175A                     l2426:
  5649                           
  5650                           ;display_LCD.c: 96: if(cursor==10) Calendario->ano=Calendario->ano+10;
  5651  00175A  0E0A               	movlw	10
  5652  00175C  1836               	xorwf	_cursor,w,c
  5653  00175E  1037               	iorwf	_cursor+1,w,c
  5654  001760  A4D8               	btfss	status,2,c
  5655  001762  D018               	goto	l2430
  5656  001764  EE20 F004          	lfsr	2,4
  5657  001768  5017               	movf	incrementa_variavel@Calendario,w,c
  5658  00176A  26D9               	addwf	fsr2l,f,c
  5659  00176C  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5660  00176E  22DA               	addwfc	fsr2h,f,c
  5661  001770  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5662  001774  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5663  001778  0E0A               	movlw	10
  5664  00177A  2619               	addwf	??_incrementa_variavel,f,c
  5665  00177C  0E00               	movlw	0
  5666  00177E  221A               	addwfc	??_incrementa_variavel+1,f,c
  5667  001780  EE20 F004          	lfsr	2,4
  5668  001784  5017               	movf	incrementa_variavel@Calendario,w,c
  5669  001786  26D9               	addwf	fsr2l,f,c
  5670  001788  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5671  00178A  22DA               	addwfc	fsr2h,f,c
  5672  00178C  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5673  001790  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5674  001794                     l2430:
  5675                           
  5676                           ;display_LCD.c: 97: if(cursor==11) Calendario->ano++;
  5677  001794  0E0B               	movlw	11
  5678  001796  1836               	xorwf	_cursor,w,c
  5679  001798  1037               	iorwf	_cursor+1,w,c
  5680  00179A  A4D8               	btfss	status,2,c
  5681  00179C  D009               	goto	l2434
  5682  00179E  EE20 F004          	lfsr	2,4
  5683  0017A2  5017               	movf	incrementa_variavel@Calendario,w,c
  5684  0017A4  26D9               	addwf	fsr2l,f,c
  5685  0017A6  5018               	movf	incrementa_variavel@Calendario+1,w,c
  5686  0017A8  22DA               	addwfc	fsr2h,f,c
  5687  0017AA  2ADE               	incf	postinc2,f,c
  5688  0017AC  0E00               	movlw	0
  5689  0017AE  22DD               	addwfc	postdec2,f,c
  5690  0017B0                     l2434:
  5691                           
  5692                           ;display_LCD.c: 98: }
  5693                           ;display_LCD.c: 100: if(tela_exibida==1){
  5694  0017B0  043A               	decf	_tela_exibida,w,c
  5695  0017B2  103B               	iorwf	_tela_exibida+1,w,c
  5696  0017B4  A4D8               	btfss	status,2,c
  5697  0017B6  0012               	return	
  5698                           
  5699                           ;display_LCD.c: 101: if(cursor==0) Despertador->hora=Despertador->hora+10;
  5700  0017B8  5036               	movf	_cursor,w,c
  5701  0017BA  1037               	iorwf	_cursor+1,w,c
  5702  0017BC  A4D8               	btfss	status,2,c
  5703  0017BE  D018               	goto	l2440
  5704  0017C0  EE20 F004          	lfsr	2,4
  5705  0017C4  5015               	movf	incrementa_variavel@Despertador,w,c
  5706  0017C6  26D9               	addwf	fsr2l,f,c
  5707  0017C8  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5708  0017CA  22DA               	addwfc	fsr2h,f,c
  5709  0017CC  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5710  0017D0  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5711  0017D4  0E0A               	movlw	10
  5712  0017D6  2619               	addwf	??_incrementa_variavel,f,c
  5713  0017D8  0E00               	movlw	0
  5714  0017DA  221A               	addwfc	??_incrementa_variavel+1,f,c
  5715  0017DC  EE20 F004          	lfsr	2,4
  5716  0017E0  5015               	movf	incrementa_variavel@Despertador,w,c
  5717  0017E2  26D9               	addwf	fsr2l,f,c
  5718  0017E4  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5719  0017E6  22DA               	addwfc	fsr2h,f,c
  5720  0017E8  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5721  0017EC  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5722  0017F0                     l2440:
  5723                           
  5724                           ;display_LCD.c: 102: if(cursor==1) Despertador->hora++;
  5725  0017F0  0436               	decf	_cursor,w,c
  5726  0017F2  1037               	iorwf	_cursor+1,w,c
  5727  0017F4  A4D8               	btfss	status,2,c
  5728  0017F6  D009               	goto	l2444
  5729  0017F8  EE20 F004          	lfsr	2,4
  5730  0017FC  5015               	movf	incrementa_variavel@Despertador,w,c
  5731  0017FE  26D9               	addwf	fsr2l,f,c
  5732  001800  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5733  001802  22DA               	addwfc	fsr2h,f,c
  5734  001804  2ADE               	incf	postinc2,f,c
  5735  001806  0E00               	movlw	0
  5736  001808  22DD               	addwfc	postdec2,f,c
  5737  00180A                     l2444:
  5738                           
  5739                           ;display_LCD.c: 103: if(cursor==2) Despertador->minuto=Despertador->minuto+10;
  5740  00180A  0E02               	movlw	2
  5741  00180C  1836               	xorwf	_cursor,w,c
  5742  00180E  1037               	iorwf	_cursor+1,w,c
  5743  001810  A4D8               	btfss	status,2,c
  5744  001812  D014               	goto	l2448
  5745  001814  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5746  001818  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5747  00181C  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5748  001820  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5749  001824  0E0A               	movlw	10
  5750  001826  2619               	addwf	??_incrementa_variavel,f,c
  5751  001828  0E00               	movlw	0
  5752  00182A  221A               	addwfc	??_incrementa_variavel+1,f,c
  5753  00182C  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5754  001830  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5755  001834  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5756  001838  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5757  00183C                     l2448:
  5758                           
  5759                           ;display_LCD.c: 104: if(cursor==3) Despertador->minuto++;
  5760  00183C  0E03               	movlw	3
  5761  00183E  1836               	xorwf	_cursor,w,c
  5762  001840  1037               	iorwf	_cursor+1,w,c
  5763  001842  A4D8               	btfss	status,2,c
  5764  001844  D007               	goto	l2452
  5765  001846  C015  FFD9         	movff	incrementa_variavel@Despertador,fsr2l
  5766  00184A  C016  FFDA         	movff	incrementa_variavel@Despertador+1,fsr2h
  5767  00184E  2ADE               	incf	postinc2,f,c
  5768  001850  0E00               	movlw	0
  5769  001852  22DD               	addwfc	postdec2,f,c
  5770  001854                     l2452:
  5771                           
  5772                           ;display_LCD.c: 105: if(cursor==4) Despertador->segundo=Despertador->segundo+10;
  5773  001854  0E04               	movlw	4
  5774  001856  1836               	xorwf	_cursor,w,c
  5775  001858  1037               	iorwf	_cursor+1,w,c
  5776  00185A  A4D8               	btfss	status,2,c
  5777  00185C  D018               	goto	l2456
  5778  00185E  EE20 F002          	lfsr	2,2
  5779  001862  5015               	movf	incrementa_variavel@Despertador,w,c
  5780  001864  26D9               	addwf	fsr2l,f,c
  5781  001866  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5782  001868  22DA               	addwfc	fsr2h,f,c
  5783  00186A  CFDE F019          	movff	postinc2,??_incrementa_variavel
  5784  00186E  CFDD F01A          	movff	postdec2,??_incrementa_variavel+1
  5785  001872  0E0A               	movlw	10
  5786  001874  2619               	addwf	??_incrementa_variavel,f,c
  5787  001876  0E00               	movlw	0
  5788  001878  221A               	addwfc	??_incrementa_variavel+1,f,c
  5789  00187A  EE20 F002          	lfsr	2,2
  5790  00187E  5015               	movf	incrementa_variavel@Despertador,w,c
  5791  001880  26D9               	addwf	fsr2l,f,c
  5792  001882  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5793  001884  22DA               	addwfc	fsr2h,f,c
  5794  001886  C019  FFDE         	movff	??_incrementa_variavel,postinc2
  5795  00188A  C01A  FFDD         	movff	??_incrementa_variavel+1,postdec2
  5796  00188E                     l2456:
  5797                           
  5798                           ;display_LCD.c: 106: if(cursor==5) Despertador->segundo++;
  5799  00188E  0E05               	movlw	5
  5800  001890  1836               	xorwf	_cursor,w,c
  5801  001892  1037               	iorwf	_cursor+1,w,c
  5802  001894  A4D8               	btfss	status,2,c
  5803  001896  D009               	goto	l2460
  5804  001898  EE20 F002          	lfsr	2,2
  5805  00189C  5015               	movf	incrementa_variavel@Despertador,w,c
  5806  00189E  26D9               	addwf	fsr2l,f,c
  5807  0018A0  5016               	movf	incrementa_variavel@Despertador+1,w,c
  5808  0018A2  22DA               	addwfc	fsr2h,f,c
  5809  0018A4  2ADE               	incf	postinc2,f,c
  5810  0018A6  0E00               	movlw	0
  5811  0018A8  22DD               	addwfc	postdec2,f,c
  5812  0018AA                     l2460:
  5813                           
  5814                           ;display_LCD.c: 107: controla_despertador(Despertador);
  5815  0018AA  C015  F00F         	movff	incrementa_variavel@Despertador,controla_despertador@Despertador
  5816  0018AE  C016  F010         	movff	incrementa_variavel@Despertador+1,controla_despertador@Despertador+1
  5817  0018B2  ECE6  F00D         	call	_controla_despertador	;wreg free
  5818  0018B6  0012               	return	
  5819  0018B8                     __end_of_incrementa_variavel:
  5820                           	opt stack 0
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           intcon	equ	0xFF2
  5828                           postinc0	equ	0xFEE
  5829                           wreg	equ	0xFE8
  5830                           indf1	equ	0xFE7
  5831                           postinc1	equ	0xFE6
  5832                           postdec1	equ	0xFE5
  5833                           fsr1h	equ	0xFE2
  5834                           fsr1l	equ	0xFE1
  5835                           indf2	equ	0xFDF
  5836                           postinc2	equ	0xFDE
  5837                           postdec2	equ	0xFDD
  5838                           plusw2	equ	0xFDB
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           
  5843 ;; *************** function _decrementa_variavel *****************
  5844 ;; Defined at:
  5845 ;;		line 111 in file "display_LCD.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  Relogio         2   18[COMRAM] PTR struct .
  5848 ;;		 -> checa_botao@Relogio(2), 
  5849 ;;  Despertador     2   20[COMRAM] PTR struct .
  5850 ;;		 -> checa_botao@Despertador(2), 
  5851 ;;  Calendario      2   22[COMRAM] PTR struct .
  5852 ;;		 -> checa_botao@Calendario(2), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5864 ;;      Params:         6       0       0       0       0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5866 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5867 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5868 ;;Total ram usage:       10 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    2
  5871 ;; This function calls:
  5872 ;;		_controla_despertador
  5873 ;; This function is called by:
  5874 ;;		_checa_botao
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text30
  5879  001280                     __ptext30:
  5880                           	opt stack 0
  5881  001280                     _decrementa_variavel:
  5882                           	opt stack 27
  5883                           
  5884                           ;display_LCD.c: 112: if(tela_exibida==0){
  5885                           
  5886                           ;incstack = 0
  5887  001280  503A               	movf	_tela_exibida,w,c
  5888  001282  103B               	iorwf	_tela_exibida+1,w,c
  5889  001284  A4D8               	btfss	status,2,c
  5890  001286  D10C               	goto	l2512
  5891                           
  5892                           ;display_LCD.c: 113: if(cursor==0) Relogio->hora=Relogio->hora-10;
  5893  001288  5036               	movf	_cursor,w,c
  5894  00128A  1037               	iorwf	_cursor+1,w,c
  5895  00128C  A4D8               	btfss	status,2,c
  5896  00128E  D01C               	goto	l2468
  5897  001290  0EF6               	movlw	246
  5898  001292  6E19               	movwf	??_decrementa_variavel& (0+255),c
  5899  001294  0EFF               	movlw	255
  5900  001296  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  5901  001298  EE20 F004          	lfsr	2,4
  5902  00129C  5013               	movf	decrementa_variavel@Relogio,w,c
  5903  00129E  26D9               	addwf	fsr2l,f,c
  5904  0012A0  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5905  0012A2  22DA               	addwfc	fsr2h,f,c
  5906  0012A4  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  5907  0012A8  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  5908  0012AC  5019               	movf	??_decrementa_variavel,w,c
  5909  0012AE  261B               	addwf	??_decrementa_variavel+2,f,c
  5910  0012B0  501A               	movf	??_decrementa_variavel+1,w,c
  5911  0012B2  221C               	addwfc	??_decrementa_variavel+3,f,c
  5912  0012B4  EE20 F004          	lfsr	2,4
  5913  0012B8  5013               	movf	decrementa_variavel@Relogio,w,c
  5914  0012BA  26D9               	addwf	fsr2l,f,c
  5915  0012BC  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5916  0012BE  22DA               	addwfc	fsr2h,f,c
  5917  0012C0  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  5918  0012C4  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  5919  0012C8                     l2468:
  5920                           
  5921                           ;display_LCD.c: 114: if(cursor==1) Relogio->hora--;
  5922  0012C8  0436               	decf	_cursor,w,c
  5923  0012CA  1037               	iorwf	_cursor+1,w,c
  5924  0012CC  A4D8               	btfss	status,2,c
  5925  0012CE  D009               	goto	l2472
  5926  0012D0  EE20 F004          	lfsr	2,4
  5927  0012D4  5013               	movf	decrementa_variavel@Relogio,w,c
  5928  0012D6  26D9               	addwf	fsr2l,f,c
  5929  0012D8  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5930  0012DA  22DA               	addwfc	fsr2h,f,c
  5931  0012DC  06DE               	decf	postinc2,f,c
  5932  0012DE  0E00               	movlw	0
  5933  0012E0  5ADD               	subwfb	postdec2,f,c
  5934  0012E2                     l2472:
  5935                           
  5936                           ;display_LCD.c: 115: if(cursor==2) Relogio->minuto=Relogio->minuto-10;
  5937  0012E2  0E02               	movlw	2
  5938  0012E4  1836               	xorwf	_cursor,w,c
  5939  0012E6  1037               	iorwf	_cursor+1,w,c
  5940  0012E8  A4D8               	btfss	status,2,c
  5941  0012EA  D018               	goto	l2476
  5942  0012EC  0EF6               	movlw	246
  5943  0012EE  6E19               	movwf	??_decrementa_variavel& (0+255),c
  5944  0012F0  0EFF               	movlw	255
  5945  0012F2  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  5946  0012F4  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  5947  0012F8  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  5948  0012FC  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  5949  001300  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  5950  001304  5019               	movf	??_decrementa_variavel,w,c
  5951  001306  261B               	addwf	??_decrementa_variavel+2,f,c
  5952  001308  501A               	movf	??_decrementa_variavel+1,w,c
  5953  00130A  221C               	addwfc	??_decrementa_variavel+3,f,c
  5954  00130C  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  5955  001310  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  5956  001314  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  5957  001318  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  5958  00131C                     l2476:
  5959                           
  5960                           ;display_LCD.c: 116: if(cursor==3) Relogio->minuto--;
  5961  00131C  0E03               	movlw	3
  5962  00131E  1836               	xorwf	_cursor,w,c
  5963  001320  1037               	iorwf	_cursor+1,w,c
  5964  001322  A4D8               	btfss	status,2,c
  5965  001324  D007               	goto	l2480
  5966  001326  C013  FFD9         	movff	decrementa_variavel@Relogio,fsr2l
  5967  00132A  C014  FFDA         	movff	decrementa_variavel@Relogio+1,fsr2h
  5968  00132E  06DE               	decf	postinc2,f,c
  5969  001330  0E00               	movlw	0
  5970  001332  5ADD               	subwfb	postdec2,f,c
  5971  001334                     l2480:
  5972                           
  5973                           ;display_LCD.c: 117: if(cursor==4) Relogio->segundo=Relogio->segundo-10;
  5974  001334  0E04               	movlw	4
  5975  001336  1836               	xorwf	_cursor,w,c
  5976  001338  1037               	iorwf	_cursor+1,w,c
  5977  00133A  A4D8               	btfss	status,2,c
  5978  00133C  D01C               	goto	l2484
  5979  00133E  0EF6               	movlw	246
  5980  001340  6E19               	movwf	??_decrementa_variavel& (0+255),c
  5981  001342  0EFF               	movlw	255
  5982  001344  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  5983  001346  EE20 F002          	lfsr	2,2
  5984  00134A  5013               	movf	decrementa_variavel@Relogio,w,c
  5985  00134C  26D9               	addwf	fsr2l,f,c
  5986  00134E  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5987  001350  22DA               	addwfc	fsr2h,f,c
  5988  001352  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  5989  001356  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  5990  00135A  5019               	movf	??_decrementa_variavel,w,c
  5991  00135C  261B               	addwf	??_decrementa_variavel+2,f,c
  5992  00135E  501A               	movf	??_decrementa_variavel+1,w,c
  5993  001360  221C               	addwfc	??_decrementa_variavel+3,f,c
  5994  001362  EE20 F002          	lfsr	2,2
  5995  001366  5013               	movf	decrementa_variavel@Relogio,w,c
  5996  001368  26D9               	addwf	fsr2l,f,c
  5997  00136A  5014               	movf	decrementa_variavel@Relogio+1,w,c
  5998  00136C  22DA               	addwfc	fsr2h,f,c
  5999  00136E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6000  001372  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6001  001376                     l2484:
  6002                           
  6003                           ;display_LCD.c: 118: if(cursor==5) Relogio->segundo--;
  6004  001376  0E05               	movlw	5
  6005  001378  1836               	xorwf	_cursor,w,c
  6006  00137A  1037               	iorwf	_cursor+1,w,c
  6007  00137C  A4D8               	btfss	status,2,c
  6008  00137E  D009               	goto	l2488
  6009  001380  EE20 F002          	lfsr	2,2
  6010  001384  5013               	movf	decrementa_variavel@Relogio,w,c
  6011  001386  26D9               	addwf	fsr2l,f,c
  6012  001388  5014               	movf	decrementa_variavel@Relogio+1,w,c
  6013  00138A  22DA               	addwfc	fsr2h,f,c
  6014  00138C  06DE               	decf	postinc2,f,c
  6015  00138E  0E00               	movlw	0
  6016  001390  5ADD               	subwfb	postdec2,f,c
  6017  001392                     l2488:
  6018                           
  6019                           ;display_LCD.c: 119: if(cursor==6) Calendario->dia=Calendario->dia-10;
  6020  001392  0E06               	movlw	6
  6021  001394  1836               	xorwf	_cursor,w,c
  6022  001396  1037               	iorwf	_cursor+1,w,c
  6023  001398  A4D8               	btfss	status,2,c
  6024  00139A  D018               	goto	l2492
  6025  00139C  0EF6               	movlw	246
  6026  00139E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6027  0013A0  0EFF               	movlw	255
  6028  0013A2  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6029  0013A4  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6030  0013A8  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6031  0013AC  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6032  0013B0  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6033  0013B4  5019               	movf	??_decrementa_variavel,w,c
  6034  0013B6  261B               	addwf	??_decrementa_variavel+2,f,c
  6035  0013B8  501A               	movf	??_decrementa_variavel+1,w,c
  6036  0013BA  221C               	addwfc	??_decrementa_variavel+3,f,c
  6037  0013BC  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6038  0013C0  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6039  0013C4  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6040  0013C8  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6041  0013CC                     l2492:
  6042                           
  6043                           ;display_LCD.c: 120: if(cursor==7) Calendario->dia--;
  6044  0013CC  0E07               	movlw	7
  6045  0013CE  1836               	xorwf	_cursor,w,c
  6046  0013D0  1037               	iorwf	_cursor+1,w,c
  6047  0013D2  A4D8               	btfss	status,2,c
  6048  0013D4  D007               	goto	l2496
  6049  0013D6  C017  FFD9         	movff	decrementa_variavel@Calendario,fsr2l
  6050  0013DA  C018  FFDA         	movff	decrementa_variavel@Calendario+1,fsr2h
  6051  0013DE  06DE               	decf	postinc2,f,c
  6052  0013E0  0E00               	movlw	0
  6053  0013E2  5ADD               	subwfb	postdec2,f,c
  6054  0013E4                     l2496:
  6055                           
  6056                           ;display_LCD.c: 121: if(cursor==8) Calendario->mes=Calendario->mes-10;
  6057  0013E4  0E08               	movlw	8
  6058  0013E6  1836               	xorwf	_cursor,w,c
  6059  0013E8  1037               	iorwf	_cursor+1,w,c
  6060  0013EA  A4D8               	btfss	status,2,c
  6061  0013EC  D01C               	goto	l2500
  6062  0013EE  0EF6               	movlw	246
  6063  0013F0  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6064  0013F2  0EFF               	movlw	255
  6065  0013F4  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6066  0013F6  EE20 F002          	lfsr	2,2
  6067  0013FA  5017               	movf	decrementa_variavel@Calendario,w,c
  6068  0013FC  26D9               	addwf	fsr2l,f,c
  6069  0013FE  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6070  001400  22DA               	addwfc	fsr2h,f,c
  6071  001402  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6072  001406  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6073  00140A  5019               	movf	??_decrementa_variavel,w,c
  6074  00140C  261B               	addwf	??_decrementa_variavel+2,f,c
  6075  00140E  501A               	movf	??_decrementa_variavel+1,w,c
  6076  001410  221C               	addwfc	??_decrementa_variavel+3,f,c
  6077  001412  EE20 F002          	lfsr	2,2
  6078  001416  5017               	movf	decrementa_variavel@Calendario,w,c
  6079  001418  26D9               	addwf	fsr2l,f,c
  6080  00141A  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6081  00141C  22DA               	addwfc	fsr2h,f,c
  6082  00141E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6083  001422  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6084  001426                     l2500:
  6085                           
  6086                           ;display_LCD.c: 122: if(cursor==9) Calendario->mes--;
  6087  001426  0E09               	movlw	9
  6088  001428  1836               	xorwf	_cursor,w,c
  6089  00142A  1037               	iorwf	_cursor+1,w,c
  6090  00142C  A4D8               	btfss	status,2,c
  6091  00142E  D009               	goto	l2504
  6092  001430  EE20 F002          	lfsr	2,2
  6093  001434  5017               	movf	decrementa_variavel@Calendario,w,c
  6094  001436  26D9               	addwf	fsr2l,f,c
  6095  001438  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6096  00143A  22DA               	addwfc	fsr2h,f,c
  6097  00143C  06DE               	decf	postinc2,f,c
  6098  00143E  0E00               	movlw	0
  6099  001440  5ADD               	subwfb	postdec2,f,c
  6100  001442                     l2504:
  6101                           
  6102                           ;display_LCD.c: 123: if(cursor==10) Calendario->ano=Calendario->ano-10;
  6103  001442  0E0A               	movlw	10
  6104  001444  1836               	xorwf	_cursor,w,c
  6105  001446  1037               	iorwf	_cursor+1,w,c
  6106  001448  A4D8               	btfss	status,2,c
  6107  00144A  D01C               	goto	l2508
  6108  00144C  0EF6               	movlw	246
  6109  00144E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6110  001450  0EFF               	movlw	255
  6111  001452  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6112  001454  EE20 F004          	lfsr	2,4
  6113  001458  5017               	movf	decrementa_variavel@Calendario,w,c
  6114  00145A  26D9               	addwf	fsr2l,f,c
  6115  00145C  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6116  00145E  22DA               	addwfc	fsr2h,f,c
  6117  001460  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6118  001464  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6119  001468  5019               	movf	??_decrementa_variavel,w,c
  6120  00146A  261B               	addwf	??_decrementa_variavel+2,f,c
  6121  00146C  501A               	movf	??_decrementa_variavel+1,w,c
  6122  00146E  221C               	addwfc	??_decrementa_variavel+3,f,c
  6123  001470  EE20 F004          	lfsr	2,4
  6124  001474  5017               	movf	decrementa_variavel@Calendario,w,c
  6125  001476  26D9               	addwf	fsr2l,f,c
  6126  001478  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6127  00147A  22DA               	addwfc	fsr2h,f,c
  6128  00147C  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6129  001480  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6130  001484                     l2508:
  6131                           
  6132                           ;display_LCD.c: 124: if(cursor==11) Calendario->ano--;
  6133  001484  0E0B               	movlw	11
  6134  001486  1836               	xorwf	_cursor,w,c
  6135  001488  1037               	iorwf	_cursor+1,w,c
  6136  00148A  A4D8               	btfss	status,2,c
  6137  00148C  D009               	goto	l2512
  6138  00148E  EE20 F004          	lfsr	2,4
  6139  001492  5017               	movf	decrementa_variavel@Calendario,w,c
  6140  001494  26D9               	addwf	fsr2l,f,c
  6141  001496  5018               	movf	decrementa_variavel@Calendario+1,w,c
  6142  001498  22DA               	addwfc	fsr2h,f,c
  6143  00149A  06DE               	decf	postinc2,f,c
  6144  00149C  0E00               	movlw	0
  6145  00149E  5ADD               	subwfb	postdec2,f,c
  6146  0014A0                     l2512:
  6147                           
  6148                           ;display_LCD.c: 125: }
  6149                           ;display_LCD.c: 127: if(tela_exibida==1){
  6150  0014A0  043A               	decf	_tela_exibida,w,c
  6151  0014A2  103B               	iorwf	_tela_exibida+1,w,c
  6152  0014A4  A4D8               	btfss	status,2,c
  6153  0014A6  0012               	return	
  6154                           
  6155                           ;display_LCD.c: 128: if(cursor==0) Despertador->hora=Despertador->hora-10;
  6156  0014A8  5036               	movf	_cursor,w,c
  6157  0014AA  1037               	iorwf	_cursor+1,w,c
  6158  0014AC  A4D8               	btfss	status,2,c
  6159  0014AE  D01C               	goto	l2518
  6160  0014B0  0EF6               	movlw	246
  6161  0014B2  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6162  0014B4  0EFF               	movlw	255
  6163  0014B6  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6164  0014B8  EE20 F004          	lfsr	2,4
  6165  0014BC  5015               	movf	decrementa_variavel@Despertador,w,c
  6166  0014BE  26D9               	addwf	fsr2l,f,c
  6167  0014C0  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6168  0014C2  22DA               	addwfc	fsr2h,f,c
  6169  0014C4  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6170  0014C8  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6171  0014CC  5019               	movf	??_decrementa_variavel,w,c
  6172  0014CE  261B               	addwf	??_decrementa_variavel+2,f,c
  6173  0014D0  501A               	movf	??_decrementa_variavel+1,w,c
  6174  0014D2  221C               	addwfc	??_decrementa_variavel+3,f,c
  6175  0014D4  EE20 F004          	lfsr	2,4
  6176  0014D8  5015               	movf	decrementa_variavel@Despertador,w,c
  6177  0014DA  26D9               	addwf	fsr2l,f,c
  6178  0014DC  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6179  0014DE  22DA               	addwfc	fsr2h,f,c
  6180  0014E0  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6181  0014E4  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6182  0014E8                     l2518:
  6183                           
  6184                           ;display_LCD.c: 129: if(cursor==1) Despertador->hora--;
  6185  0014E8  0436               	decf	_cursor,w,c
  6186  0014EA  1037               	iorwf	_cursor+1,w,c
  6187  0014EC  A4D8               	btfss	status,2,c
  6188  0014EE  D009               	goto	l2522
  6189  0014F0  EE20 F004          	lfsr	2,4
  6190  0014F4  5015               	movf	decrementa_variavel@Despertador,w,c
  6191  0014F6  26D9               	addwf	fsr2l,f,c
  6192  0014F8  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6193  0014FA  22DA               	addwfc	fsr2h,f,c
  6194  0014FC  06DE               	decf	postinc2,f,c
  6195  0014FE  0E00               	movlw	0
  6196  001500  5ADD               	subwfb	postdec2,f,c
  6197  001502                     l2522:
  6198                           
  6199                           ;display_LCD.c: 130: if(cursor==2) Despertador->minuto=Despertador->minuto-10;
  6200  001502  0E02               	movlw	2
  6201  001504  1836               	xorwf	_cursor,w,c
  6202  001506  1037               	iorwf	_cursor+1,w,c
  6203  001508  A4D8               	btfss	status,2,c
  6204  00150A  D018               	goto	l2526
  6205  00150C  0EF6               	movlw	246
  6206  00150E  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6207  001510  0EFF               	movlw	255
  6208  001512  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6209  001514  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6210  001518  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6211  00151C  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6212  001520  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6213  001524  5019               	movf	??_decrementa_variavel,w,c
  6214  001526  261B               	addwf	??_decrementa_variavel+2,f,c
  6215  001528  501A               	movf	??_decrementa_variavel+1,w,c
  6216  00152A  221C               	addwfc	??_decrementa_variavel+3,f,c
  6217  00152C  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6218  001530  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6219  001534  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6220  001538  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6221  00153C                     l2526:
  6222                           
  6223                           ;display_LCD.c: 131: if(cursor==3) Despertador->minuto--;
  6224  00153C  0E03               	movlw	3
  6225  00153E  1836               	xorwf	_cursor,w,c
  6226  001540  1037               	iorwf	_cursor+1,w,c
  6227  001542  A4D8               	btfss	status,2,c
  6228  001544  D007               	goto	l2530
  6229  001546  C015  FFD9         	movff	decrementa_variavel@Despertador,fsr2l
  6230  00154A  C016  FFDA         	movff	decrementa_variavel@Despertador+1,fsr2h
  6231  00154E  06DE               	decf	postinc2,f,c
  6232  001550  0E00               	movlw	0
  6233  001552  5ADD               	subwfb	postdec2,f,c
  6234  001554                     l2530:
  6235                           
  6236                           ;display_LCD.c: 132: if(cursor==4) Despertador->segundo=Despertador->segundo-10;
  6237  001554  0E04               	movlw	4
  6238  001556  1836               	xorwf	_cursor,w,c
  6239  001558  1037               	iorwf	_cursor+1,w,c
  6240  00155A  A4D8               	btfss	status,2,c
  6241  00155C  D01C               	goto	l2534
  6242  00155E  0EF6               	movlw	246
  6243  001560  6E19               	movwf	??_decrementa_variavel& (0+255),c
  6244  001562  0EFF               	movlw	255
  6245  001564  6E1A               	movwf	(??_decrementa_variavel+1)& (0+255),c
  6246  001566  EE20 F002          	lfsr	2,2
  6247  00156A  5015               	movf	decrementa_variavel@Despertador,w,c
  6248  00156C  26D9               	addwf	fsr2l,f,c
  6249  00156E  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6250  001570  22DA               	addwfc	fsr2h,f,c
  6251  001572  CFDE F01B          	movff	postinc2,??_decrementa_variavel+2
  6252  001576  CFDD F01C          	movff	postdec2,??_decrementa_variavel+3
  6253  00157A  5019               	movf	??_decrementa_variavel,w,c
  6254  00157C  261B               	addwf	??_decrementa_variavel+2,f,c
  6255  00157E  501A               	movf	??_decrementa_variavel+1,w,c
  6256  001580  221C               	addwfc	??_decrementa_variavel+3,f,c
  6257  001582  EE20 F002          	lfsr	2,2
  6258  001586  5015               	movf	decrementa_variavel@Despertador,w,c
  6259  001588  26D9               	addwf	fsr2l,f,c
  6260  00158A  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6261  00158C  22DA               	addwfc	fsr2h,f,c
  6262  00158E  C01B  FFDE         	movff	??_decrementa_variavel+2,postinc2
  6263  001592  C01C  FFDD         	movff	??_decrementa_variavel+3,postdec2
  6264  001596                     l2534:
  6265                           
  6266                           ;display_LCD.c: 133: if(cursor==5) Despertador->segundo--;
  6267  001596  0E05               	movlw	5
  6268  001598  1836               	xorwf	_cursor,w,c
  6269  00159A  1037               	iorwf	_cursor+1,w,c
  6270  00159C  A4D8               	btfss	status,2,c
  6271  00159E  D009               	goto	l2538
  6272  0015A0  EE20 F002          	lfsr	2,2
  6273  0015A4  5015               	movf	decrementa_variavel@Despertador,w,c
  6274  0015A6  26D9               	addwf	fsr2l,f,c
  6275  0015A8  5016               	movf	decrementa_variavel@Despertador+1,w,c
  6276  0015AA  22DA               	addwfc	fsr2h,f,c
  6277  0015AC  06DE               	decf	postinc2,f,c
  6278  0015AE  0E00               	movlw	0
  6279  0015B0  5ADD               	subwfb	postdec2,f,c
  6280  0015B2                     l2538:
  6281                           
  6282                           ;display_LCD.c: 134: controla_despertador(Despertador);
  6283  0015B2  C015  F00F         	movff	decrementa_variavel@Despertador,controla_despertador@Despertador
  6284  0015B6  C016  F010         	movff	decrementa_variavel@Despertador+1,controla_despertador@Despertador+1
  6285  0015BA  ECE6  F00D         	call	_controla_despertador	;wreg free
  6286  0015BE  0012               	return	
  6287  0015C0                     __end_of_decrementa_variavel:
  6288                           	opt stack 0
  6289                           tblptru	equ	0xFF8
  6290                           tblptrh	equ	0xFF7
  6291                           tblptrl	equ	0xFF6
  6292                           tablat	equ	0xFF5
  6293                           prodh	equ	0xFF4
  6294                           prodl	equ	0xFF3
  6295                           intcon	equ	0xFF2
  6296                           postinc0	equ	0xFEE
  6297                           wreg	equ	0xFE8
  6298                           indf1	equ	0xFE7
  6299                           postinc1	equ	0xFE6
  6300                           postdec1	equ	0xFE5
  6301                           fsr1h	equ	0xFE2
  6302                           fsr1l	equ	0xFE1
  6303                           indf2	equ	0xFDF
  6304                           postinc2	equ	0xFDE
  6305                           postdec2	equ	0xFDD
  6306                           plusw2	equ	0xFDB
  6307                           fsr2h	equ	0xFDA
  6308                           fsr2l	equ	0xFD9
  6309                           status	equ	0xFD8
  6310                           
  6311 ;; *************** function _controla_despertador *****************
  6312 ;; Defined at:
  6313 ;;		line 61 in file "relogio.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  Despertador     2   14[COMRAM] PTR struct .
  6316 ;;		 -> checa_botao@Despertador(2), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6328 ;;      Params:         2       0       0       0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6331 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6332 ;;Total ram usage:        4 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_incrementa_variavel
  6339 ;;		_decrementa_variavel
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text31
  6344  001BCC                     __ptext31:
  6345                           	opt stack 0
  6346  001BCC                     _controla_despertador:
  6347                           	opt stack 27
  6348                           
  6349                           ;relogio.c: 62: if(Despertador->segundo>59){
  6350                           
  6351                           ;incstack = 0
  6352  001BCC  EE20 F002          	lfsr	2,2
  6353  001BD0  500F               	movf	controla_despertador@Despertador,w,c
  6354  001BD2  26D9               	addwf	fsr2l,f,c
  6355  001BD4  5010               	movf	controla_despertador@Despertador+1,w,c
  6356  001BD6  22DA               	addwfc	fsr2h,f,c
  6357  001BD8  0E01               	movlw	1
  6358  001BDA  BEDB               	btfsc	plusw2,7,c
  6359  001BDC  D018               	goto	l183
  6360  001BDE  0E01               	movlw	1
  6361  001BE0  50DB               	movf	plusw2,w,c
  6362  001BE2  E104               	bnz	u1730
  6363  001BE4  0E3C               	movlw	60
  6364  001BE6  5CDE               	subwf	postinc2,w,c
  6365  001BE8  A0D8               	btfss	status,0,c
  6366  001BEA  D011               	goto	l183
  6367  001BEC                     u1730:
  6368                           
  6369                           ;relogio.c: 63: Despertador->minuto++;
  6370  001BEC  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6371  001BF0  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6372  001BF4  2ADE               	incf	postinc2,f,c
  6373  001BF6  0E00               	movlw	0
  6374  001BF8  22DD               	addwfc	postdec2,f,c
  6375                           
  6376                           ;relogio.c: 64: Despertador->segundo=0;
  6377  001BFA  EE20 F002          	lfsr	2,2
  6378  001BFE  500F               	movf	controla_despertador@Despertador,w,c
  6379  001C00  26D9               	addwf	fsr2l,f,c
  6380  001C02  5010               	movf	controla_despertador@Despertador+1,w,c
  6381  001C04  22DA               	addwfc	fsr2h,f,c
  6382  001C06  0E00               	movlw	0
  6383  001C08  6EDE               	movwf	postinc2,c
  6384  001C0A  0E00               	movlw	0
  6385  001C0C  6EDD               	movwf	postdec2,c
  6386  001C0E                     l183:
  6387                           
  6388                           ;relogio.c: 65: }
  6389                           ;relogio.c: 66: if(Despertador->segundo<0){
  6390  001C0E  EE20 F002          	lfsr	2,2
  6391  001C12  500F               	movf	controla_despertador@Despertador,w,c
  6392  001C14  26D9               	addwf	fsr2l,f,c
  6393  001C16  5010               	movf	controla_despertador@Despertador+1,w,c
  6394  001C18  22DA               	addwfc	fsr2h,f,c
  6395  001C1A  0E01               	movlw	1
  6396  001C1C  AEDB               	btfss	plusw2,7,c
  6397  001C1E  D011               	goto	l184
  6398                           
  6399                           ;relogio.c: 67: Despertador->segundo=59;
  6400  001C20  EE20 F002          	lfsr	2,2
  6401  001C24  500F               	movf	controla_despertador@Despertador,w,c
  6402  001C26  26D9               	addwf	fsr2l,f,c
  6403  001C28  5010               	movf	controla_despertador@Despertador+1,w,c
  6404  001C2A  22DA               	addwfc	fsr2h,f,c
  6405  001C2C  0E3B               	movlw	59
  6406  001C2E  6EDE               	movwf	postinc2,c
  6407  001C30  0E00               	movlw	0
  6408  001C32  6EDD               	movwf	postdec2,c
  6409                           
  6410                           ;relogio.c: 68: Despertador->minuto--;
  6411  001C34  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6412  001C38  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6413  001C3C  06DE               	decf	postinc2,f,c
  6414  001C3E  0E00               	movlw	0
  6415  001C40  5ADD               	subwfb	postdec2,f,c
  6416  001C42                     l184:
  6417                           
  6418                           ;relogio.c: 69: }
  6419                           ;relogio.c: 71: if(Despertador->minuto>59){
  6420  001C42  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6421  001C46  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6422  001C4A  0E01               	movlw	1
  6423  001C4C  BEDB               	btfsc	plusw2,7,c
  6424  001C4E  D018               	goto	l2306
  6425  001C50  0E01               	movlw	1
  6426  001C52  50DB               	movf	plusw2,w,c
  6427  001C54  E104               	bnz	u1750
  6428  001C56  0E3C               	movlw	60
  6429  001C58  5CDE               	subwf	postinc2,w,c
  6430  001C5A  A0D8               	btfss	status,0,c
  6431  001C5C  D011               	goto	l2306
  6432  001C5E                     u1750:
  6433                           
  6434                           ;relogio.c: 72: Despertador->hora++;
  6435  001C5E  EE20 F004          	lfsr	2,4
  6436  001C62  500F               	movf	controla_despertador@Despertador,w,c
  6437  001C64  26D9               	addwf	fsr2l,f,c
  6438  001C66  5010               	movf	controla_despertador@Despertador+1,w,c
  6439  001C68  22DA               	addwfc	fsr2h,f,c
  6440  001C6A  2ADE               	incf	postinc2,f,c
  6441  001C6C  0E00               	movlw	0
  6442  001C6E  22DD               	addwfc	postdec2,f,c
  6443                           
  6444                           ;relogio.c: 73: Despertador->minuto=0;
  6445  001C70  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6446  001C74  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6447  001C78  0E00               	movlw	0
  6448  001C7A  6EDE               	movwf	postinc2,c
  6449  001C7C  0E00               	movlw	0
  6450  001C7E  6EDD               	movwf	postdec2,c
  6451  001C80                     l2306:
  6452                           
  6453                           ;relogio.c: 74: }
  6454                           ;relogio.c: 75: if(Despertador->minuto<0){
  6455  001C80  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6456  001C84  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6457  001C88  0E01               	movlw	1
  6458  001C8A  AEDB               	btfss	plusw2,7,c
  6459  001C8C  D011               	goto	l2312
  6460                           
  6461                           ;relogio.c: 76: Despertador->minuto=59;
  6462  001C8E  C00F  FFD9         	movff	controla_despertador@Despertador,fsr2l
  6463  001C92  C010  FFDA         	movff	controla_despertador@Despertador+1,fsr2h
  6464  001C96  0E3B               	movlw	59
  6465  001C98  6EDE               	movwf	postinc2,c
  6466  001C9A  0E00               	movlw	0
  6467  001C9C  6EDD               	movwf	postdec2,c
  6468                           
  6469                           ;relogio.c: 77: Despertador->hora--;
  6470  001C9E  EE20 F004          	lfsr	2,4
  6471  001CA2  500F               	movf	controla_despertador@Despertador,w,c
  6472  001CA4  26D9               	addwf	fsr2l,f,c
  6473  001CA6  5010               	movf	controla_despertador@Despertador+1,w,c
  6474  001CA8  22DA               	addwfc	fsr2h,f,c
  6475  001CAA  06DE               	decf	postinc2,f,c
  6476  001CAC  0E00               	movlw	0
  6477  001CAE  5ADD               	subwfb	postdec2,f,c
  6478  001CB0                     l2312:
  6479                           
  6480                           ;relogio.c: 78: }
  6481                           ;relogio.c: 80: if(Despertador->hora>23){
  6482  001CB0  EE20 F004          	lfsr	2,4
  6483  001CB4  500F               	movf	controla_despertador@Despertador,w,c
  6484  001CB6  26D9               	addwf	fsr2l,f,c
  6485  001CB8  5010               	movf	controla_despertador@Despertador+1,w,c
  6486  001CBA  22DA               	addwfc	fsr2h,f,c
  6487  001CBC  0E01               	movlw	1
  6488  001CBE  BEDB               	btfsc	plusw2,7,c
  6489  001CC0  D011               	goto	l187
  6490  001CC2  0E01               	movlw	1
  6491  001CC4  50DB               	movf	plusw2,w,c
  6492  001CC6  E104               	bnz	u1770
  6493  001CC8  0E18               	movlw	24
  6494  001CCA  5CDE               	subwf	postinc2,w,c
  6495  001CCC  A0D8               	btfss	status,0,c
  6496  001CCE  D00A               	goto	l187
  6497  001CD0                     u1770:
  6498                           
  6499                           ;relogio.c: 81: Despertador->hora=0;
  6500  001CD0  EE20 F004          	lfsr	2,4
  6501  001CD4  500F               	movf	controla_despertador@Despertador,w,c
  6502  001CD6  26D9               	addwf	fsr2l,f,c
  6503  001CD8  5010               	movf	controla_despertador@Despertador+1,w,c
  6504  001CDA  22DA               	addwfc	fsr2h,f,c
  6505  001CDC  0E00               	movlw	0
  6506  001CDE  6EDE               	movwf	postinc2,c
  6507  001CE0  0E00               	movlw	0
  6508  001CE2  6EDD               	movwf	postdec2,c
  6509  001CE4                     l187:
  6510                           
  6511                           ;relogio.c: 82: }
  6512                           ;relogio.c: 83: if(Despertador->hora<0){
  6513  001CE4  EE20 F004          	lfsr	2,4
  6514  001CE8  500F               	movf	controla_despertador@Despertador,w,c
  6515  001CEA  26D9               	addwf	fsr2l,f,c
  6516  001CEC  5010               	movf	controla_despertador@Despertador+1,w,c
  6517  001CEE  22DA               	addwfc	fsr2h,f,c
  6518  001CF0  0E01               	movlw	1
  6519  001CF2  AEDB               	btfss	plusw2,7,c
  6520  001CF4  0012               	return	
  6521                           
  6522                           ;relogio.c: 84: Despertador->hora=23;
  6523  001CF6  EE20 F004          	lfsr	2,4
  6524  001CFA  500F               	movf	controla_despertador@Despertador,w,c
  6525  001CFC  26D9               	addwf	fsr2l,f,c
  6526  001CFE  5010               	movf	controla_despertador@Despertador+1,w,c
  6527  001D00  22DA               	addwfc	fsr2h,f,c
  6528  001D02  0E17               	movlw	23
  6529  001D04  6EDE               	movwf	postinc2,c
  6530  001D06  0E00               	movlw	0
  6531  001D08  6EDD               	movwf	postdec2,c
  6532  001D0A  0012               	return	
  6533  001D0C                     __end_of_controla_despertador:
  6534                           	opt stack 0
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           postinc0	equ	0xFEE
  6543                           wreg	equ	0xFE8
  6544                           indf1	equ	0xFE7
  6545                           postinc1	equ	0xFE6
  6546                           postdec1	equ	0xFE5
  6547                           fsr1h	equ	0xFE2
  6548                           fsr1l	equ	0xFE1
  6549                           indf2	equ	0xFDF
  6550                           postinc2	equ	0xFDE
  6551                           postdec2	equ	0xFDD
  6552                           plusw2	equ	0xFDB
  6553                           fsr2h	equ	0xFDA
  6554                           fsr2l	equ	0xFD9
  6555                           status	equ	0xFD8
  6556                           
  6557 ;; *************** function _SerialRxPinInterrupt *****************
  6558 ;; Defined at:
  6559 ;;		line 153 in file "exercicio_PIC_9_UART.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6575 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6576 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:       14 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		Interrupt level 2
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	intcode
  6587  000008                     __pintcode:
  6588                           	opt stack 0
  6589  000008                     _SerialRxPinInterrupt:
  6590                           	opt stack 23
  6591                           
  6592                           ;incstack = 0
  6593  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6594  00000A  ED1B  F00F         	call	int_func,f	;refresh shadow registers
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           postinc0	equ	0xFEE
  6603                           wreg	equ	0xFE8
  6604                           indf1	equ	0xFE7
  6605                           postinc1	equ	0xFE6
  6606                           postdec1	equ	0xFE5
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           postinc2	equ	0xFDE
  6611                           postdec2	equ	0xFDD
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617                           	psect	intcode_body
  6618  001E36                     __pintcode_body:
  6619                           	opt stack 23
  6620  001E36                     int_func:
  6621                           	opt stack 23
  6622  001E36  0006               	pop		; remove dummy address from shadow register refresh
  6623  001E38  CFFA F001          	movff	pclath,??_SerialRxPinInterrupt
  6624  001E3C  CFFB F002          	movff	pclatu,??_SerialRxPinInterrupt+1
  6625  001E40  CFE9 F003          	movff	fsr0l,??_SerialRxPinInterrupt+2
  6626  001E44  CFEA F004          	movff	fsr0h,??_SerialRxPinInterrupt+3
  6627  001E48  CFE1 F005          	movff	fsr1l,??_SerialRxPinInterrupt+4
  6628  001E4C  CFE2 F006          	movff	fsr1h,??_SerialRxPinInterrupt+5
  6629  001E50  CFD9 F007          	movff	fsr2l,??_SerialRxPinInterrupt+6
  6630  001E54  CFDA F008          	movff	fsr2h,??_SerialRxPinInterrupt+7
  6631  001E58  CFF3 F009          	movff	prodl,??_SerialRxPinInterrupt+8
  6632  001E5C  CFF4 F00A          	movff	prodh,??_SerialRxPinInterrupt+9
  6633  001E60  CFF6 F00B          	movff	tblptrl,??_SerialRxPinInterrupt+10
  6634  001E64  CFF7 F00C          	movff	tblptrh,??_SerialRxPinInterrupt+11
  6635  001E68  CFF8 F00D          	movff	tblptru,??_SerialRxPinInterrupt+12
  6636  001E6C  CFF5 F00E          	movff	tablat,??_SerialRxPinInterrupt+13
  6637                           
  6638                           ;exercicio_PIC_9_UART.c: 156: if(TMR0IF){
  6639  001E70  A4F2               	btfss	intcon,2,c	;volatile
  6640  001E72  D009               	goto	i2l2986
  6641                           
  6642                           ;exercicio_PIC_9_UART.c: 157: TMR0=2535;
  6643  001E74  0E09               	movlw	9
  6644  001E76  6ED7               	movwf	4055,c	;volatile
  6645  001E78  0EE7               	movlw	231
  6646  001E7A  6ED6               	movwf	4054,c	;volatile
  6647                           
  6648                           ;exercicio_PIC_9_UART.c: 158: INTCONbits.TMR0IF=0;
  6649  001E7C  94F2               	bcf	intcon,2,c	;volatile
  6650                           
  6651                           ;exercicio_PIC_9_UART.c: 159: contador++;
  6652  001E7E  4A38               	infsnz	_contador,f,c
  6653  001E80  2A39               	incf	_contador+1,f,c
  6654                           
  6655                           ;exercicio_PIC_9_UART.c: 160: flag_time=0;
  6656  001E82  0E00               	movlw	0
  6657  001E84  6E3E               	movwf	_flag_time,c
  6658  001E86                     i2l2986:
  6659                           
  6660                           ;exercicio_PIC_9_UART.c: 161: }
  6661                           ;exercicio_PIC_9_UART.c: 162: if(contador>0){
  6662  001E86  BE39               	btfsc	_contador+1,7,c
  6663  001E88  D00B               	goto	i2l2990
  6664  001E8A  5039               	movf	_contador+1,w,c
  6665  001E8C  E103               	bnz	i2u296_40
  6666  001E8E  0438               	decf	_contador,w,c
  6667  001E90  A0D8               	btfss	status,0,c
  6668  001E92  D006               	goto	i2l2990
  6669  001E94                     i2u296_40:
  6670                           
  6671                           ;exercicio_PIC_9_UART.c: 163: flag_time=1;
  6672  001E94  0E01               	movlw	1
  6673  001E96  6E3E               	movwf	_flag_time,c
  6674                           
  6675                           ;exercicio_PIC_9_UART.c: 164: contador=0;
  6676  001E98  0E00               	movlw	0
  6677  001E9A  6E39               	movwf	_contador+1,c
  6678  001E9C  0E00               	movlw	0
  6679  001E9E  6E38               	movwf	_contador,c
  6680  001EA0                     i2l2990:
  6681                           
  6682                           ;exercicio_PIC_9_UART.c: 165: }
  6683                           ;exercicio_PIC_9_UART.c: 168: if(PIR1bits.RCIF == 1){
  6684  001EA0  AA9E               	btfss	3998,5,c	;volatile
  6685  001EA2  D01C               	goto	i2l341
  6686                           
  6687                           ;exercicio_PIC_9_UART.c: 169: if(numero_entrada_terminal<3){
  6688  001EA4  5033               	movf	_numero_entrada_terminal+1,w,c
  6689  001EA6  E111               	bnz	i2l336
  6690  001EA8  0E03               	movlw	3
  6691  001EAA  5C32               	subwf	_numero_entrada_terminal,w,c
  6692  001EAC  B0D8               	btfsc	status,0,c
  6693  001EAE  D00D               	goto	i2l336
  6694  001EB0                     i2l337:
  6695  001EB0  AA9E               	btfss	3998,5,c	;volatile
  6696  001EB2  D7FE               	goto	i2l337
  6697                           
  6698                           ;exercicio_PIC_9_UART.c: 171: BUFF_COM[numero_entrada_terminal]= RCREG;
  6699  001EB4  0E8C               	movlw	low _BUFF_COM
  6700  001EB6  2432               	addwf	_numero_entrada_terminal,w,c
  6701  001EB8  6ED9               	movwf	fsr2l,c
  6702  001EBA  0E00               	movlw	high _BUFF_COM
  6703  001EBC  2033               	addwfc	_numero_entrada_terminal+1,w,c
  6704  001EBE  6EDA               	movwf	fsr2h,c
  6705  001EC0  CFAE FFDF          	movff	4014,indf2	;volatile
  6706                           
  6707                           ;exercicio_PIC_9_UART.c: 172: numero_entrada_terminal++;
  6708  001EC4  4A32               	infsnz	_numero_entrada_terminal,f,c
  6709  001EC6  2A33               	incf	_numero_entrada_terminal+1,f,c
  6710                           
  6711                           ;exercicio_PIC_9_UART.c: 173: }
  6712  001EC8  D009               	goto	i2l341
  6713  001ECA                     i2l336:
  6714                           
  6715                           ;exercicio_PIC_9_UART.c: 174: else{
  6716                           ;exercicio_PIC_9_UART.c: 175: PIR1bits.RCIF=0;
  6717  001ECA  9A9E               	bcf	3998,5,c	;volatile
  6718                           
  6719                           ;exercicio_PIC_9_UART.c: 176: numero_entrada_terminal=0;
  6720  001ECC  0E00               	movlw	0
  6721  001ECE  6E33               	movwf	_numero_entrada_terminal+1,c
  6722  001ED0  0E00               	movlw	0
  6723  001ED2  6E32               	movwf	_numero_entrada_terminal,c
  6724                           
  6725                           ;exercicio_PIC_9_UART.c: 177: ESTADO_COMUNICACAO = '1';
  6726  001ED4  0E00               	movlw	0
  6727  001ED6  6E31               	movwf	_ESTADO_COMUNICACAO+1,c
  6728  001ED8  0E31               	movlw	49
  6729  001EDA  6E30               	movwf	_ESTADO_COMUNICACAO,c
  6730  001EDC                     i2l341:
  6731  001EDC  C00E  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  6732  001EE0  C00D  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  6733  001EE4  C00C  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  6734  001EE8  C00B  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  6735  001EEC  C00A  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  6736  001EF0  C009  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  6737  001EF4  C008  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  6738  001EF8  C007  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  6739  001EFC  C006  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  6740  001F00  C005  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  6741  001F04  C004  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  6742  001F08  C003  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  6743  001F0C  C002  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  6744  001F10  C001  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  6745  001F14  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6746  001F16  0011               	retfie		f
  6747  001F18                     __end_of_SerialRxPinInterrupt:
  6748                           	opt stack 0
  6749                           pclatu	equ	0xFFB
  6750                           pclath	equ	0xFFA
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           intcon	equ	0xFF2
  6758                           postinc0	equ	0xFEE
  6759                           fsr0h	equ	0xFEA
  6760                           fsr0l	equ	0xFE9
  6761                           wreg	equ	0xFE8
  6762                           indf1	equ	0xFE7
  6763                           postinc1	equ	0xFE6
  6764                           postdec1	equ	0xFE5
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           postinc2	equ	0xFDE
  6769                           postdec2	equ	0xFDD
  6770                           plusw2	equ	0xFDB
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           pclatu	equ	0xFFB
  6775                           pclath	equ	0xFFA
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           indf1	equ	0xFE7
  6788                           postinc1	equ	0xFE6
  6789                           postdec1	equ	0xFE5
  6790                           fsr1h	equ	0xFE2
  6791                           fsr1l	equ	0xFE1
  6792                           indf2	equ	0xFDF
  6793                           postinc2	equ	0xFDE
  6794                           postdec2	equ	0xFDD
  6795                           plusw2	equ	0xFDB
  6796                           fsr2h	equ	0xFDA
  6797                           fsr2l	equ	0xFD9
  6798                           status	equ	0xFD8
  6799                           
  6800                           	psect	rparam
  6801  0000                     pclatu	equ	0xFFB
  6802                           pclath	equ	0xFFA
  6803                           tblptru	equ	0xFF8
  6804                           tblptrh	equ	0xFF7
  6805                           tblptrl	equ	0xFF6
  6806                           tablat	equ	0xFF5
  6807                           prodh	equ	0xFF4
  6808                           prodl	equ	0xFF3
  6809                           intcon	equ	0xFF2
  6810                           postinc0	equ	0xFEE
  6811                           fsr0h	equ	0xFEA
  6812                           fsr0l	equ	0xFE9
  6813                           wreg	equ	0xFE8
  6814                           indf1	equ	0xFE7
  6815                           postinc1	equ	0xFE6
  6816                           postdec1	equ	0xFE5
  6817                           fsr1h	equ	0xFE2
  6818                           fsr1l	equ	0xFE1
  6819                           indf2	equ	0xFDF
  6820                           postinc2	equ	0xFDE
  6821                           postdec2	equ	0xFDD
  6822                           plusw2	equ	0xFDB
  6823                           fsr2h	equ	0xFDA
  6824                           fsr2l	equ	0xFD9
  6825                           status	equ	0xFD8
  6826                           
  6827                           	psect	temp
  6828  000051                     btemp:
  6829                           	opt stack 0
  6830  000051                     	ds	1
  6831  0000                     int$flags	set	btemp
  6832                           pclatu	equ	0xFFB
  6833                           pclath	equ	0xFFA
  6834                           tblptru	equ	0xFF8
  6835                           tblptrh	equ	0xFF7
  6836                           tblptrl	equ	0xFF6
  6837                           tablat	equ	0xFF5
  6838                           prodh	equ	0xFF4
  6839                           prodl	equ	0xFF3
  6840                           intcon	equ	0xFF2
  6841                           postinc0	equ	0xFEE
  6842                           fsr0h	equ	0xFEA
  6843                           fsr0l	equ	0xFE9
  6844                           wreg	equ	0xFE8
  6845                           indf1	equ	0xFE7
  6846                           postinc1	equ	0xFE6
  6847                           postdec1	equ	0xFE5
  6848                           fsr1h	equ	0xFE2
  6849                           fsr1l	equ	0xFE1
  6850                           indf2	equ	0xFDF
  6851                           postinc2	equ	0xFDE
  6852                           postdec2	equ	0xFDD
  6853                           plusw2	equ	0xFDB
  6854                           fsr2h	equ	0xFDA
  6855                           fsr2l	equ	0xFD9
  6856                           status	equ	0xFD8


Data Sizes:
    Strings     118
    Constant    10
    Data        26
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      80
    BANK0           160     37      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), str(BANK0[16]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[20]), STR_5(CODE[17]), STR_3(CODE[23]), STR_2(CODE[21]), 
		 -> STR_1(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    controla_despertador@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    tratar_relogio@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    tratar_relogio@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    checa_botao@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    checa_botao@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    checa_botao@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 

    decrementa_variavel@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    decrementa_variavel@Calendario	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Calendario(COMRAM[2]), 

    decrementa_variavel@Relogio	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Relogio(COMRAM[2]), 

    incrementa_variavel@Despertador	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Despertador(COMRAM[2]), 

    incrementa_variavel@Calendario	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Calendario(COMRAM[2]), 

    incrementa_variavel@Relogio	PTR struct . size(2) Largest target is 2
		 -> checa_botao@Relogio(COMRAM[2]), 

    exibir_lcd@Despertador	PTR struct . size(2) Largest target is 6
		 -> Despertador(COMRAM[6]), 

    exibir_lcd@Calendario	PTR struct . size(2) Largest target is 6
		 -> Calendario(COMRAM[6]), 

    exibir_lcd@Relogio	PTR struct . size(2) Largest target is 6
		 -> Relogio(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_exibir_lcd
    _pisca_cursor->_SetDDRamAddr
    _maquina_estado->_trata_comando
    _maquina_estado->_tx_data
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _exibir_lcd->_sprintf
    _gambiarra_pro_serial->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx
    ___awdiv->___awmod
    _checa_botao->_decrementa_variavel
    _incrementa_variavel->_controla_despertador
    _decrementa_variavel->_controla_despertador

Critical Paths under _SerialRxPinInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_exibir_lcd
    _exibir_lcd->_sprintf
    _gambiarra_pro_serial->_sprintf

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15882
                                             45 COMRAM     2     2      0
                       _WriteCmdXLCD
                        _checa_botao
                         _exibir_lcd
                          _init_XLCD
                     _maquina_estado
                       _pisca_cursor
                     _tratar_relogio
 ---------------------------------------------------------------------------------
 (1) _tratar_relogio                                      11     7      4     986
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _pisca_cursor                                         0     0      0      66
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _maquina_estado                                       2     2      0      68
                                             16 COMRAM     2     2      0
                      _trata_comando
                            _tx_data
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trata_comando                                        2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _exibir_lcd                                          32    26      6   11386
                                             43 COMRAM     2     2      0
                                              7 BANK0     30    24      6
                       _SetDDRamAddr
                            ___awdiv
                            ___awmod
                          _gambiarra
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _gambiarra                                            0     0      0    2896
               _gambiarra_pro_serial
 ---------------------------------------------------------------------------------
 (3) _gambiarra_pro_serial                                 0     0      0    2896
                       _SetDDRamAddr
                       _WriteCmdXLCD
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    17     16    2247
                                             26 COMRAM    17     1     16
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     517
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1988
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1992
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _checa_botao                                          8     2      6    3016
                                             28 COMRAM     8     2      6
                _decrementa_variavel
                _incrementa_variavel
                   _posiciona_cursor
                        _trocar_tela
 ---------------------------------------------------------------------------------
 (2) _trocar_tela                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _posiciona_cursor                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _incrementa_variavel                                  8     2      6    1288
                                             18 COMRAM     8     2      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (2) _decrementa_variavel                                 10     4      6    1288
                                             18 COMRAM    10     4      6
               _controla_despertador
 ---------------------------------------------------------------------------------
 (3) _controla_despertador                                 4     2      2     480
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _SerialRxPinInterrupt                                14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _checa_botao
     _decrementa_variavel
       _controla_despertador
     _incrementa_variavel
       _controla_despertador
     _posiciona_cursor
     _trocar_tela
   _exibir_lcd
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _gambiarra
       _gambiarra_pro_serial
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _WriteCmdXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquina_estado
     _trata_comando
     _tx_data
   _pisca_cursor
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
   _tratar_relogio

 _SerialRxPinInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      5D       5       58.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD      20        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Nov 12 21:36:40 2019

   __end_of_gambiarra_pro_serial 2190                     ___awdiv@sign 001A  
               ??_maquina_estado 0011    __size_of_controla_despertador 0140  
                            l132 1FC6                              l124 1F36  
                            l133 1FC2                              l128 1F8C  
                            l137 1FE4                              l129 1F88  
                            l172 106A                              l325 1A42  
                            l183 1C0E                              l184 1C42  
                            l176 11AA                              l168 0F86  
                            l169 0FBA                              l290 24C0  
                            l178 1258                              l187 1CE4  
                            l381 24AC                              l295 24DC  
                            l298 24F6                              l905 23C4  
                            l895 22A4                              u740 235A  
                            u760 237A                              _str 0093  
          __size_of_WriteCmdXLCD 003E                     ___awmod@sign 0014  
                            wreg 000FE8                       _Calendario 003F  
                  _trata_comando 24F8                      _trocar_tela 2596  
                   __CFG_WDT$OFF 000000                             l1210 2578  
                           l3030 227A                             l2312 1CB0  
                           l3040 229A                             l3032 227E  
                           l3112 1B98                             l3104 1B3C  
                           l2306 1C80                             l2410 16BA  
                           l2402 1664                             l2074 2588  
                           l3050 23A2                             l3106 1B42  
                           l3114 1BA4                             l2500 1426  
                           l3028 2272                             l3052 23A6  
                           l3116 1BBE                             l2430 1794  
                           l2422 173E                             l2414 16EC  
                           l2406 169E                             l3062 1A6A  
                           l2504 1442                             l2512 14A0  
                           l2440 17F0                             l2600 20F0  
                           l3056 23BA                             l3048 239A  
                           l3160 0CDE                             l1368 2562  
                           l2360 203C                             l2530 1554  
                           l2522 1502                             l2426 175A  
                           l2418 1704                             l2434 17B0  
                           l3074 1AB4                             l2354 2022  
                           l2508 1484                             l2460 18AA  
                           l2452 1854                             l2444 180A  
                           l2604 20FA                             l2620 21A4  
                           l3084 1AE4                             l3068 1A86  
                           l2372 206C                             l2364 204C  
                           l2356 202C                             l3244 1962  
                           l2534 1596                             l2526 153C  
                           l2518 14E8                             l2390 1600  
                           l2710 1F52                             l2630 21C6  
                           l2294 2234                             l3086 1AEA  
                           l3174 0F22                             l3270 19FA  
                           l2480 1334                             l2472 12E2  
                           l2456 188E                             l2448 183C  
                           l2608 2108                             l2632 21CA  
                           l2640 21E8                             l2624 21B0  
                           l2288 2202                             l2376 207C  
                           l2368 205C                             l2544 24CC  
                           l2538 15B2                             l2394 161A  
                           l2706 1F3A                             l3098 1B20  
                           l2650 252E                             l2730 1D22  
                           l2810 0FF8                             l3282 1A3E  
                           l2492 13CC                             l2484 1376  
                           l2476 131C                             l2468 12C8  
                           l1596 236A                             l2644 21F6  
                           l2636 21DE                             l2628 21BE  
                           l3284 1A44                             l2398 164C  
                           l2590 20D0                             l2582 20B2  
                           l2750 1D70                             l2742 1D50  
                           l2734 1D30                             l2830 111C  
                           l2822 109E                             l3278 1A28  
                           l2496 13E4                             l2488 1392  
                           l2592 20D4                             l2576 20A2  
                           l2816 1028                             l2770 1DC0  
                           l2762 1DA0                             l2754 1D80  
                           l2746 1D60                             l2738 1D40  
                           l2834 1164                             l2588 20C8  
                           l2852 244C                             l2860 2460  
                           l2780 1DE6                             l2844 1224  
                           l2828 1102                             l2854 2452  
                           l2766 1DB0                             l2758 1D90  
                           l2774 1DD0                             l2838 11C8  
                           l2792 1E14                             l2784 1DF4  
                           l2796 1E24                             l2788 1E04  
                           STR_1 0822                             STR_2 0838  
                           STR_3 080B                             STR_4 0872  
                           STR_5 0861                             STR_6 084D  
                           u1700 222C                             u1710 2254  
                           u1730 1BEC                             u3307 1F26  
                           u1707 2222                             u3317 1F60  
                           u1717 224A                             u1750 1C5E  
                           u3327 1F9A                             u2480 1F4A  
                           u3337 1FD4                             u3257 19E0  
                           u1770 1CD0                             u3267 2504  
                           u1685 22C4                             u3277 257A  
                           u2830 1184                             u2750 0F64  
                           u3287 2568                             u3297 258A  
                           u2850 1244                             u2770 0FD6  
                           _PEIE 007F96                             u2790 1048  
                           _RCIE 007CED                             _RCIF 007CF5  
                           _RCIP 007CFD                             _TMR0 000FD6  
                           _TXIF 007CF4              _incrementa_variavel 15C0  
                           _main 18B8           checa_botao@Despertador 001F  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0051           __size_of_WriteDataXLCD 003E  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                     ___param_bank 000000  
                    _Delay10TCYx 2586            tratar_relogio@Relogio 000F  
                   _WriteCmdXLCD 240C                      _Delay1KTCYx 2576  
           ?_incrementa_variavel 0013                    ?_SetDDRamAddr 0001  
                          ?_main 0001                  __end_of___awdiv 2112  
                __end_of___awmod 2200        __size_of_posiciona_cursor 0046  
                ___awdiv@divisor 0017                  __end_of___lwdiv 22AE  
                __end_of___lwmod 23CE                            i2l341 1EDC  
                          i2l336 1ECA                            i2l337 1EB0  
                ___awdiv@counter 0019                            _RCREG 000FAE  
                          _RCSTA 000FAB             __size_of_checa_botao 00D2  
                          _SPBRG 000FAF                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD            __size_of_Delay10KTCYx 0016  
                          _TXSTA 000FAC                   ?_trata_comando 0001  
                __end_of_dpowers 080B                            pclath 000FFA  
                          tablat 000FF5                            plusw2 000FDB  
                __end_of_tx_data 24F8                            status 000FD8  
                __end_of_sprintf 1BCC                  __initialization 2300  
                   __end_of_main 1A5C                 __end_of_BusyXLCD 24C0  
                 _tratar_relogio 0F32                     _Delay10KTCYx 2560  
          ??_incrementa_variavel 0019            __size_of_DelayPORXLCD 0008  
                 ??_SetDDRamAddr 0010                 __end_of_OpenXLCD 208E  
                         ??_main 002E                    __activetblptr 000002  
                  _WriteDataXLCD 23CE                      _Despertador 0045  
                         _ADCON1 000FC1                 ___awdiv@dividend 0015  
           _gambiarra_pro_serial 2112                           i2l2990 1EA0  
                         i2l2986 1E86                           _TMR0IF 007F92  
                   _DelayPORXLCD 25A4           __end_of_tratar_relogio 1280  
                    exibir_lcd@a 0079                      exibir_lcd@b 007B  
                    exibir_lcd@c 007D                      exibir_lcd@d 007F  
                    exibir_lcd@e 0081                      exibir_lcd@f 0083  
                    exibir_lcd@g 006D                      exibir_lcd@h 006F  
                    exibir_lcd@i 0071                      exibir_lcd@j 0073  
                    exibir_lcd@k 0075                      exibir_lcd@l 0077  
                      ??___awdiv 0019                        ??___awmod 0013  
                      ??___lwdiv 0013                        ??___lwmod 001A  
                         _cursor 0036                           clear_0 2326  
                         clear_1 2332                 ___awdiv@quotient 001B  
                ___awmod@divisor 0011                  ___awmod@counter 0013  
                 ?_WriteDataXLCD 0001            exibir_lcd@Despertador 0069  
                ??_trata_comando 000F                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ??_tx_data 000F  
          ?_gambiarra_pro_serial 0001                        ??_sprintf 002B  
                     __accesstop 0060          __end_of__initialization 2338  
                __CFG_PBADEN$OFF 000000                    ___rparam_used 000001  
  __size_of_SerialRxPinInterrupt 1F10                  ?_tratar_relogio 000F  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2546  
             __size_of_gambiarra 0006                 _posiciona_cursor 2346  
    __end_of_decrementa_variavel 15C0                     ?_trocar_tela 0001  
         __size_of_DelayFor18TCY 0008                       __pbssBANK0 0085  
                      ?_BusyXLCD 0001     __end_of_controla_despertador 1D0C  
                WriteCmdXLCD@cmd 0010             __end_of_SetDDRamAddr 2300  
             __size_of_init_XLCD 001E                        ?_OpenXLCD 0001  
              WriteDataXLCD@data 0010                     ?_Delay10TCYx 0001  
                  ?_pisca_cursor 0001                  ??_WriteDataXLCD 0010  
                   ?_Delay1KTCYx 0001           ??_gambiarra_pro_serial 002C  
             __size_of_putrsXLCD 005C                       ??_BusyXLCD 0010  
              __end_of_gambiarra 25BA                       ??_OpenXLCD 0014  
                        __Hparam 0000                          _Relogio 004B  
                        __Lparam 0000                          ___awdiv 208E  
                  _DelayFor18TCY 25AC                          ___awmod 2190  
                 ??_pisca_cursor 0014                       _exibir_lcd 0882  
                        ___lwdiv 225C                          ___lwmod 238C  
                   __psmallconst 0800                    ??_checa_botao 0023  
                        __pcinit 2300                  putrsXLCD@buffer 0011  
                Delay10TCYx@unit 000F                          __ramtop 0800  
                        __ptext0 18B8                          __ptext1 0F32  
                        __ptext2 1D0C                          __ptext3 244A  
                        __ptext4 24C0                          __ptext5 24F8  
                        __ptext6 2528                          __ptext7 1FEA  
                        __ptext8 25A4                          __ptext9 2576  
                      _BUFF_RESP 0085                __end_of_init_XLCD 2546  
                      _T0CONbits 000FD5                          _dpowers 0801  
               ___awmod@dividend 000F                          _tx_data 24C0  
        __size_of_maquina_estado 003C                          _sprintf 1A5C  
                 __pintcode_body 1E36    decrementa_variavel@Calendario 0017  
           end_of_initialization 2338               _ESTADO_COMUNICACAO 0030  
                  __Lmediumconst 0000                          int_func 1E36  
       tratar_relogio@Calendario 0011      __end_of_incrementa_variavel 18B8  
                 ?_DelayFor18TCY 0001                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
              __end_of_putrsXLCD 225C             _controla_despertador 1BCC  
                      _PORTAbits 000F80                        _PORTCbits 000F82  
                      _PORTDbits 000F83  controla_despertador@Despertador 000F  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94              __end_of_checa_botao 1FEA  
                      _TRISDbits 000F95            __size_of_SetDDRamAddr 0052  
        _numero_entrada_terminal 0032               checa_botao@Relogio 001D  
           __size_of_trocar_tela 000E                 ??_tratar_relogio 0013  
       __end_of_posiciona_cursor 238C                      ?_exibir_lcd 0067  
           __size_of_Delay10TCYx 0010            ?_controla_despertador 000F  
                   _SetDDRamAddr 22AE             __size_of_Delay1KTCYx 0010  
   __end_of_SerialRxPinInterrupt 1F18             exibir_lcd@Calendario 006B  
             SetDDRamAddr@DDaddr 0013            __end_of_trata_comando 2528  
            start_initialization 2300             __end_of_pisca_cursor 1E36  
              __size_of_BusyXLCD 003A                  ??_DelayFor18TCY 0010  
              __size_of_OpenXLCD 00A4                    ?_WriteCmdXLCD 0001  
                    tx_data@cont 000F                      __pdataBANK0 00A3  
                    _checa_botao 1F18                      __pbssCOMRAM 0030  
                  __pcstackBANK0 0060                   _maquina_estado 244A  
                Delay1KTCYx@unit 000F              __size_of_exibir_lcd 06B0  
   __size_of_decrementa_variavel 0340                      sprintf@flag 0062  
                    sprintf@prec 0063                 ___lwdiv@dividend 000F  
                      _gambiarra 25B4                        __pintcode 0008  
                 ??_WriteCmdXLCD 0010                         ?___awdiv 0015  
                       ?___awmod 000F                    ?_Delay10KTCYx 0001  
                      _flag_time 003E                         ?___lwdiv 000F  
         ??_controla_despertador 0011                         ?___lwmod 0016  
                      _despertar 003D            __end_of_WriteDataXLCD 240C  
                    __smallconst 0800           __end_of_maquina_estado 2486  
                      _init_XLCD 2528                 ___lwdiv@quotient 0014  
                       ?_tx_data 0001                         ?_sprintf 001B  
  __size_of_gambiarra_pro_serial 007E                         _BUFF_COM 008C  
                       _LATBbits 000F8A       incrementa_variavel@Relogio 0013  
                  ?_DelayPORXLCD 0001             _SerialRxPinInterrupt 0008  
                       _PIR1bits 000F9E                  OpenXLCD@lcdtype 0014  
                       i2u296_40 1E94                       ?_gambiarra 0001  
                 ??_Delay10KTCYx 000F       decrementa_variavel@Relogio 0013  
                      _putrsXLCD 2200                  ?_maquina_estado 0001  
          __size_of_pisca_cursor 012A                 Delay10KTCYx@unit 0010  
                     ?_init_XLCD 0001   incrementa_variavel@Despertador 0015  
                      copy_data0 2314                         _BusyXLCD 2486  
                 ??_DelayPORXLCD 0010                ?_posiciona_cursor 0001  
          ?_SerialRxPinInterrupt 0001                         _OpenXLCD 1FEA  
                       __Hrparam 0000               ??_posiciona_cursor 000F  
                       __Lrparam 0000                     ??_exibir_lcd 002C  
               __size_of___awdiv 0084                 __size_of___awmod 0070  
                   _pisca_cursor 1D0C                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042     __size_of_incrementa_variavel 02F8  
                   _tela_exibida 003A                       sprintf@val 0064  
                     ?_putrsXLCD 0011    incrementa_variavel@Calendario 0017  
                ___lwdiv@divisor 0011                  ___lwdiv@counter 0013  
                       __ptext10 2560                         __ptext11 0882  
                       __ptext20 240C                         __ptext12 25B4  
                       __ptext21 22AE                         __ptext13 2112  
                       __ptext30 1280                         __ptext22 25AC  
                       __ptext14 1A5C                         __ptext31 1BCC  
                       __ptext23 2586                         __ptext15 238C  
                       __ptext24 2190                         __ptext16 225C  
                       __ptext25 208E                         __ptext17 2200  
                       __ptext26 1F18                         __ptext18 23CE  
                       __ptext27 2596                         __ptext19 2486  
                       __ptext28 2346                         __ptext29 15C0  
                  ??_trocar_tela 000F                exibir_lcd@Relogio 0067  
           __end_of_WriteCmdXLCD 244A                 __size_of_tx_data 0038  
                       _contador 0038                 __size_of_sprintf 0170  
             __end_of_exibir_lcd 0F32                    __size_of_main 01A4  
                    ??_gambiarra 002C                    ??_Delay10TCYx 000F  
                       int$flags 0051                    ??_Delay1KTCYx 000F  
            _decrementa_variavel 1280                     ?_checa_botao 001D  
                     _INTCONbits 000FF2                      _qtdDias_mes 00A3  
                    ??_init_XLCD 0015             __end_of_Delay10KTCYx 2576  
                       intlevel2 0000                        sprintf@ap 0060  
           ?_decrementa_variavel 0013                        sprintf@sp 001B  
               ___lwmod@dividend 0016           ??_SerialRxPinInterrupt 0001  
            __end_of_trocar_tela 25A4                      _serial_data 003C  
         __size_of_trata_comando 0030            __end_of_DelayFor18TCY 25B4  
        __size_of_tratar_relogio 034E              __end_of_Delay10TCYx 2596  
                       sprintf@c 0066                         sprintf@f 001D  
           __end_of_DelayPORXLCD 25AC                      ??_putrsXLCD 0013  
                ___lwmod@divisor 0018              __end_of_Delay1KTCYx 2586  
                ___lwmod@counter 001A            checa_botao@Calendario 0021  
          ??_decrementa_variavel 0019         _controle_tempo_despertar 0034  
 decrementa_variavel@Despertador 0015  
